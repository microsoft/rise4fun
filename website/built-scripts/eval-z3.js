var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var eval_z3_exports = {};
__export(eval_z3_exports, {
  compileZ3JS: () => compileZ3JS,
  evalZ3JS: () => evalZ3JS
});
module.exports = __toCommonJS(eval_z3_exports);
var define_TS_LIBS_default = { "lib.es2015.collection.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface Map<K,V>{clear():void;delete(key:K):boolean;forEach(callbackfn:(value:V,key:K,map:Map<K,V>)=>void,thisArg?:any):void;get(key:K):V|undefined;has(key:K):boolean;set(key:K,value:V):this;readonly size:number;}interface MapConstructor{new():Map<any,any>;new<K,V>(entries?:readonly(readonly[K,V])[]|null):Map<K,V>;readonly prototype:Map<any,any>;}declare var Map:MapConstructor;interface ReadonlyMap<K,V>{forEach(callbackfn:(value:V,key:K,map:ReadonlyMap<K,V>)=>void,thisArg?:any):void;get(key:K):V|undefined;has(key:K):boolean;readonly size:number;}interface WeakMap<K extends object,V>{delete(key:K):boolean;get(key:K):V|undefined;has(key:K):boolean;set(key:K,value:V):this;}interface WeakMapConstructor{new<K extends object=object,V=any>(entries?:readonly[K,V][]|null):WeakMap<K,V>;readonly prototype:WeakMap<object,any>;}declare var WeakMap:WeakMapConstructor;interface Set<T>{add(value:T):this;clear():void;delete(value:T):boolean;forEach(callbackfn:(value:T,value2:T,set:Set<T>)=>void,thisArg?:any):void;has(value:T):boolean;readonly size:number;}interface SetConstructor{new<T=any>(values?:readonly T[]|null):Set<T>;readonly prototype:Set<any>;}declare var Set:SetConstructor;interface ReadonlySet<T>{forEach(callbackfn:(value:T,value2:T,set:ReadonlySet<T>)=>void,thisArg?:any):void;has(value:T):boolean;readonly size:number;}interface WeakSet<T extends object>{add(value:T):this;delete(value:T):boolean;has(value:T):boolean;}interface WeakSetConstructor{new<T extends object=object>(values?:readonly T[]|null):WeakSet<T>;readonly prototype:WeakSet<object>;}declare var WeakSet:WeakSetConstructor;', "lib.es2015.core.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface Array<T>{find<S extends T>(predicate:(this:void,value:T,index:number,obj:T[])=>value is S,thisArg?:any):S|undefined;find(predicate:(value:T,index:number,obj:T[])=>unknown,thisArg?:any):T|undefined;findIndex(predicate:(value:T,index:number,obj:T[])=>unknown,thisArg?:any):number;fill(value:T,start?:number,end?:number):this;copyWithin(target:number,start:number,end?:number):this;}interface ArrayConstructor{from<T>(arrayLike:ArrayLike<T>):T[];from<T,U>(arrayLike:ArrayLike<T>,mapfn:(v:T,k:number)=>U,thisArg?:any):U[];of<T>(...items:T[]):T[];}interface DateConstructor{new(value:number|string|Date):Date;}interface Function{readonly name:string;}interface Math{clz32(x:number):number;imul(x:number,y:number):number;sign(x:number):number;log10(x:number):number;log2(x:number):number;log1p(x:number):number;expm1(x:number):number;cosh(x:number):number;sinh(x:number):number;tanh(x:number):number;acosh(x:number):number;asinh(x:number):number;atanh(x:number):number;hypot(...values:number[]):number;trunc(x:number):number;fround(x:number):number;cbrt(x:number):number;}interface NumberConstructor{readonly EPSILON:number;isFinite(number:unknown):boolean;isInteger(number:unknown):boolean;isNaN(number:unknown):boolean;isSafeInteger(number:unknown):boolean;readonly MAX_SAFE_INTEGER:number;readonly MIN_SAFE_INTEGER:number;parseFloat(string:string):number;parseInt(string:string,radix?:number):number;}interface ObjectConstructor{assign<T extends{},U>(target:T,source:U):T&U;assign<T extends{},U,V>(target:T,source1:U,source2:V):T&U&V;assign<T extends{},U,V,W>(target:T,source1:U,source2:V,source3:W):T&U&V&W;assign(target:object,...sources:any[]):any;getOwnPropertySymbols(o:any):symbol[];keys(o:{}):string[];is(value1:any,value2:any):boolean;setPrototypeOf(o:any,proto:object|null):any;}interface ReadonlyArray<T>{find<S extends T>(predicate:(this:void,value:T,index:number,obj:readonly T[])=>value is S,thisArg?:any):S|undefined;find(predicate:(value:T,index:number,obj:readonly T[])=>unknown,thisArg?:any):T|undefined;findIndex(predicate:(value:T,index:number,obj:readonly T[])=>unknown,thisArg?:any):number;}interface RegExp{readonly flags:string;readonly sticky:boolean;readonly unicode:boolean;}interface RegExpConstructor{new(pattern:RegExp|string,flags?:string):RegExp;(pattern:RegExp|string,flags?:string):RegExp;}interface String{codePointAt(pos:number):number|undefined;includes(searchString:string,position?:number):boolean;endsWith(searchString:string,endPosition?:number):boolean;normalize(form:"NFC"|"NFD"|"NFKC"|"NFKD"):string;normalize(form?:string):string;repeat(count:number):string;startsWith(searchString:string,position?:number):boolean;anchor(name:string):string;big():string;blink():string;bold():string;fixed():string;fontcolor(color:string):string;fontsize(size:number):string;fontsize(size:string):string;italics():string;link(url:string):string;small():string;strike():string;sub():string;sup():string;}interface StringConstructor{fromCodePoint(...codePoints:number[]):string;raw(template:{raw:readonly string[]|ArrayLike<string>},...substitutions:any[]):string;}', "lib.es2015.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es5" />\r\n/// <reference lib="es2015.core" />\r\n/// <reference lib="es2015.collection" />\r\n/// <reference lib="es2015.iterable" />\r\n/// <reference lib="es2015.generator" />\r\n/// <reference lib="es2015.promise" />\r\n/// <reference lib="es2015.proxy" />\r\n/// <reference lib="es2015.reflect" />\r\n/// <reference lib="es2015.symbol" />\r\n/// <reference lib="es2015.symbol.wellknown" />\r\n', "lib.es2015.generator.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2015.iterable" />\r\ninterface Generator<T=unknown,TReturn=any,TNext=unknown>extends Iterator<T,TReturn,TNext>{next(...args:[]|[TNext]):IteratorResult<T,TReturn>;return(value:TReturn):IteratorResult<T,TReturn>;throw(e:any):IteratorResult<T,TReturn>;[Symbol.iterator]():Generator<T,TReturn,TNext>;}interface GeneratorFunction{new(...args:any[]):Generator;(...args:any[]):Generator;readonly length:number;readonly name:string;readonly prototype:Generator;}interface GeneratorFunctionConstructor{new(...args:string[]):GeneratorFunction;(...args:string[]):GeneratorFunction;readonly length:number;readonly name:string;readonly prototype:GeneratorFunction;}', "lib.es2015.iterable.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2015.symbol" />\r\ninterface SymbolConstructor{readonly iterator:unique symbol;}interface IteratorYieldResult<TYield>{done?:false;value:TYield;}interface IteratorReturnResult<TReturn>{done:true;value:TReturn;}type IteratorResult<T,TReturn=any>=IteratorYieldResult<T>|IteratorReturnResult<TReturn>;interface Iterator<T,TReturn=any,TNext=undefined>{next(...args:[]|[TNext]):IteratorResult<T,TReturn>;return?(value?:TReturn):IteratorResult<T,TReturn>;throw?(e?:any):IteratorResult<T,TReturn>;}interface Iterable<T>{[Symbol.iterator]():Iterator<T>;}interface IterableIterator<T>extends Iterator<T>{[Symbol.iterator]():IterableIterator<T>;}interface Array<T>{[Symbol.iterator]():IterableIterator<T>;entries():IterableIterator<[number,T]>;keys():IterableIterator<number>;values():IterableIterator<T>;}interface ArrayConstructor{from<T>(iterable:Iterable<T>|ArrayLike<T>):T[];from<T,U>(iterable:Iterable<T>|ArrayLike<T>,mapfn:(v:T,k:number)=>U,thisArg?:any):U[];}interface ReadonlyArray<T>{[Symbol.iterator]():IterableIterator<T>;entries():IterableIterator<[number,T]>;keys():IterableIterator<number>;values():IterableIterator<T>;}interface IArguments{[Symbol.iterator]():IterableIterator<any>;}interface Map<K,V>{[Symbol.iterator]():IterableIterator<[K,V]>;entries():IterableIterator<[K,V]>;keys():IterableIterator<K>;values():IterableIterator<V>;}interface ReadonlyMap<K,V>{[Symbol.iterator]():IterableIterator<[K,V]>;entries():IterableIterator<[K,V]>;keys():IterableIterator<K>;values():IterableIterator<V>;}interface MapConstructor{new():Map<any,any>;new<K,V>(iterable?:Iterable<readonly[K,V]>|null):Map<K,V>;}interface WeakMap<K extends object,V>{}interface WeakMapConstructor{new<K extends object,V>(iterable:Iterable<readonly[K,V]>):WeakMap<K,V>;}interface Set<T>{[Symbol.iterator]():IterableIterator<T>;entries():IterableIterator<[T,T]>;keys():IterableIterator<T>;values():IterableIterator<T>;}interface ReadonlySet<T>{[Symbol.iterator]():IterableIterator<T>;entries():IterableIterator<[T,T]>;keys():IterableIterator<T>;values():IterableIterator<T>;}interface SetConstructor{new<T>(iterable?:Iterable<T>|null):Set<T>;}interface WeakSet<T extends object>{}interface WeakSetConstructor{new<T extends object=object>(iterable:Iterable<T>):WeakSet<T>;}interface Promise<T>{}interface PromiseConstructor{all<T>(values:Iterable<T|PromiseLike<T>>):Promise<Awaited<T>[]>;race<T>(values:Iterable<T|PromiseLike<T>>):Promise<Awaited<T>>;}interface String{[Symbol.iterator]():IterableIterator<string>;}interface Int8Array{[Symbol.iterator]():IterableIterator<number>;entries():IterableIterator<[number,number]>;keys():IterableIterator<number>;values():IterableIterator<number>;}interface Int8ArrayConstructor{new(elements:Iterable<number>):Int8Array;from(arrayLike:Iterable<number>,mapfn?:(v:number,k:number)=>number,thisArg?:any):Int8Array;}interface Uint8Array{[Symbol.iterator]():IterableIterator<number>;entries():IterableIterator<[number,number]>;keys():IterableIterator<number>;values():IterableIterator<number>;}interface Uint8ArrayConstructor{new(elements:Iterable<number>):Uint8Array;from(arrayLike:Iterable<number>,mapfn?:(v:number,k:number)=>number,thisArg?:any):Uint8Array;}interface Uint8ClampedArray{[Symbol.iterator]():IterableIterator<number>;entries():IterableIterator<[number,number]>;keys():IterableIterator<number>;values():IterableIterator<number>;}interface Uint8ClampedArrayConstructor{new(elements:Iterable<number>):Uint8ClampedArray;from(arrayLike:Iterable<number>,mapfn?:(v:number,k:number)=>number,thisArg?:any):Uint8ClampedArray;}interface Int16Array{[Symbol.iterator]():IterableIterator<number>;entries():IterableIterator<[number,number]>;keys():IterableIterator<number>;values():IterableIterator<number>;}interface Int16ArrayConstructor{new(elements:Iterable<number>):Int16Array;from(arrayLike:Iterable<number>,mapfn?:(v:number,k:number)=>number,thisArg?:any):Int16Array;}interface Uint16Array{[Symbol.iterator]():IterableIterator<number>;entries():IterableIterator<[number,number]>;keys():IterableIterator<number>;values():IterableIterator<number>;}interface Uint16ArrayConstructor{new(elements:Iterable<number>):Uint16Array;from(arrayLike:Iterable<number>,mapfn?:(v:number,k:number)=>number,thisArg?:any):Uint16Array;}interface Int32Array{[Symbol.iterator]():IterableIterator<number>;entries():IterableIterator<[number,number]>;keys():IterableIterator<number>;values():IterableIterator<number>;}interface Int32ArrayConstructor{new(elements:Iterable<number>):Int32Array;from(arrayLike:Iterable<number>,mapfn?:(v:number,k:number)=>number,thisArg?:any):Int32Array;}interface Uint32Array{[Symbol.iterator]():IterableIterator<number>;entries():IterableIterator<[number,number]>;keys():IterableIterator<number>;values():IterableIterator<number>;}interface Uint32ArrayConstructor{new(elements:Iterable<number>):Uint32Array;from(arrayLike:Iterable<number>,mapfn?:(v:number,k:number)=>number,thisArg?:any):Uint32Array;}interface Float32Array{[Symbol.iterator]():IterableIterator<number>;entries():IterableIterator<[number,number]>;keys():IterableIterator<number>;values():IterableIterator<number>;}interface Float32ArrayConstructor{new(elements:Iterable<number>):Float32Array;from(arrayLike:Iterable<number>,mapfn?:(v:number,k:number)=>number,thisArg?:any):Float32Array;}interface Float64Array{[Symbol.iterator]():IterableIterator<number>;entries():IterableIterator<[number,number]>;keys():IterableIterator<number>;values():IterableIterator<number>;}interface Float64ArrayConstructor{new(elements:Iterable<number>):Float64Array;from(arrayLike:Iterable<number>,mapfn?:(v:number,k:number)=>number,thisArg?:any):Float64Array;}', "lib.es2015.promise.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface PromiseConstructor{readonly prototype:Promise<any>;new<T>(executor:(resolve:(value:T|PromiseLike<T>)=>void,reject:(reason?:any)=>void)=>void):Promise<T>;all<T extends readonly unknown[]|[]>(values:T):Promise<{-readonly[P in keyof T]:Awaited<T[P]>}>;race<T extends readonly unknown[]|[]>(values:T):Promise<Awaited<T[number]>>;reject<T=never>(reason?:any):Promise<T>;resolve():Promise<void>;resolve<T>(value:T|PromiseLike<T>):Promise<T>;}declare var Promise:PromiseConstructor;', "lib.es2015.proxy.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface ProxyHandler<T extends object>{apply?(target:T,thisArg:any,argArray:any[]):any;construct?(target:T,argArray:any[],newTarget:Function):object;defineProperty?(target:T,p:string|symbol,attributes:PropertyDescriptor):boolean;deleteProperty?(target:T,p:string|symbol):boolean;get?(target:T,p:string|symbol,receiver:any):any;getOwnPropertyDescriptor?(target:T,p:string|symbol):PropertyDescriptor|undefined;getPrototypeOf?(target:T):object|null;has?(target:T,p:string|symbol):boolean;isExtensible?(target:T):boolean;ownKeys?(target:T):ArrayLike<string|symbol>;preventExtensions?(target:T):boolean;set?(target:T,p:string|symbol,value:any,receiver:any):boolean;setPrototypeOf?(target:T,v:object|null):boolean;}interface ProxyConstructor{revocable<T extends object>(target:T,handler:ProxyHandler<T>):{proxy:T;revoke:()=>void;};new<T extends object>(target:T,handler:ProxyHandler<T>):T;}declare var Proxy:ProxyConstructor;', "lib.es2015.reflect.d.ts": '/// <reference no-default-lib="true"/>\r\ndeclare namespace Reflect{function apply(target:Function,thisArgument:any,argumentsList:ArrayLike<any>):any;function construct(target:Function,argumentsList:ArrayLike<any>,newTarget?:Function):any;function defineProperty(target:object,propertyKey:PropertyKey,attributes:PropertyDescriptor&ThisType<any>):boolean;function deleteProperty(target:object,propertyKey:PropertyKey):boolean;function get(target:object,propertyKey:PropertyKey,receiver?:any):any;function getOwnPropertyDescriptor(target:object,propertyKey:PropertyKey):PropertyDescriptor|undefined;function getPrototypeOf(target:object):object|null;function has(target:object,propertyKey:PropertyKey):boolean;function isExtensible(target:object):boolean;function ownKeys(target:object):(string|symbol)[];function preventExtensions(target:object):boolean;function set(target:object,propertyKey:PropertyKey,value:any,receiver?:any):boolean;function setPrototypeOf(target:object,proto:object|null):boolean;}', "lib.es2015.symbol.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface SymbolConstructor{readonly prototype:Symbol;(description?:string|number):symbol;for(key:string):symbol;keyFor(sym:symbol):string|undefined;}declare var Symbol:SymbolConstructor;', "lib.es2015.symbol.wellknown.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2015.symbol" />\r\ninterface SymbolConstructor{readonly hasInstance:unique symbol;readonly isConcatSpreadable:unique symbol;readonly match:unique symbol;readonly replace:unique symbol;readonly search:unique symbol;readonly species:unique symbol;readonly split:unique symbol;readonly toPrimitive:unique symbol;readonly toStringTag:unique symbol;readonly unscopables:unique symbol;}interface Symbol{[Symbol.toPrimitive](hint:string):symbol;readonly[Symbol.toStringTag]:string;}interface Array<T>{[Symbol.unscopables]():{copyWithin:boolean;entries:boolean;fill:boolean;find:boolean;findIndex:boolean;keys:boolean;values:boolean;};}interface Date{[Symbol.toPrimitive](hint:"default"):string;[Symbol.toPrimitive](hint:"string"):string;[Symbol.toPrimitive](hint:"number"):number;[Symbol.toPrimitive](hint:string):string|number;}interface Map<K,V>{readonly[Symbol.toStringTag]:string;}interface WeakMap<K extends object,V>{readonly[Symbol.toStringTag]:string;}interface Set<T>{readonly[Symbol.toStringTag]:string;}interface WeakSet<T extends object>{readonly[Symbol.toStringTag]:string;}interface JSON{readonly[Symbol.toStringTag]:string;}interface Function{[Symbol.hasInstance](value:any):boolean;}interface GeneratorFunction{readonly[Symbol.toStringTag]:string;}interface Math{readonly[Symbol.toStringTag]:string;}interface Promise<T>{readonly[Symbol.toStringTag]:string;}interface PromiseConstructor{readonly[Symbol.species]:PromiseConstructor;}interface RegExp{[Symbol.match](string:string):RegExpMatchArray|null;[Symbol.replace](string:string,replaceValue:string):string;[Symbol.replace](string:string,replacer:(substring:string,...args:any[])=>string):string;[Symbol.search](string:string):number;[Symbol.split](string:string,limit?:number):string[];}interface RegExpConstructor{readonly[Symbol.species]:RegExpConstructor;}interface String{match(matcher:{[Symbol.match](string:string):RegExpMatchArray|null;}):RegExpMatchArray|null;replace(searchValue:{[Symbol.replace](string:string,replaceValue:string):string;},replaceValue:string):string;replace(searchValue:{[Symbol.replace](string:string,replacer:(substring:string,...args:any[])=>string):string;},replacer:(substring:string,...args:any[])=>string):string;search(searcher:{[Symbol.search](string:string):number;}):number;split(splitter:{[Symbol.split](string:string,limit?:number):string[];},limit?:number):string[];}interface ArrayBuffer{readonly[Symbol.toStringTag]:string;}interface DataView{readonly[Symbol.toStringTag]:string;}interface Int8Array{readonly[Symbol.toStringTag]:"Int8Array";}interface Uint8Array{readonly[Symbol.toStringTag]:"Uint8Array";}interface Uint8ClampedArray{readonly[Symbol.toStringTag]:"Uint8ClampedArray";}interface Int16Array{readonly[Symbol.toStringTag]:"Int16Array";}interface Uint16Array{readonly[Symbol.toStringTag]:"Uint16Array";}interface Int32Array{readonly[Symbol.toStringTag]:"Int32Array";}interface Uint32Array{readonly[Symbol.toStringTag]:"Uint32Array";}interface Float32Array{readonly[Symbol.toStringTag]:"Float32Array";}interface Float64Array{readonly[Symbol.toStringTag]:"Float64Array";}interface ArrayConstructor{readonly[Symbol.species]:ArrayConstructor;}interface MapConstructor{readonly[Symbol.species]:MapConstructor;}interface SetConstructor{readonly[Symbol.species]:SetConstructor;}interface ArrayBufferConstructor{readonly[Symbol.species]:ArrayBufferConstructor;}', "lib.es2016.array.include.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface Array<T>{includes(searchElement:T,fromIndex?:number):boolean;}interface ReadonlyArray<T>{includes(searchElement:T,fromIndex?:number):boolean;}interface Int8Array{includes(searchElement:number,fromIndex?:number):boolean;}interface Uint8Array{includes(searchElement:number,fromIndex?:number):boolean;}interface Uint8ClampedArray{includes(searchElement:number,fromIndex?:number):boolean;}interface Int16Array{includes(searchElement:number,fromIndex?:number):boolean;}interface Uint16Array{includes(searchElement:number,fromIndex?:number):boolean;}interface Int32Array{includes(searchElement:number,fromIndex?:number):boolean;}interface Uint32Array{includes(searchElement:number,fromIndex?:number):boolean;}interface Float32Array{includes(searchElement:number,fromIndex?:number):boolean;}interface Float64Array{includes(searchElement:number,fromIndex?:number):boolean;}', "lib.es2016.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2015" />\r\n/// <reference lib="es2016.array.include" />', "lib.es2016.full.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2016" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n/// <reference lib="dom.iterable" />', "lib.es2017.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2016" />\r\n/// <reference lib="es2017.object" />\r\n/// <reference lib="es2017.sharedmemory" />\r\n/// <reference lib="es2017.string" />\r\n/// <reference lib="es2017.intl" />\r\n/// <reference lib="es2017.typedarrays" />\r\n', "lib.es2017.full.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2017" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n/// <reference lib="dom.iterable" />', "lib.es2017.intl.d.ts": '/// <reference no-default-lib="true"/>\r\ndeclare namespace Intl{type DateTimeFormatPartTypes="day"|"dayPeriod"|"era"|"hour"|"literal"|"minute"|"month"|"second"|"timeZoneName"|"weekday"|"year";interface DateTimeFormatPart{type:DateTimeFormatPartTypes;value:string;}interface DateTimeFormat{formatToParts(date?:Date|number):DateTimeFormatPart[];}}', "lib.es2017.object.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface ObjectConstructor{values<T>(o:{[s:string]:T}|ArrayLike<T>):T[];values(o:{}):any[];entries<T>(o:{[s:string]:T}|ArrayLike<T>):[string,T][];entries(o:{}):[string,any][];getOwnPropertyDescriptors<T>(o:T):{[P in keyof T]:TypedPropertyDescriptor<T[P]>}&{[x:string]:PropertyDescriptor};}', "lib.es2017.sharedmemory.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2015.symbol" />\r\n/// <reference lib="es2015.symbol.wellknown" />\r\ninterface SharedArrayBuffer{readonly byteLength:number;slice(begin:number,end?:number):SharedArrayBuffer;readonly[Symbol.species]:SharedArrayBuffer;readonly[Symbol.toStringTag]:"SharedArrayBuffer";}interface SharedArrayBufferConstructor{readonly prototype:SharedArrayBuffer;new(byteLength:number):SharedArrayBuffer;}declare var SharedArrayBuffer:SharedArrayBufferConstructor;interface ArrayBufferTypes{SharedArrayBuffer:SharedArrayBuffer;}interface Atomics{add(typedArray:Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array,index:number,value:number):number;and(typedArray:Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array,index:number,value:number):number;compareExchange(typedArray:Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array,index:number,expectedValue:number,replacementValue:number):number;exchange(typedArray:Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array,index:number,value:number):number;isLockFree(size:number):boolean;load(typedArray:Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array,index:number):number;or(typedArray:Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array,index:number,value:number):number;store(typedArray:Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array,index:number,value:number):number;sub(typedArray:Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array,index:number,value:number):number;wait(typedArray:Int32Array,index:number,value:number,timeout?:number):"ok"|"not-equal"|"timed-out";notify(typedArray:Int32Array,index:number,count?:number):number;xor(typedArray:Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array,index:number,value:number):number;readonly[Symbol.toStringTag]:"Atomics";}declare var Atomics:Atomics;', "lib.es2017.string.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface String{padStart(maxLength:number,fillString?:string):string;padEnd(maxLength:number,fillString?:string):string;}', "lib.es2017.typedarrays.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface Int8ArrayConstructor{new():Int8Array;}interface Uint8ArrayConstructor{new():Uint8Array;}interface Uint8ClampedArrayConstructor{new():Uint8ClampedArray;}interface Int16ArrayConstructor{new():Int16Array;}interface Uint16ArrayConstructor{new():Uint16Array;}interface Int32ArrayConstructor{new():Int32Array;}interface Uint32ArrayConstructor{new():Uint32Array;}interface Float32ArrayConstructor{new():Float32Array;}interface Float64ArrayConstructor{new():Float64Array;}', "lib.es2018.asyncgenerator.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2018.asynciterable" />\r\ninterface AsyncGenerator<T=unknown,TReturn=any,TNext=unknown>extends AsyncIterator<T,TReturn,TNext>{next(...args:[]|[TNext]):Promise<IteratorResult<T,TReturn>>;return(value:TReturn|PromiseLike<TReturn>):Promise<IteratorResult<T,TReturn>>;throw(e:any):Promise<IteratorResult<T,TReturn>>;[Symbol.asyncIterator]():AsyncGenerator<T,TReturn,TNext>;}interface AsyncGeneratorFunction{new(...args:any[]):AsyncGenerator;(...args:any[]):AsyncGenerator;readonly length:number;readonly name:string;readonly prototype:AsyncGenerator;}interface AsyncGeneratorFunctionConstructor{new(...args:string[]):AsyncGeneratorFunction;(...args:string[]):AsyncGeneratorFunction;readonly length:number;readonly name:string;readonly prototype:AsyncGeneratorFunction;}', "lib.es2018.asynciterable.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2015.symbol" />\r\n/// <reference lib="es2015.iterable" />\r\ninterface SymbolConstructor{readonly asyncIterator:unique symbol;}interface AsyncIterator<T,TReturn=any,TNext=undefined>{next(...args:[]|[TNext]):Promise<IteratorResult<T,TReturn>>;return?(value?:TReturn|PromiseLike<TReturn>):Promise<IteratorResult<T,TReturn>>;throw?(e?:any):Promise<IteratorResult<T,TReturn>>;}interface AsyncIterable<T>{[Symbol.asyncIterator]():AsyncIterator<T>;}interface AsyncIterableIterator<T>extends AsyncIterator<T>{[Symbol.asyncIterator]():AsyncIterableIterator<T>;}', "lib.es2018.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2017" />\r\n/// <reference lib="es2018.asynciterable" />\r\n/// <reference lib="es2018.asyncgenerator" />\r\n/// <reference lib="es2018.promise" />\r\n/// <reference lib="es2018.regexp" />\r\n/// <reference lib="es2018.intl" />\r\n', "lib.es2018.full.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2018" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n/// <reference lib="dom.iterable" />', "lib.es2018.intl.d.ts": '/// <reference no-default-lib="true"/>\r\ndeclare namespace Intl{type LDMLPluralRule="zero"|"one"|"two"|"few"|"many"|"other";type PluralRuleType="cardinal"|"ordinal";interface PluralRulesOptions{localeMatcher?:"lookup"|"best fit"|undefined;type?:PluralRuleType|undefined;minimumIntegerDigits?:number|undefined;minimumFractionDigits?:number|undefined;maximumFractionDigits?:number|undefined;minimumSignificantDigits?:number|undefined;maximumSignificantDigits?:number|undefined;}interface ResolvedPluralRulesOptions{locale:string;pluralCategories:LDMLPluralRule[];type:PluralRuleType;minimumIntegerDigits:number;minimumFractionDigits:number;maximumFractionDigits:number;minimumSignificantDigits?:number;maximumSignificantDigits?:number;}interface PluralRules{resolvedOptions():ResolvedPluralRulesOptions;select(n:number):LDMLPluralRule;}const PluralRules:{new(locales?:string|string[],options?:PluralRulesOptions):PluralRules;(locales?:string|string[],options?:PluralRulesOptions):PluralRules;supportedLocalesOf(locales:string|string[],options?:{localeMatcher?:"lookup"|"best fit"}):string[];};type ES2018NumberFormatPartType="literal"|"nan"|"infinity"|"percent"|"integer"|"group"|"decimal"|"fraction"|"plusSign"|"minusSign"|"percentSign"|"currency"|"code"|"symbol"|"name";type ES2020NumberFormatPartType="compact"|"exponentInteger"|"exponentMinusSign"|"exponentSeparator"|"unit"|"unknown";type NumberFormatPartTypes=ES2018NumberFormatPartType|ES2020NumberFormatPartType;interface NumberFormatPart{type:NumberFormatPartTypes;value:string;}interface NumberFormat{formatToParts(number?:number|bigint):NumberFormatPart[];}}', "lib.es2018.promise.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface Promise<T>{finally(onfinally?:(()=>void)|undefined|null):Promise<T>}', "lib.es2018.regexp.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface RegExpMatchArray{groups?:{[key:string]:string}}interface RegExpExecArray{groups?:{[key:string]:string}}interface RegExp{readonly dotAll:boolean;}', "lib.es2019.array.d.ts": '/// <reference no-default-lib="true"/>\r\ntype FlatArray<Arr,Depth extends number>={"done":Arr,"recur":Arr extends ReadonlyArray<infer InnerArr>?FlatArray<InnerArr,[-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20][Depth]>:Arr}[Depth extends-1?"done":"recur"];interface ReadonlyArray<T>{flatMap<U,This=undefined>(callback:(this:This,value:T,index:number,array:T[])=>U|ReadonlyArray<U>,thisArg?:This):U[]\nflat<A,D extends number=1>(this:A,depth?:D):FlatArray<A,D>[]}interface Array<T>{flatMap<U,This=undefined>(callback:(this:This,value:T,index:number,array:T[])=>U|ReadonlyArray<U>,thisArg?:This):U[]\nflat<A,D extends number=1>(this:A,depth?:D):FlatArray<A,D>[]}', "lib.es2019.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2018" />\r\n/// <reference lib="es2019.array" />\r\n/// <reference lib="es2019.object" />\r\n/// <reference lib="es2019.string" />\r\n/// <reference lib="es2019.symbol" />\r\n', "lib.es2019.full.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2019" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n/// <reference lib="dom.iterable" />\r\n', "lib.es2019.object.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2015.iterable" />\r\ninterface ObjectConstructor{fromEntries<T=any>(entries:Iterable<readonly[PropertyKey,T]>):{[k:string]:T};fromEntries(entries:Iterable<readonly any[]>):any;}', "lib.es2019.string.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface String{trimEnd():string;trimStart():string;trimLeft():string;trimRight():string;}', "lib.es2019.symbol.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface Symbol{readonly description:string|undefined;}', "lib.es2020.bigint.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2020.intl" />\r\ninterface BigIntToLocaleStringOptions{localeMatcher?:string;style?:string;numberingSystem?:string;unit?:string;unitDisplay?:string;currency?:string;currencyDisplay?:string;useGrouping?:boolean;minimumIntegerDigits?:1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21;minimumFractionDigits?:0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20;maximumFractionDigits?:0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20;minimumSignificantDigits?:1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21;maximumSignificantDigits?:1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21;notation?:string;compactDisplay?:string;}interface BigInt{toString(radix?:number):string;toLocaleString(locales?:Intl.LocalesArgument,options?:BigIntToLocaleStringOptions):string;valueOf():bigint;readonly[Symbol.toStringTag]:"BigInt";}interface BigIntConstructor{(value:bigint|boolean|number|string):bigint;readonly prototype:BigInt;asIntN(bits:number,int:bigint):bigint;asUintN(bits:number,int:bigint):bigint;}declare var BigInt:BigIntConstructor;interface BigInt64Array{readonly BYTES_PER_ELEMENT:number;readonly buffer:ArrayBufferLike;readonly byteLength:number;readonly byteOffset:number;copyWithin(target:number,start:number,end?:number):this;entries():IterableIterator<[number,bigint]>;every(predicate:(value:bigint,index:number,array:BigInt64Array)=>boolean,thisArg?:any):boolean;fill(value:bigint,start?:number,end?:number):this;filter(predicate:(value:bigint,index:number,array:BigInt64Array)=>any,thisArg?:any):BigInt64Array;find(predicate:(value:bigint,index:number,array:BigInt64Array)=>boolean,thisArg?:any):bigint|undefined;findIndex(predicate:(value:bigint,index:number,array:BigInt64Array)=>boolean,thisArg?:any):number;forEach(callbackfn:(value:bigint,index:number,array:BigInt64Array)=>void,thisArg?:any):void;includes(searchElement:bigint,fromIndex?:number):boolean;indexOf(searchElement:bigint,fromIndex?:number):number;join(separator?:string):string;keys():IterableIterator<number>;lastIndexOf(searchElement:bigint,fromIndex?:number):number;readonly length:number;map(callbackfn:(value:bigint,index:number,array:BigInt64Array)=>bigint,thisArg?:any):BigInt64Array;reduce(callbackfn:(previousValue:bigint,currentValue:bigint,currentIndex:number,array:BigInt64Array)=>bigint):bigint;reduce<U>(callbackfn:(previousValue:U,currentValue:bigint,currentIndex:number,array:BigInt64Array)=>U,initialValue:U):U;reduceRight(callbackfn:(previousValue:bigint,currentValue:bigint,currentIndex:number,array:BigInt64Array)=>bigint):bigint;reduceRight<U>(callbackfn:(previousValue:U,currentValue:bigint,currentIndex:number,array:BigInt64Array)=>U,initialValue:U):U;reverse():this;set(array:ArrayLike<bigint>,offset?:number):void;slice(start?:number,end?:number):BigInt64Array;some(predicate:(value:bigint,index:number,array:BigInt64Array)=>boolean,thisArg?:any):boolean;sort(compareFn?:(a:bigint,b:bigint)=>number|bigint):this;subarray(begin?:number,end?:number):BigInt64Array;toLocaleString():string;toString():string;valueOf():BigInt64Array;values():IterableIterator<bigint>;[Symbol.iterator]():IterableIterator<bigint>;readonly[Symbol.toStringTag]:"BigInt64Array";[index:number]:bigint;}interface BigInt64ArrayConstructor{readonly prototype:BigInt64Array;new(length?:number):BigInt64Array;new(array:Iterable<bigint>):BigInt64Array;new(buffer:ArrayBufferLike,byteOffset?:number,length?:number):BigInt64Array;readonly BYTES_PER_ELEMENT:number;of(...items:bigint[]):BigInt64Array;from(arrayLike:ArrayLike<bigint>):BigInt64Array;from<U>(arrayLike:ArrayLike<U>,mapfn:(v:U,k:number)=>bigint,thisArg?:any):BigInt64Array;}declare var BigInt64Array:BigInt64ArrayConstructor;interface BigUint64Array{readonly BYTES_PER_ELEMENT:number;readonly buffer:ArrayBufferLike;readonly byteLength:number;readonly byteOffset:number;copyWithin(target:number,start:number,end?:number):this;entries():IterableIterator<[number,bigint]>;every(predicate:(value:bigint,index:number,array:BigUint64Array)=>boolean,thisArg?:any):boolean;fill(value:bigint,start?:number,end?:number):this;filter(predicate:(value:bigint,index:number,array:BigUint64Array)=>any,thisArg?:any):BigUint64Array;find(predicate:(value:bigint,index:number,array:BigUint64Array)=>boolean,thisArg?:any):bigint|undefined;findIndex(predicate:(value:bigint,index:number,array:BigUint64Array)=>boolean,thisArg?:any):number;forEach(callbackfn:(value:bigint,index:number,array:BigUint64Array)=>void,thisArg?:any):void;includes(searchElement:bigint,fromIndex?:number):boolean;indexOf(searchElement:bigint,fromIndex?:number):number;join(separator?:string):string;keys():IterableIterator<number>;lastIndexOf(searchElement:bigint,fromIndex?:number):number;readonly length:number;map(callbackfn:(value:bigint,index:number,array:BigUint64Array)=>bigint,thisArg?:any):BigUint64Array;reduce(callbackfn:(previousValue:bigint,currentValue:bigint,currentIndex:number,array:BigUint64Array)=>bigint):bigint;reduce<U>(callbackfn:(previousValue:U,currentValue:bigint,currentIndex:number,array:BigUint64Array)=>U,initialValue:U):U;reduceRight(callbackfn:(previousValue:bigint,currentValue:bigint,currentIndex:number,array:BigUint64Array)=>bigint):bigint;reduceRight<U>(callbackfn:(previousValue:U,currentValue:bigint,currentIndex:number,array:BigUint64Array)=>U,initialValue:U):U;reverse():this;set(array:ArrayLike<bigint>,offset?:number):void;slice(start?:number,end?:number):BigUint64Array;some(predicate:(value:bigint,index:number,array:BigUint64Array)=>boolean,thisArg?:any):boolean;sort(compareFn?:(a:bigint,b:bigint)=>number|bigint):this;subarray(begin?:number,end?:number):BigUint64Array;toLocaleString():string;toString():string;valueOf():BigUint64Array;values():IterableIterator<bigint>;[Symbol.iterator]():IterableIterator<bigint>;readonly[Symbol.toStringTag]:"BigUint64Array";[index:number]:bigint;}interface BigUint64ArrayConstructor{readonly prototype:BigUint64Array;new(length?:number):BigUint64Array;new(array:Iterable<bigint>):BigUint64Array;new(buffer:ArrayBufferLike,byteOffset?:number,length?:number):BigUint64Array;readonly BYTES_PER_ELEMENT:number;of(...items:bigint[]):BigUint64Array;from(arrayLike:ArrayLike<bigint>):BigUint64Array;from<U>(arrayLike:ArrayLike<U>,mapfn:(v:U,k:number)=>bigint,thisArg?:any):BigUint64Array;}declare var BigUint64Array:BigUint64ArrayConstructor;interface DataView{getBigInt64(byteOffset:number,littleEndian?:boolean):bigint;getBigUint64(byteOffset:number,littleEndian?:boolean):bigint;setBigInt64(byteOffset:number,value:bigint,littleEndian?:boolean):void;setBigUint64(byteOffset:number,value:bigint,littleEndian?:boolean):void;}declare namespace Intl{interface NumberFormat{format(value:number|bigint):string;resolvedOptions():ResolvedNumberFormatOptions;}}', "lib.es2020.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2019" />\r\n/// <reference lib="es2020.bigint" />\r\n/// <reference lib="es2020.date" />\r\n/// <reference lib="es2020.number" />\r\n/// <reference lib="es2020.promise" />\r\n/// <reference lib="es2020.sharedmemory" />\r\n/// <reference lib="es2020.string" />\r\n/// <reference lib="es2020.symbol.wellknown" />\r\n/// <reference lib="es2020.intl" />\r\n', "lib.es2020.date.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2020.intl" />\r\ninterface Date{toLocaleString(locales?:Intl.LocalesArgument,options?:Intl.DateTimeFormatOptions):string;toLocaleDateString(locales?:Intl.LocalesArgument,options?:Intl.DateTimeFormatOptions):string;toLocaleTimeString(locales?:Intl.LocalesArgument,options?:Intl.DateTimeFormatOptions):string;}', "lib.es2020.full.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2020" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n/// <reference lib="dom.iterable" />\r\n', "lib.es2020.intl.d.ts": '/// <reference no-default-lib="true"/>\r\ndeclare namespace Intl{type UnicodeBCP47LocaleIdentifier=string;type RelativeTimeFormatUnit=|"year"|"years"|"quarter"|"quarters"|"month"|"months"|"week"|"weeks"|"day"|"days"|"hour"|"hours"|"minute"|"minutes"|"second"|"seconds";type RelativeTimeFormatLocaleMatcher="lookup"|"best fit";type RelativeTimeFormatNumeric="always"|"auto";type RelativeTimeFormatStyle="long"|"short"|"narrow";type BCP47LanguageTag=string;type LocalesArgument=UnicodeBCP47LocaleIdentifier|Locale|(UnicodeBCP47LocaleIdentifier|Locale)[]|undefined;interface RelativeTimeFormatOptions{localeMatcher?:RelativeTimeFormatLocaleMatcher;numeric?:RelativeTimeFormatNumeric;style?:RelativeTimeFormatStyle;}interface ResolvedRelativeTimeFormatOptions{locale:UnicodeBCP47LocaleIdentifier;style:RelativeTimeFormatStyle;numeric:RelativeTimeFormatNumeric;numberingSystem:string;}interface RelativeTimeFormatPart{type:string;value:string;unit?:RelativeTimeFormatUnit;}interface RelativeTimeFormat{format(value:number,unit:RelativeTimeFormatUnit):string;formatToParts(value:number,unit:RelativeTimeFormatUnit):RelativeTimeFormatPart[];resolvedOptions():ResolvedRelativeTimeFormatOptions;}const RelativeTimeFormat:{new(locales?:UnicodeBCP47LocaleIdentifier|UnicodeBCP47LocaleIdentifier[],options?:RelativeTimeFormatOptions,):RelativeTimeFormat;supportedLocalesOf(locales?:UnicodeBCP47LocaleIdentifier|UnicodeBCP47LocaleIdentifier[],options?:RelativeTimeFormatOptions,):UnicodeBCP47LocaleIdentifier[];};interface NumberFormatOptions{compactDisplay?:"short"|"long"|undefined;notation?:"standard"|"scientific"|"engineering"|"compact"|undefined;signDisplay?:"auto"|"never"|"always"|"exceptZero"|undefined;unit?:string|undefined;unitDisplay?:"short"|"long"|"narrow"|undefined;currencyDisplay?:string|undefined;currencySign?:string|undefined;}interface ResolvedNumberFormatOptions{compactDisplay?:"short"|"long";notation?:"standard"|"scientific"|"engineering"|"compact";signDisplay?:"auto"|"never"|"always"|"exceptZero";unit?:string;unitDisplay?:"short"|"long"|"narrow";currencyDisplay?:string;currencySign?:string;}interface DateTimeFormatOptions{calendar?:string|undefined;dayPeriod?:"narrow"|"short"|"long"|undefined;numberingSystem?:string|undefined;dateStyle?:"full"|"long"|"medium"|"short"|undefined;timeStyle?:"full"|"long"|"medium"|"short"|undefined;hourCycle?:"h11"|"h12"|"h23"|"h24"|undefined;}type LocaleHourCycleKey="h12"|"h23"|"h11"|"h24";type LocaleCollationCaseFirst="upper"|"lower"|"false";interface LocaleOptions{baseName?:string;calendar?:string;caseFirst?:LocaleCollationCaseFirst;collation?:string;hourCycle?:LocaleHourCycleKey;language?:string;numberingSystem?:string;numeric?:boolean;region?:string;script?:string;}interface Locale extends LocaleOptions{baseName:string;language:string;maximize():Locale;minimize():Locale;toString():BCP47LanguageTag;}const Locale:{new(tag:BCP47LanguageTag|Locale,options?:LocaleOptions):Locale;};type DisplayNamesFallback=|"code"|"none";type DisplayNamesType=|"language"|"region"|"script"|"calendar"|"dateTimeField"|"currency";type DisplayNamesLanguageDisplay=|"dialect"|"standard";interface DisplayNamesOptions{localeMatcher?:RelativeTimeFormatLocaleMatcher;style?:RelativeTimeFormatStyle;type:DisplayNamesType;languageDisplay?:DisplayNamesLanguageDisplay;fallback?:DisplayNamesFallback;}interface ResolvedDisplayNamesOptions{locale:UnicodeBCP47LocaleIdentifier;style:RelativeTimeFormatStyle;type:DisplayNamesType;fallback:DisplayNamesFallback;languageDisplay?:DisplayNamesLanguageDisplay;}interface DisplayNames{of(code:string):string|undefined;resolvedOptions():ResolvedDisplayNamesOptions;}const DisplayNames:{prototype:DisplayNames;new(locales:LocalesArgument,options:DisplayNamesOptions):DisplayNames;supportedLocalesOf(locales?:LocalesArgument,options?:{localeMatcher?:RelativeTimeFormatLocaleMatcher}):BCP47LanguageTag[];};}', "lib.es2020.number.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2020.intl" />\r\ninterface Number{toLocaleString(locales?:Intl.LocalesArgument,options?:Intl.NumberFormatOptions):string;}', "lib.es2020.promise.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface PromiseFulfilledResult<T>{status:"fulfilled";value:T;}interface PromiseRejectedResult{status:"rejected";reason:any;}type PromiseSettledResult<T>=PromiseFulfilledResult<T>|PromiseRejectedResult;interface PromiseConstructor{allSettled<T extends readonly unknown[]|[]>(values:T):Promise<{-readonly[P in keyof T]:PromiseSettledResult<Awaited<T[P]>>}>;allSettled<T>(values:Iterable<T|PromiseLike<T>>):Promise<PromiseSettledResult<Awaited<T>>[]>;}', "lib.es2020.sharedmemory.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface Atomics{add(typedArray:BigInt64Array|BigUint64Array,index:number,value:bigint):bigint;and(typedArray:BigInt64Array|BigUint64Array,index:number,value:bigint):bigint;compareExchange(typedArray:BigInt64Array|BigUint64Array,index:number,expectedValue:bigint,replacementValue:bigint):bigint;exchange(typedArray:BigInt64Array|BigUint64Array,index:number,value:bigint):bigint;load(typedArray:BigInt64Array|BigUint64Array,index:number):bigint;or(typedArray:BigInt64Array|BigUint64Array,index:number,value:bigint):bigint;store(typedArray:BigInt64Array|BigUint64Array,index:number,value:bigint):bigint;sub(typedArray:BigInt64Array|BigUint64Array,index:number,value:bigint):bigint;wait(typedArray:BigInt64Array,index:number,value:bigint,timeout?:number):"ok"|"not-equal"|"timed-out";notify(typedArray:BigInt64Array,index:number,count?:number):number;xor(typedArray:BigInt64Array|BigUint64Array,index:number,value:bigint):bigint;}', "lib.es2020.string.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2015.iterable" />\r\ninterface String{matchAll(regexp:RegExp):IterableIterator<RegExpMatchArray>;}', "lib.es2020.symbol.wellknown.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2015.iterable" />\r\n/// <reference lib="es2015.symbol" />\r\ninterface SymbolConstructor{readonly matchAll:unique symbol;}interface RegExp{[Symbol.matchAll](str:string):IterableIterator<RegExpMatchArray>;}', "lib.es2021.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2020" />\r\n/// <reference lib="es2021.promise" />\r\n/// <reference lib="es2021.string" />\r\n/// <reference lib="es2021.weakref" />\r\n/// <reference lib="es2021.intl" />\r\n', "lib.es2021.full.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2021" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n/// <reference lib="dom.iterable" />\r\n', "lib.es2021.intl.d.ts": '/// <reference no-default-lib="true"/>\r\ndeclare namespace Intl{interface DateTimeFormatOptions{formatMatcher?:"basic"|"best fit"|"best fit"|undefined;dateStyle?:"full"|"long"|"medium"|"short"|undefined;timeStyle?:"full"|"long"|"medium"|"short"|undefined;dayPeriod?:"narrow"|"short"|"long"|undefined;fractionalSecondDigits?:0|1|2|3|undefined;}interface DateTimeFormat{formatRange(startDate:Date|number|bigint,endDate:Date|number|bigint):string;formatRangeToParts(startDate:Date|number|bigint,endDate:Date|number|bigint):DateTimeFormatPart[];}interface ResolvedDateTimeFormatOptions{formatMatcher?:"basic"|"best fit"|"best fit";dateStyle?:"full"|"long"|"medium"|"short";timeStyle?:"full"|"long"|"medium"|"short";hourCycle?:"h11"|"h12"|"h23"|"h24";dayPeriod?:"narrow"|"short"|"long";fractionalSecondDigits?:0|1|2|3;}type ListFormatLocaleMatcher="lookup"|"best fit";type ListFormatType="conjunction"|"disjunction"|"unit";type ListFormatStyle="long"|"short"|"narrow";interface ListFormatOptions{localeMatcher?:ListFormatLocaleMatcher|undefined;type?:ListFormatType|undefined;style?:ListFormatStyle|undefined;}interface ListFormat{format(list:Iterable<string>):string;formatToParts(list:Iterable<string>):{type:"element"|"literal",value:string;}[];}const ListFormat:{prototype:ListFormat;new(locales?:BCP47LanguageTag|BCP47LanguageTag[],options?:ListFormatOptions):ListFormat;supportedLocalesOf(locales:BCP47LanguageTag|BCP47LanguageTag[],options?:Pick<ListFormatOptions,"localeMatcher">):BCP47LanguageTag[];};}', "lib.es2021.promise.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface AggregateError extends Error{errors:any[]}interface AggregateErrorConstructor{new(errors:Iterable<any>,message?:string):AggregateError;(errors:Iterable<any>,message?:string):AggregateError;readonly prototype:AggregateError;}declare var AggregateError:AggregateErrorConstructor;interface PromiseConstructor{any<T extends readonly unknown[]|[]>(values:T):Promise<Awaited<T[number]>>;any<T>(values:Iterable<T|PromiseLike<T>>):Promise<Awaited<T>>}', "lib.es2021.string.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface String{replaceAll(searchValue:string|RegExp,replaceValue:string):string;replaceAll(searchValue:string|RegExp,replacer:(substring:string,...args:any[])=>string):string;}', "lib.es2021.weakref.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface WeakRef<T extends object>{readonly[Symbol.toStringTag]:"WeakRef";deref():T|undefined;}interface WeakRefConstructor{readonly prototype:WeakRef<any>;new<T extends object>(target:T):WeakRef<T>;}declare var WeakRef:WeakRefConstructor;interface FinalizationRegistry<T>{readonly[Symbol.toStringTag]:"FinalizationRegistry";register(target:object,heldValue:T,unregisterToken?:object):void;unregister(unregisterToken:object):void;}interface FinalizationRegistryConstructor{readonly prototype:FinalizationRegistry<any>;new<T>(cleanupCallback:(heldValue:T)=>void):FinalizationRegistry<T>;}declare var FinalizationRegistry:FinalizationRegistryConstructor;', "lib.es2022.array.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface Array<T>{at(index:number):T|undefined;}interface ReadonlyArray<T>{at(index:number):T|undefined;}interface Int8Array{at(index:number):number|undefined;}interface Uint8Array{at(index:number):number|undefined;}interface Uint8ClampedArray{at(index:number):number|undefined;}interface Int16Array{at(index:number):number|undefined;}interface Uint16Array{at(index:number):number|undefined;}interface Int32Array{at(index:number):number|undefined;}interface Uint32Array{at(index:number):number|undefined;}interface Float32Array{at(index:number):number|undefined;}interface Float64Array{at(index:number):number|undefined;}interface BigInt64Array{at(index:number):bigint|undefined;}interface BigUint64Array{at(index:number):bigint|undefined;}', "lib.es2022.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2021" />\r\n/// <reference lib="es2022.array" />\r\n/// <reference lib="es2022.error" />\r\n/// <reference lib="es2022.intl" />\r\n/// <reference lib="es2022.object" />\r\n/// <reference lib="es2022.string" />\r\n', "lib.es2022.error.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface ErrorOptions{cause?:Error;}interface Error{cause?:Error;}interface ErrorConstructor{new(message?:string,options?:ErrorOptions):Error;(message?:string,options?:ErrorOptions):Error;}interface EvalErrorConstructor{new(message?:string,options?:ErrorOptions):EvalError;(message?:string,options?:ErrorOptions):EvalError;}interface RangeErrorConstructor{new(message?:string,options?:ErrorOptions):RangeError;(message?:string,options?:ErrorOptions):RangeError;}interface ReferenceErrorConstructor{new(message?:string,options?:ErrorOptions):ReferenceError;(message?:string,options?:ErrorOptions):ReferenceError;}interface SyntaxErrorConstructor{new(message?:string,options?:ErrorOptions):SyntaxError;(message?:string,options?:ErrorOptions):SyntaxError;}interface TypeErrorConstructor{new(message?:string,options?:ErrorOptions):TypeError;(message?:string,options?:ErrorOptions):TypeError;}interface URIErrorConstructor{new(message?:string,options?:ErrorOptions):URIError;(message?:string,options?:ErrorOptions):URIError;}interface AggregateErrorConstructor{new(errors:Iterable<any>,message?:string,options?:ErrorOptions):AggregateError;(errors:Iterable<any>,message?:string,options?:ErrorOptions):AggregateError;}', "lib.es2022.full.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2022" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n/// <reference lib="dom.iterable" />\r\n', "lib.es2022.intl.d.ts": '/// <reference no-default-lib="true"/>\r\ndeclare namespace Intl{interface SegmenterOptions{localeMatcher?:"best fit"|"lookup"|undefined;granularity?:"grapheme"|"word"|"sentence"|undefined;}interface Segmenter{segment(input:string):Segments;resolvedOptions():ResolvedSegmenterOptions;}interface ResolvedSegmenterOptions{locale:string;granularity:"grapheme"|"word"|"sentence";}interface Segments{containing(codeUnitIndex?:number):SegmentData;[Symbol.iterator]():IterableIterator<SegmentData>;}interface SegmentData{segment:string;index:number;input:string;isWordLike?:boolean;}const Segmenter:{prototype:Segmenter;new(locales?:BCP47LanguageTag|BCP47LanguageTag[],options?:SegmenterOptions):Segmenter;supportedLocalesOf(locales:BCP47LanguageTag|BCP47LanguageTag[],options?:Pick<SegmenterOptions,"localeMatcher">):BCP47LanguageTag[];};}', "lib.es2022.object.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface ObjectConstructor{hasOwn(o:object,v:PropertyKey):boolean;}', "lib.es2022.string.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface String{at(index:number):string|undefined;}', "lib.es5.d.ts": '/// <reference no-default-lib="true"/>\r\ndeclare var NaN:number;declare var Infinity:number;declare function eval(x:string):any;declare function parseInt(string:string,radix?:number):number;declare function parseFloat(string:string):number;declare function isNaN(number:number):boolean;declare function isFinite(number:number):boolean;declare function decodeURI(encodedURI:string):string;declare function decodeURIComponent(encodedURIComponent:string):string;declare function encodeURI(uri:string):string;declare function encodeURIComponent(uriComponent:string|number|boolean):string;declare function escape(string:string):string;declare function unescape(string:string):string;interface Symbol{toString():string;valueOf():symbol;}declare type PropertyKey=string|number|symbol;interface PropertyDescriptor{configurable?:boolean;enumerable?:boolean;value?:any;writable?:boolean;get?():any;set?(v:any):void;}interface PropertyDescriptorMap{[key:PropertyKey]:PropertyDescriptor;}interface Object{constructor:Function;toString():string;toLocaleString():string;valueOf():Object;hasOwnProperty(v:PropertyKey):boolean;isPrototypeOf(v:Object):boolean;propertyIsEnumerable(v:PropertyKey):boolean;}interface ObjectConstructor{new(value?:any):Object;():any;(value:any):any;readonly prototype:Object;getPrototypeOf(o:any):any;getOwnPropertyDescriptor(o:any,p:PropertyKey):PropertyDescriptor|undefined;getOwnPropertyNames(o:any):string[];create(o:object|null):any;create(o:object|null,properties:PropertyDescriptorMap&ThisType<any>):any;defineProperty<T>(o:T,p:PropertyKey,attributes:PropertyDescriptor&ThisType<any>):T;defineProperties<T>(o:T,properties:PropertyDescriptorMap&ThisType<any>):T;seal<T>(o:T):T;freeze<T>(a:T[]):readonly T[];freeze<T extends Function>(f:T):T;freeze<T extends{[idx:string]:U|null|undefined|object},U extends string|bigint|number|boolean|symbol>(o:T):Readonly<T>;freeze<T>(o:T):Readonly<T>;preventExtensions<T>(o:T):T;isSealed(o:any):boolean;isFrozen(o:any):boolean;isExtensible(o:any):boolean;keys(o:object):string[];}declare var Object:ObjectConstructor;interface Function{apply(this:Function,thisArg:any,argArray?:any):any;call(this:Function,thisArg:any,...argArray:any[]):any;bind(this:Function,thisArg:any,...argArray:any[]):any;toString():string;prototype:any;readonly length:number;arguments:any;caller:Function;}interface FunctionConstructor{new(...args:string[]):Function;(...args:string[]):Function;readonly prototype:Function;}declare var Function:FunctionConstructor;type ThisParameterType<T>=T extends(this:infer U,...args:never)=>any?U:unknown;type OmitThisParameter<T>=unknown extends ThisParameterType<T>?T:T extends(...args:infer A)=>infer R?(...args:A)=>R:T;interface CallableFunction extends Function{apply<T,R>(this:(this:T)=>R,thisArg:T):R;apply<T,A extends any[],R>(this:(this:T,...args:A)=>R,thisArg:T,args:A):R;call<T,A extends any[],R>(this:(this:T,...args:A)=>R,thisArg:T,...args:A):R;bind<T>(this:T,thisArg:ThisParameterType<T>):OmitThisParameter<T>;bind<T,A0,A extends any[],R>(this:(this:T,arg0:A0,...args:A)=>R,thisArg:T,arg0:A0):(...args:A)=>R;bind<T,A0,A1,A extends any[],R>(this:(this:T,arg0:A0,arg1:A1,...args:A)=>R,thisArg:T,arg0:A0,arg1:A1):(...args:A)=>R;bind<T,A0,A1,A2,A extends any[],R>(this:(this:T,arg0:A0,arg1:A1,arg2:A2,...args:A)=>R,thisArg:T,arg0:A0,arg1:A1,arg2:A2):(...args:A)=>R;bind<T,A0,A1,A2,A3,A extends any[],R>(this:(this:T,arg0:A0,arg1:A1,arg2:A2,arg3:A3,...args:A)=>R,thisArg:T,arg0:A0,arg1:A1,arg2:A2,arg3:A3):(...args:A)=>R;bind<T,AX,R>(this:(this:T,...args:AX[])=>R,thisArg:T,...args:AX[]):(...args:AX[])=>R;}interface NewableFunction extends Function{apply<T>(this:new()=>T,thisArg:T):void;apply<T,A extends any[]>(this:new(...args:A)=>T,thisArg:T,args:A):void;call<T,A extends any[]>(this:new(...args:A)=>T,thisArg:T,...args:A):void;bind<T>(this:T,thisArg:any):T;bind<A0,A extends any[],R>(this:new(arg0:A0,...args:A)=>R,thisArg:any,arg0:A0):new(...args:A)=>R;bind<A0,A1,A extends any[],R>(this:new(arg0:A0,arg1:A1,...args:A)=>R,thisArg:any,arg0:A0,arg1:A1):new(...args:A)=>R;bind<A0,A1,A2,A extends any[],R>(this:new(arg0:A0,arg1:A1,arg2:A2,...args:A)=>R,thisArg:any,arg0:A0,arg1:A1,arg2:A2):new(...args:A)=>R;bind<A0,A1,A2,A3,A extends any[],R>(this:new(arg0:A0,arg1:A1,arg2:A2,arg3:A3,...args:A)=>R,thisArg:any,arg0:A0,arg1:A1,arg2:A2,arg3:A3):new(...args:A)=>R;bind<AX,R>(this:new(...args:AX[])=>R,thisArg:any,...args:AX[]):new(...args:AX[])=>R;}interface IArguments{[index:number]:any;length:number;callee:Function;}interface String{toString():string;charAt(pos:number):string;charCodeAt(index:number):number;concat(...strings:string[]):string;indexOf(searchString:string,position?:number):number;lastIndexOf(searchString:string,position?:number):number;localeCompare(that:string):number;match(regexp:string|RegExp):RegExpMatchArray|null;replace(searchValue:string|RegExp,replaceValue:string):string;replace(searchValue:string|RegExp,replacer:(substring:string,...args:any[])=>string):string;search(regexp:string|RegExp):number;slice(start?:number,end?:number):string;split(separator:string|RegExp,limit?:number):string[];substring(start:number,end?:number):string;toLowerCase():string;toLocaleLowerCase(locales?:string|string[]):string;toUpperCase():string;toLocaleUpperCase(locales?:string|string[]):string;trim():string;readonly length:number;substr(from:number,length?:number):string;valueOf():string;readonly[index:number]:string;}interface StringConstructor{new(value?:any):String;(value?:any):string;readonly prototype:String;fromCharCode(...codes:number[]):string;}declare var String:StringConstructor;interface Boolean{valueOf():boolean;}interface BooleanConstructor{new(value?:any):Boolean;<T>(value?:T):boolean;readonly prototype:Boolean;}declare var Boolean:BooleanConstructor;interface Number{toString(radix?:number):string;toFixed(fractionDigits?:number):string;toExponential(fractionDigits?:number):string;toPrecision(precision?:number):string;valueOf():number;}interface NumberConstructor{new(value?:any):Number;(value?:any):number;readonly prototype:Number;readonly MAX_VALUE:number;readonly MIN_VALUE:number;readonly NaN:number;readonly NEGATIVE_INFINITY:number;readonly POSITIVE_INFINITY:number;}declare var Number:NumberConstructor;interface TemplateStringsArray extends ReadonlyArray<string>{readonly raw:readonly string[];}interface ImportMeta{}interface ImportCallOptions{assert?:ImportAssertions;}interface ImportAssertions{[key:string]:string;}interface Math{readonly E:number;readonly LN10:number;readonly LN2:number;readonly LOG2E:number;readonly LOG10E:number;readonly PI:number;readonly SQRT1_2:number;readonly SQRT2:number;abs(x:number):number;acos(x:number):number;asin(x:number):number;atan(x:number):number;atan2(y:number,x:number):number;ceil(x:number):number;cos(x:number):number;exp(x:number):number;floor(x:number):number;log(x:number):number;max(...values:number[]):number;min(...values:number[]):number;pow(x:number,y:number):number;random():number;round(x:number):number;sin(x:number):number;sqrt(x:number):number;tan(x:number):number;}declare var Math:Math;interface Date{toString():string;toDateString():string;toTimeString():string;toLocaleString():string;toLocaleDateString():string;toLocaleTimeString():string;valueOf():number;getTime():number;getFullYear():number;getUTCFullYear():number;getMonth():number;getUTCMonth():number;getDate():number;getUTCDate():number;getDay():number;getUTCDay():number;getHours():number;getUTCHours():number;getMinutes():number;getUTCMinutes():number;getSeconds():number;getUTCSeconds():number;getMilliseconds():number;getUTCMilliseconds():number;getTimezoneOffset():number;setTime(time:number):number;setMilliseconds(ms:number):number;setUTCMilliseconds(ms:number):number;setSeconds(sec:number,ms?:number):number;setUTCSeconds(sec:number,ms?:number):number;setMinutes(min:number,sec?:number,ms?:number):number;setUTCMinutes(min:number,sec?:number,ms?:number):number;setHours(hours:number,min?:number,sec?:number,ms?:number):number;setUTCHours(hours:number,min?:number,sec?:number,ms?:number):number;setDate(date:number):number;setUTCDate(date:number):number;setMonth(month:number,date?:number):number;setUTCMonth(month:number,date?:number):number;setFullYear(year:number,month?:number,date?:number):number;setUTCFullYear(year:number,month?:number,date?:number):number;toUTCString():string;toISOString():string;toJSON(key?:any):string;}interface DateConstructor{new():Date;new(value:number|string):Date;new(year:number,month:number,date?:number,hours?:number,minutes?:number,seconds?:number,ms?:number):Date;():string;readonly prototype:Date;parse(s:string):number;UTC(year:number,month:number,date?:number,hours?:number,minutes?:number,seconds?:number,ms?:number):number;now():number;}declare var Date:DateConstructor;interface RegExpMatchArray extends Array<string>{index?:number;input?:string;}interface RegExpExecArray extends Array<string>{index:number;input:string;}interface RegExp{exec(string:string):RegExpExecArray|null;test(string:string):boolean;readonly source:string;readonly global:boolean;readonly ignoreCase:boolean;readonly multiline:boolean;lastIndex:number;compile(pattern:string,flags?:string):this;}interface RegExpConstructor{new(pattern:RegExp|string):RegExp;new(pattern:string,flags?:string):RegExp;(pattern:RegExp|string):RegExp;(pattern:string,flags?:string):RegExp;readonly prototype:RegExp;$1:string;$2:string;$3:string;$4:string;$5:string;$6:string;$7:string;$8:string;$9:string;input:string;$_:string;lastMatch:string;"$&":string;lastParen:string;"$+":string;leftContext:string;"$`":string;rightContext:string;"$\'":string;}declare var RegExp:RegExpConstructor;interface Error{name:string;message:string;stack?:string;}interface ErrorConstructor{new(message?:string):Error;(message?:string):Error;readonly prototype:Error;}declare var Error:ErrorConstructor;interface EvalError extends Error{}interface EvalErrorConstructor extends ErrorConstructor{new(message?:string):EvalError;(message?:string):EvalError;readonly prototype:EvalError;}declare var EvalError:EvalErrorConstructor;interface RangeError extends Error{}interface RangeErrorConstructor extends ErrorConstructor{new(message?:string):RangeError;(message?:string):RangeError;readonly prototype:RangeError;}declare var RangeError:RangeErrorConstructor;interface ReferenceError extends Error{}interface ReferenceErrorConstructor extends ErrorConstructor{new(message?:string):ReferenceError;(message?:string):ReferenceError;readonly prototype:ReferenceError;}declare var ReferenceError:ReferenceErrorConstructor;interface SyntaxError extends Error{}interface SyntaxErrorConstructor extends ErrorConstructor{new(message?:string):SyntaxError;(message?:string):SyntaxError;readonly prototype:SyntaxError;}declare var SyntaxError:SyntaxErrorConstructor;interface TypeError extends Error{}interface TypeErrorConstructor extends ErrorConstructor{new(message?:string):TypeError;(message?:string):TypeError;readonly prototype:TypeError;}declare var TypeError:TypeErrorConstructor;interface URIError extends Error{}interface URIErrorConstructor extends ErrorConstructor{new(message?:string):URIError;(message?:string):URIError;readonly prototype:URIError;}declare var URIError:URIErrorConstructor;interface JSON{parse(text:string,reviver?:(this:any,key:string,value:any)=>any):any;stringify(value:any,replacer?:(this:any,key:string,value:any)=>any,space?:string|number):string;stringify(value:any,replacer?:(number|string)[]|null,space?:string|number):string;}declare var JSON:JSON;interface ReadonlyArray<T>{readonly length:number;toString():string;toLocaleString():string;concat(...items:ConcatArray<T>[]):T[];concat(...items:(T|ConcatArray<T>)[]):T[];join(separator?:string):string;slice(start?:number,end?:number):T[];indexOf(searchElement:T,fromIndex?:number):number;lastIndexOf(searchElement:T,fromIndex?:number):number;every<S extends T>(predicate:(value:T,index:number,array:readonly T[])=>value is S,thisArg?:any):this is readonly S[];every(predicate:(value:T,index:number,array:readonly T[])=>unknown,thisArg?:any):boolean;some(predicate:(value:T,index:number,array:readonly T[])=>unknown,thisArg?:any):boolean;forEach(callbackfn:(value:T,index:number,array:readonly T[])=>void,thisArg?:any):void;map<U>(callbackfn:(value:T,index:number,array:readonly T[])=>U,thisArg?:any):U[];filter<S extends T>(predicate:(value:T,index:number,array:readonly T[])=>value is S,thisArg?:any):S[];filter(predicate:(value:T,index:number,array:readonly T[])=>unknown,thisArg?:any):T[];reduce(callbackfn:(previousValue:T,currentValue:T,currentIndex:number,array:readonly T[])=>T):T;reduce(callbackfn:(previousValue:T,currentValue:T,currentIndex:number,array:readonly T[])=>T,initialValue:T):T;reduce<U>(callbackfn:(previousValue:U,currentValue:T,currentIndex:number,array:readonly T[])=>U,initialValue:U):U;reduceRight(callbackfn:(previousValue:T,currentValue:T,currentIndex:number,array:readonly T[])=>T):T;reduceRight(callbackfn:(previousValue:T,currentValue:T,currentIndex:number,array:readonly T[])=>T,initialValue:T):T;reduceRight<U>(callbackfn:(previousValue:U,currentValue:T,currentIndex:number,array:readonly T[])=>U,initialValue:U):U;readonly[n:number]:T;}interface ConcatArray<T>{readonly length:number;readonly[n:number]:T;join(separator?:string):string;slice(start?:number,end?:number):T[];}interface Array<T>{length:number;toString():string;toLocaleString():string;pop():T|undefined;push(...items:T[]):number;concat(...items:ConcatArray<T>[]):T[];concat(...items:(T|ConcatArray<T>)[]):T[];join(separator?:string):string;reverse():T[];shift():T|undefined;slice(start?:number,end?:number):T[];sort(compareFn?:(a:T,b:T)=>number):this;splice(start:number,deleteCount?:number):T[];splice(start:number,deleteCount:number,...items:T[]):T[];unshift(...items:T[]):number;indexOf(searchElement:T,fromIndex?:number):number;lastIndexOf(searchElement:T,fromIndex?:number):number;every<S extends T>(predicate:(value:T,index:number,array:T[])=>value is S,thisArg?:any):this is S[];every(predicate:(value:T,index:number,array:T[])=>unknown,thisArg?:any):boolean;some(predicate:(value:T,index:number,array:T[])=>unknown,thisArg?:any):boolean;forEach(callbackfn:(value:T,index:number,array:T[])=>void,thisArg?:any):void;map<U>(callbackfn:(value:T,index:number,array:T[])=>U,thisArg?:any):U[];filter<S extends T>(predicate:(value:T,index:number,array:T[])=>value is S,thisArg?:any):S[];filter(predicate:(value:T,index:number,array:T[])=>unknown,thisArg?:any):T[];reduce(callbackfn:(previousValue:T,currentValue:T,currentIndex:number,array:T[])=>T):T;reduce(callbackfn:(previousValue:T,currentValue:T,currentIndex:number,array:T[])=>T,initialValue:T):T;reduce<U>(callbackfn:(previousValue:U,currentValue:T,currentIndex:number,array:T[])=>U,initialValue:U):U;reduceRight(callbackfn:(previousValue:T,currentValue:T,currentIndex:number,array:T[])=>T):T;reduceRight(callbackfn:(previousValue:T,currentValue:T,currentIndex:number,array:T[])=>T,initialValue:T):T;reduceRight<U>(callbackfn:(previousValue:U,currentValue:T,currentIndex:number,array:T[])=>U,initialValue:U):U;[n:number]:T;}interface ArrayConstructor{new(arrayLength?:number):any[];new<T>(arrayLength:number):T[];new<T>(...items:T[]):T[];(arrayLength?:number):any[];<T>(arrayLength:number):T[];<T>(...items:T[]):T[];isArray(arg:any):arg is any[];readonly prototype:any[];}declare var Array:ArrayConstructor;interface TypedPropertyDescriptor<T>{enumerable?:boolean;configurable?:boolean;writable?:boolean;value?:T;get?:()=>T;set?:(value:T)=>void;}declare type ClassDecorator=<TFunction extends Function>(target:TFunction)=>TFunction|void;declare type PropertyDecorator=(target:Object,propertyKey:string|symbol)=>void;declare type MethodDecorator=<T>(target:Object,propertyKey:string|symbol,descriptor:TypedPropertyDescriptor<T>)=>TypedPropertyDescriptor<T>|void;declare type ParameterDecorator=(target:Object,propertyKey:string|symbol,parameterIndex:number)=>void;declare type PromiseConstructorLike=new<T>(executor:(resolve:(value:T|PromiseLike<T>)=>void,reject:(reason?:any)=>void)=>void)=>PromiseLike<T>;interface PromiseLike<T>{then<TResult1=T,TResult2=never>(onfulfilled?:((value:T)=>TResult1|PromiseLike<TResult1>)|undefined|null,onrejected?:((reason:any)=>TResult2|PromiseLike<TResult2>)|undefined|null):PromiseLike<TResult1|TResult2>;}interface Promise<T>{then<TResult1=T,TResult2=never>(onfulfilled?:((value:T)=>TResult1|PromiseLike<TResult1>)|undefined|null,onrejected?:((reason:any)=>TResult2|PromiseLike<TResult2>)|undefined|null):Promise<TResult1|TResult2>;catch<TResult=never>(onrejected?:((reason:any)=>TResult|PromiseLike<TResult>)|undefined|null):Promise<T|TResult>;}type Awaited<T>=\nT extends null|undefined?T:T extends object&{then(onfulfilled:infer F):any}?\nF extends((value:infer V,...args:any)=>any)?\nAwaited<V>:never:T;interface ArrayLike<T>{readonly length:number;readonly[n:number]:T;}type Partial<T>={[P in keyof T]?:T[P];};type Required<T>={[P in keyof T]-?:T[P];};type Readonly<T>={readonly[P in keyof T]:T[P];};type Pick<T,K extends keyof T>={[P in K]:T[P];};type Record<K extends keyof any,T>={[P in K]:T;};type Exclude<T,U>=T extends U?never:T;type Extract<T,U>=T extends U?T:never;type Omit<T,K extends keyof any>=Pick<T,Exclude<keyof T,K>>;type NonNullable<T>=T extends null|undefined?never:T;type Parameters<T extends(...args:any)=>any>=T extends(...args:infer P)=>any?P:never;type ConstructorParameters<T extends abstract new(...args:any)=>any>=T extends abstract new(...args:infer P)=>any?P:never;type ReturnType<T extends(...args:any)=>any>=T extends(...args:any)=>infer R?R:any;type InstanceType<T extends abstract new(...args:any)=>any>=T extends abstract new(...args:any)=>infer R?R:any;type Uppercase<S extends string>=intrinsic;type Lowercase<S extends string>=intrinsic;type Capitalize<S extends string>=intrinsic;type Uncapitalize<S extends string>=intrinsic;interface ThisType<T>{}interface ArrayBuffer{readonly byteLength:number;slice(begin:number,end?:number):ArrayBuffer;}interface ArrayBufferTypes{ArrayBuffer:ArrayBuffer;}type ArrayBufferLike=ArrayBufferTypes[keyof ArrayBufferTypes];interface ArrayBufferConstructor{readonly prototype:ArrayBuffer;new(byteLength:number):ArrayBuffer;isView(arg:any):arg is ArrayBufferView;}declare var ArrayBuffer:ArrayBufferConstructor;interface ArrayBufferView{buffer:ArrayBufferLike;byteLength:number;byteOffset:number;}interface DataView{readonly buffer:ArrayBuffer;readonly byteLength:number;readonly byteOffset:number;getFloat32(byteOffset:number,littleEndian?:boolean):number;getFloat64(byteOffset:number,littleEndian?:boolean):number;getInt8(byteOffset:number):number;getInt16(byteOffset:number,littleEndian?:boolean):number;getInt32(byteOffset:number,littleEndian?:boolean):number;getUint8(byteOffset:number):number;getUint16(byteOffset:number,littleEndian?:boolean):number;getUint32(byteOffset:number,littleEndian?:boolean):number;setFloat32(byteOffset:number,value:number,littleEndian?:boolean):void;setFloat64(byteOffset:number,value:number,littleEndian?:boolean):void;setInt8(byteOffset:number,value:number):void;setInt16(byteOffset:number,value:number,littleEndian?:boolean):void;setInt32(byteOffset:number,value:number,littleEndian?:boolean):void;setUint8(byteOffset:number,value:number):void;setUint16(byteOffset:number,value:number,littleEndian?:boolean):void;setUint32(byteOffset:number,value:number,littleEndian?:boolean):void;}interface DataViewConstructor{readonly prototype:DataView;new(buffer:ArrayBufferLike,byteOffset?:number,byteLength?:number):DataView;}declare var DataView:DataViewConstructor;interface Int8Array{readonly BYTES_PER_ELEMENT:number;readonly buffer:ArrayBufferLike;readonly byteLength:number;readonly byteOffset:number;copyWithin(target:number,start:number,end?:number):this;every(predicate:(value:number,index:number,array:Int8Array)=>unknown,thisArg?:any):boolean;fill(value:number,start?:number,end?:number):this;filter(predicate:(value:number,index:number,array:Int8Array)=>any,thisArg?:any):Int8Array;find(predicate:(value:number,index:number,obj:Int8Array)=>boolean,thisArg?:any):number|undefined;findIndex(predicate:(value:number,index:number,obj:Int8Array)=>boolean,thisArg?:any):number;forEach(callbackfn:(value:number,index:number,array:Int8Array)=>void,thisArg?:any):void;indexOf(searchElement:number,fromIndex?:number):number;join(separator?:string):string;lastIndexOf(searchElement:number,fromIndex?:number):number;readonly length:number;map(callbackfn:(value:number,index:number,array:Int8Array)=>number,thisArg?:any):Int8Array;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Int8Array)=>number):number;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Int8Array)=>number,initialValue:number):number;reduce<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Int8Array)=>U,initialValue:U):U;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Int8Array)=>number):number;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Int8Array)=>number,initialValue:number):number;reduceRight<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Int8Array)=>U,initialValue:U):U;reverse():Int8Array;set(array:ArrayLike<number>,offset?:number):void;slice(start?:number,end?:number):Int8Array;some(predicate:(value:number,index:number,array:Int8Array)=>unknown,thisArg?:any):boolean;sort(compareFn?:(a:number,b:number)=>number):this;subarray(begin?:number,end?:number):Int8Array;toLocaleString():string;toString():string;valueOf():Int8Array;[index:number]:number;}interface Int8ArrayConstructor{readonly prototype:Int8Array;new(length:number):Int8Array;new(array:ArrayLike<number>|ArrayBufferLike):Int8Array;new(buffer:ArrayBufferLike,byteOffset?:number,length?:number):Int8Array;readonly BYTES_PER_ELEMENT:number;of(...items:number[]):Int8Array;from(arrayLike:ArrayLike<number>):Int8Array;from<T>(arrayLike:ArrayLike<T>,mapfn:(v:T,k:number)=>number,thisArg?:any):Int8Array;}declare var Int8Array:Int8ArrayConstructor;interface Uint8Array{readonly BYTES_PER_ELEMENT:number;readonly buffer:ArrayBufferLike;readonly byteLength:number;readonly byteOffset:number;copyWithin(target:number,start:number,end?:number):this;every(predicate:(value:number,index:number,array:Uint8Array)=>unknown,thisArg?:any):boolean;fill(value:number,start?:number,end?:number):this;filter(predicate:(value:number,index:number,array:Uint8Array)=>any,thisArg?:any):Uint8Array;find(predicate:(value:number,index:number,obj:Uint8Array)=>boolean,thisArg?:any):number|undefined;findIndex(predicate:(value:number,index:number,obj:Uint8Array)=>boolean,thisArg?:any):number;forEach(callbackfn:(value:number,index:number,array:Uint8Array)=>void,thisArg?:any):void;indexOf(searchElement:number,fromIndex?:number):number;join(separator?:string):string;lastIndexOf(searchElement:number,fromIndex?:number):number;readonly length:number;map(callbackfn:(value:number,index:number,array:Uint8Array)=>number,thisArg?:any):Uint8Array;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Uint8Array)=>number):number;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Uint8Array)=>number,initialValue:number):number;reduce<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Uint8Array)=>U,initialValue:U):U;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Uint8Array)=>number):number;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Uint8Array)=>number,initialValue:number):number;reduceRight<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Uint8Array)=>U,initialValue:U):U;reverse():Uint8Array;set(array:ArrayLike<number>,offset?:number):void;slice(start?:number,end?:number):Uint8Array;some(predicate:(value:number,index:number,array:Uint8Array)=>unknown,thisArg?:any):boolean;sort(compareFn?:(a:number,b:number)=>number):this;subarray(begin?:number,end?:number):Uint8Array;toLocaleString():string;toString():string;valueOf():Uint8Array;[index:number]:number;}interface Uint8ArrayConstructor{readonly prototype:Uint8Array;new(length:number):Uint8Array;new(array:ArrayLike<number>|ArrayBufferLike):Uint8Array;new(buffer:ArrayBufferLike,byteOffset?:number,length?:number):Uint8Array;readonly BYTES_PER_ELEMENT:number;of(...items:number[]):Uint8Array;from(arrayLike:ArrayLike<number>):Uint8Array;from<T>(arrayLike:ArrayLike<T>,mapfn:(v:T,k:number)=>number,thisArg?:any):Uint8Array;}declare var Uint8Array:Uint8ArrayConstructor;interface Uint8ClampedArray{readonly BYTES_PER_ELEMENT:number;readonly buffer:ArrayBufferLike;readonly byteLength:number;readonly byteOffset:number;copyWithin(target:number,start:number,end?:number):this;every(predicate:(value:number,index:number,array:Uint8ClampedArray)=>unknown,thisArg?:any):boolean;fill(value:number,start?:number,end?:number):this;filter(predicate:(value:number,index:number,array:Uint8ClampedArray)=>any,thisArg?:any):Uint8ClampedArray;find(predicate:(value:number,index:number,obj:Uint8ClampedArray)=>boolean,thisArg?:any):number|undefined;findIndex(predicate:(value:number,index:number,obj:Uint8ClampedArray)=>boolean,thisArg?:any):number;forEach(callbackfn:(value:number,index:number,array:Uint8ClampedArray)=>void,thisArg?:any):void;indexOf(searchElement:number,fromIndex?:number):number;join(separator?:string):string;lastIndexOf(searchElement:number,fromIndex?:number):number;readonly length:number;map(callbackfn:(value:number,index:number,array:Uint8ClampedArray)=>number,thisArg?:any):Uint8ClampedArray;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Uint8ClampedArray)=>number):number;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Uint8ClampedArray)=>number,initialValue:number):number;reduce<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Uint8ClampedArray)=>U,initialValue:U):U;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Uint8ClampedArray)=>number):number;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Uint8ClampedArray)=>number,initialValue:number):number;reduceRight<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Uint8ClampedArray)=>U,initialValue:U):U;reverse():Uint8ClampedArray;set(array:ArrayLike<number>,offset?:number):void;slice(start?:number,end?:number):Uint8ClampedArray;some(predicate:(value:number,index:number,array:Uint8ClampedArray)=>unknown,thisArg?:any):boolean;sort(compareFn?:(a:number,b:number)=>number):this;subarray(begin?:number,end?:number):Uint8ClampedArray;toLocaleString():string;toString():string;valueOf():Uint8ClampedArray;[index:number]:number;}interface Uint8ClampedArrayConstructor{readonly prototype:Uint8ClampedArray;new(length:number):Uint8ClampedArray;new(array:ArrayLike<number>|ArrayBufferLike):Uint8ClampedArray;new(buffer:ArrayBufferLike,byteOffset?:number,length?:number):Uint8ClampedArray;readonly BYTES_PER_ELEMENT:number;of(...items:number[]):Uint8ClampedArray;from(arrayLike:ArrayLike<number>):Uint8ClampedArray;from<T>(arrayLike:ArrayLike<T>,mapfn:(v:T,k:number)=>number,thisArg?:any):Uint8ClampedArray;}declare var Uint8ClampedArray:Uint8ClampedArrayConstructor;interface Int16Array{readonly BYTES_PER_ELEMENT:number;readonly buffer:ArrayBufferLike;readonly byteLength:number;readonly byteOffset:number;copyWithin(target:number,start:number,end?:number):this;every(predicate:(value:number,index:number,array:Int16Array)=>unknown,thisArg?:any):boolean;fill(value:number,start?:number,end?:number):this;filter(predicate:(value:number,index:number,array:Int16Array)=>any,thisArg?:any):Int16Array;find(predicate:(value:number,index:number,obj:Int16Array)=>boolean,thisArg?:any):number|undefined;findIndex(predicate:(value:number,index:number,obj:Int16Array)=>boolean,thisArg?:any):number;forEach(callbackfn:(value:number,index:number,array:Int16Array)=>void,thisArg?:any):void;indexOf(searchElement:number,fromIndex?:number):number;join(separator?:string):string;lastIndexOf(searchElement:number,fromIndex?:number):number;readonly length:number;map(callbackfn:(value:number,index:number,array:Int16Array)=>number,thisArg?:any):Int16Array;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Int16Array)=>number):number;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Int16Array)=>number,initialValue:number):number;reduce<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Int16Array)=>U,initialValue:U):U;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Int16Array)=>number):number;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Int16Array)=>number,initialValue:number):number;reduceRight<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Int16Array)=>U,initialValue:U):U;reverse():Int16Array;set(array:ArrayLike<number>,offset?:number):void;slice(start?:number,end?:number):Int16Array;some(predicate:(value:number,index:number,array:Int16Array)=>unknown,thisArg?:any):boolean;sort(compareFn?:(a:number,b:number)=>number):this;subarray(begin?:number,end?:number):Int16Array;toLocaleString():string;toString():string;valueOf():Int16Array;[index:number]:number;}interface Int16ArrayConstructor{readonly prototype:Int16Array;new(length:number):Int16Array;new(array:ArrayLike<number>|ArrayBufferLike):Int16Array;new(buffer:ArrayBufferLike,byteOffset?:number,length?:number):Int16Array;readonly BYTES_PER_ELEMENT:number;of(...items:number[]):Int16Array;from(arrayLike:ArrayLike<number>):Int16Array;from<T>(arrayLike:ArrayLike<T>,mapfn:(v:T,k:number)=>number,thisArg?:any):Int16Array;}declare var Int16Array:Int16ArrayConstructor;interface Uint16Array{readonly BYTES_PER_ELEMENT:number;readonly buffer:ArrayBufferLike;readonly byteLength:number;readonly byteOffset:number;copyWithin(target:number,start:number,end?:number):this;every(predicate:(value:number,index:number,array:Uint16Array)=>unknown,thisArg?:any):boolean;fill(value:number,start?:number,end?:number):this;filter(predicate:(value:number,index:number,array:Uint16Array)=>any,thisArg?:any):Uint16Array;find(predicate:(value:number,index:number,obj:Uint16Array)=>boolean,thisArg?:any):number|undefined;findIndex(predicate:(value:number,index:number,obj:Uint16Array)=>boolean,thisArg?:any):number;forEach(callbackfn:(value:number,index:number,array:Uint16Array)=>void,thisArg?:any):void;indexOf(searchElement:number,fromIndex?:number):number;join(separator?:string):string;lastIndexOf(searchElement:number,fromIndex?:number):number;readonly length:number;map(callbackfn:(value:number,index:number,array:Uint16Array)=>number,thisArg?:any):Uint16Array;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Uint16Array)=>number):number;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Uint16Array)=>number,initialValue:number):number;reduce<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Uint16Array)=>U,initialValue:U):U;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Uint16Array)=>number):number;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Uint16Array)=>number,initialValue:number):number;reduceRight<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Uint16Array)=>U,initialValue:U):U;reverse():Uint16Array;set(array:ArrayLike<number>,offset?:number):void;slice(start?:number,end?:number):Uint16Array;some(predicate:(value:number,index:number,array:Uint16Array)=>unknown,thisArg?:any):boolean;sort(compareFn?:(a:number,b:number)=>number):this;subarray(begin?:number,end?:number):Uint16Array;toLocaleString():string;toString():string;valueOf():Uint16Array;[index:number]:number;}interface Uint16ArrayConstructor{readonly prototype:Uint16Array;new(length:number):Uint16Array;new(array:ArrayLike<number>|ArrayBufferLike):Uint16Array;new(buffer:ArrayBufferLike,byteOffset?:number,length?:number):Uint16Array;readonly BYTES_PER_ELEMENT:number;of(...items:number[]):Uint16Array;from(arrayLike:ArrayLike<number>):Uint16Array;from<T>(arrayLike:ArrayLike<T>,mapfn:(v:T,k:number)=>number,thisArg?:any):Uint16Array;}declare var Uint16Array:Uint16ArrayConstructor;interface Int32Array{readonly BYTES_PER_ELEMENT:number;readonly buffer:ArrayBufferLike;readonly byteLength:number;readonly byteOffset:number;copyWithin(target:number,start:number,end?:number):this;every(predicate:(value:number,index:number,array:Int32Array)=>unknown,thisArg?:any):boolean;fill(value:number,start?:number,end?:number):this;filter(predicate:(value:number,index:number,array:Int32Array)=>any,thisArg?:any):Int32Array;find(predicate:(value:number,index:number,obj:Int32Array)=>boolean,thisArg?:any):number|undefined;findIndex(predicate:(value:number,index:number,obj:Int32Array)=>boolean,thisArg?:any):number;forEach(callbackfn:(value:number,index:number,array:Int32Array)=>void,thisArg?:any):void;indexOf(searchElement:number,fromIndex?:number):number;join(separator?:string):string;lastIndexOf(searchElement:number,fromIndex?:number):number;readonly length:number;map(callbackfn:(value:number,index:number,array:Int32Array)=>number,thisArg?:any):Int32Array;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Int32Array)=>number):number;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Int32Array)=>number,initialValue:number):number;reduce<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Int32Array)=>U,initialValue:U):U;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Int32Array)=>number):number;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Int32Array)=>number,initialValue:number):number;reduceRight<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Int32Array)=>U,initialValue:U):U;reverse():Int32Array;set(array:ArrayLike<number>,offset?:number):void;slice(start?:number,end?:number):Int32Array;some(predicate:(value:number,index:number,array:Int32Array)=>unknown,thisArg?:any):boolean;sort(compareFn?:(a:number,b:number)=>number):this;subarray(begin?:number,end?:number):Int32Array;toLocaleString():string;toString():string;valueOf():Int32Array;[index:number]:number;}interface Int32ArrayConstructor{readonly prototype:Int32Array;new(length:number):Int32Array;new(array:ArrayLike<number>|ArrayBufferLike):Int32Array;new(buffer:ArrayBufferLike,byteOffset?:number,length?:number):Int32Array;readonly BYTES_PER_ELEMENT:number;of(...items:number[]):Int32Array;from(arrayLike:ArrayLike<number>):Int32Array;from<T>(arrayLike:ArrayLike<T>,mapfn:(v:T,k:number)=>number,thisArg?:any):Int32Array;}declare var Int32Array:Int32ArrayConstructor;interface Uint32Array{readonly BYTES_PER_ELEMENT:number;readonly buffer:ArrayBufferLike;readonly byteLength:number;readonly byteOffset:number;copyWithin(target:number,start:number,end?:number):this;every(predicate:(value:number,index:number,array:Uint32Array)=>unknown,thisArg?:any):boolean;fill(value:number,start?:number,end?:number):this;filter(predicate:(value:number,index:number,array:Uint32Array)=>any,thisArg?:any):Uint32Array;find(predicate:(value:number,index:number,obj:Uint32Array)=>boolean,thisArg?:any):number|undefined;findIndex(predicate:(value:number,index:number,obj:Uint32Array)=>boolean,thisArg?:any):number;forEach(callbackfn:(value:number,index:number,array:Uint32Array)=>void,thisArg?:any):void;indexOf(searchElement:number,fromIndex?:number):number;join(separator?:string):string;lastIndexOf(searchElement:number,fromIndex?:number):number;readonly length:number;map(callbackfn:(value:number,index:number,array:Uint32Array)=>number,thisArg?:any):Uint32Array;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Uint32Array)=>number):number;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Uint32Array)=>number,initialValue:number):number;reduce<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Uint32Array)=>U,initialValue:U):U;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Uint32Array)=>number):number;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Uint32Array)=>number,initialValue:number):number;reduceRight<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Uint32Array)=>U,initialValue:U):U;reverse():Uint32Array;set(array:ArrayLike<number>,offset?:number):void;slice(start?:number,end?:number):Uint32Array;some(predicate:(value:number,index:number,array:Uint32Array)=>unknown,thisArg?:any):boolean;sort(compareFn?:(a:number,b:number)=>number):this;subarray(begin?:number,end?:number):Uint32Array;toLocaleString():string;toString():string;valueOf():Uint32Array;[index:number]:number;}interface Uint32ArrayConstructor{readonly prototype:Uint32Array;new(length:number):Uint32Array;new(array:ArrayLike<number>|ArrayBufferLike):Uint32Array;new(buffer:ArrayBufferLike,byteOffset?:number,length?:number):Uint32Array;readonly BYTES_PER_ELEMENT:number;of(...items:number[]):Uint32Array;from(arrayLike:ArrayLike<number>):Uint32Array;from<T>(arrayLike:ArrayLike<T>,mapfn:(v:T,k:number)=>number,thisArg?:any):Uint32Array;}declare var Uint32Array:Uint32ArrayConstructor;interface Float32Array{readonly BYTES_PER_ELEMENT:number;readonly buffer:ArrayBufferLike;readonly byteLength:number;readonly byteOffset:number;copyWithin(target:number,start:number,end?:number):this;every(predicate:(value:number,index:number,array:Float32Array)=>unknown,thisArg?:any):boolean;fill(value:number,start?:number,end?:number):this;filter(predicate:(value:number,index:number,array:Float32Array)=>any,thisArg?:any):Float32Array;find(predicate:(value:number,index:number,obj:Float32Array)=>boolean,thisArg?:any):number|undefined;findIndex(predicate:(value:number,index:number,obj:Float32Array)=>boolean,thisArg?:any):number;forEach(callbackfn:(value:number,index:number,array:Float32Array)=>void,thisArg?:any):void;indexOf(searchElement:number,fromIndex?:number):number;join(separator?:string):string;lastIndexOf(searchElement:number,fromIndex?:number):number;readonly length:number;map(callbackfn:(value:number,index:number,array:Float32Array)=>number,thisArg?:any):Float32Array;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Float32Array)=>number):number;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Float32Array)=>number,initialValue:number):number;reduce<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Float32Array)=>U,initialValue:U):U;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Float32Array)=>number):number;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Float32Array)=>number,initialValue:number):number;reduceRight<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Float32Array)=>U,initialValue:U):U;reverse():Float32Array;set(array:ArrayLike<number>,offset?:number):void;slice(start?:number,end?:number):Float32Array;some(predicate:(value:number,index:number,array:Float32Array)=>unknown,thisArg?:any):boolean;sort(compareFn?:(a:number,b:number)=>number):this;subarray(begin?:number,end?:number):Float32Array;toLocaleString():string;toString():string;valueOf():Float32Array;[index:number]:number;}interface Float32ArrayConstructor{readonly prototype:Float32Array;new(length:number):Float32Array;new(array:ArrayLike<number>|ArrayBufferLike):Float32Array;new(buffer:ArrayBufferLike,byteOffset?:number,length?:number):Float32Array;readonly BYTES_PER_ELEMENT:number;of(...items:number[]):Float32Array;from(arrayLike:ArrayLike<number>):Float32Array;from<T>(arrayLike:ArrayLike<T>,mapfn:(v:T,k:number)=>number,thisArg?:any):Float32Array;}declare var Float32Array:Float32ArrayConstructor;interface Float64Array{readonly BYTES_PER_ELEMENT:number;readonly buffer:ArrayBufferLike;readonly byteLength:number;readonly byteOffset:number;copyWithin(target:number,start:number,end?:number):this;every(predicate:(value:number,index:number,array:Float64Array)=>unknown,thisArg?:any):boolean;fill(value:number,start?:number,end?:number):this;filter(predicate:(value:number,index:number,array:Float64Array)=>any,thisArg?:any):Float64Array;find(predicate:(value:number,index:number,obj:Float64Array)=>boolean,thisArg?:any):number|undefined;findIndex(predicate:(value:number,index:number,obj:Float64Array)=>boolean,thisArg?:any):number;forEach(callbackfn:(value:number,index:number,array:Float64Array)=>void,thisArg?:any):void;indexOf(searchElement:number,fromIndex?:number):number;join(separator?:string):string;lastIndexOf(searchElement:number,fromIndex?:number):number;readonly length:number;map(callbackfn:(value:number,index:number,array:Float64Array)=>number,thisArg?:any):Float64Array;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Float64Array)=>number):number;reduce(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Float64Array)=>number,initialValue:number):number;reduce<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Float64Array)=>U,initialValue:U):U;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Float64Array)=>number):number;reduceRight(callbackfn:(previousValue:number,currentValue:number,currentIndex:number,array:Float64Array)=>number,initialValue:number):number;reduceRight<U>(callbackfn:(previousValue:U,currentValue:number,currentIndex:number,array:Float64Array)=>U,initialValue:U):U;reverse():Float64Array;set(array:ArrayLike<number>,offset?:number):void;slice(start?:number,end?:number):Float64Array;some(predicate:(value:number,index:number,array:Float64Array)=>unknown,thisArg?:any):boolean;sort(compareFn?:(a:number,b:number)=>number):this;subarray(begin?:number,end?:number):Float64Array;toString():string;valueOf():Float64Array;[index:number]:number;}interface Float64ArrayConstructor{readonly prototype:Float64Array;new(length:number):Float64Array;new(array:ArrayLike<number>|ArrayBufferLike):Float64Array;new(buffer:ArrayBufferLike,byteOffset?:number,length?:number):Float64Array;readonly BYTES_PER_ELEMENT:number;of(...items:number[]):Float64Array;from(arrayLike:ArrayLike<number>):Float64Array;from<T>(arrayLike:ArrayLike<T>,mapfn:(v:T,k:number)=>number,thisArg?:any):Float64Array;}declare var Float64Array:Float64ArrayConstructor;declare namespace Intl{interface CollatorOptions{usage?:string|undefined;localeMatcher?:string|undefined;numeric?:boolean|undefined;caseFirst?:string|undefined;sensitivity?:string|undefined;ignorePunctuation?:boolean|undefined;}interface ResolvedCollatorOptions{locale:string;usage:string;sensitivity:string;ignorePunctuation:boolean;collation:string;caseFirst:string;numeric:boolean;}interface Collator{compare(x:string,y:string):number;resolvedOptions():ResolvedCollatorOptions;}var Collator:{new(locales?:string|string[],options?:CollatorOptions):Collator;(locales?:string|string[],options?:CollatorOptions):Collator;supportedLocalesOf(locales:string|string[],options?:CollatorOptions):string[];};interface NumberFormatOptions{localeMatcher?:string|undefined;style?:string|undefined;currency?:string|undefined;currencySign?:string|undefined;useGrouping?:boolean|undefined;minimumIntegerDigits?:number|undefined;minimumFractionDigits?:number|undefined;maximumFractionDigits?:number|undefined;minimumSignificantDigits?:number|undefined;maximumSignificantDigits?:number|undefined;}interface ResolvedNumberFormatOptions{locale:string;numberingSystem:string;style:string;currency?:string;minimumIntegerDigits:number;minimumFractionDigits:number;maximumFractionDigits:number;minimumSignificantDigits?:number;maximumSignificantDigits?:number;useGrouping:boolean;}interface NumberFormat{format(value:number):string;resolvedOptions():ResolvedNumberFormatOptions;}var NumberFormat:{new(locales?:string|string[],options?:NumberFormatOptions):NumberFormat;(locales?:string|string[],options?:NumberFormatOptions):NumberFormat;supportedLocalesOf(locales:string|string[],options?:NumberFormatOptions):string[];readonly prototype:NumberFormat;};interface DateTimeFormatOptions{localeMatcher?:"best fit"|"lookup"|undefined;weekday?:"long"|"short"|"narrow"|undefined;era?:"long"|"short"|"narrow"|undefined;year?:"numeric"|"2-digit"|undefined;month?:"numeric"|"2-digit"|"long"|"short"|"narrow"|undefined;day?:"numeric"|"2-digit"|undefined;hour?:"numeric"|"2-digit"|undefined;minute?:"numeric"|"2-digit"|undefined;second?:"numeric"|"2-digit"|undefined;timeZoneName?:"short"|"long"|"shortOffset"|"longOffset"|"shortGeneric"|"longGeneric"|undefined;formatMatcher?:"best fit"|"basic"|undefined;hour12?:boolean|undefined;timeZone?:string|undefined;}interface ResolvedDateTimeFormatOptions{locale:string;calendar:string;numberingSystem:string;timeZone:string;hour12?:boolean;weekday?:string;era?:string;year?:string;month?:string;day?:string;hour?:string;minute?:string;second?:string;timeZoneName?:string;}interface DateTimeFormat{format(date?:Date|number):string;resolvedOptions():ResolvedDateTimeFormatOptions;}var DateTimeFormat:{new(locales?:string|string[],options?:DateTimeFormatOptions):DateTimeFormat;(locales?:string|string[],options?:DateTimeFormatOptions):DateTimeFormat;supportedLocalesOf(locales:string|string[],options?:DateTimeFormatOptions):string[];readonly prototype:DateTimeFormat;};}interface String{localeCompare(that:string,locales?:string|string[],options?:Intl.CollatorOptions):number;}interface Number{toLocaleString(locales?:string|string[],options?:Intl.NumberFormatOptions):string;}interface Date{toLocaleString(locales?:string|string[],options?:Intl.DateTimeFormatOptions):string;toLocaleDateString(locales?:string|string[],options?:Intl.DateTimeFormatOptions):string;toLocaleTimeString(locales?:string|string[],options?:Intl.DateTimeFormatOptions):string;}', "lib.es6.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2015" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="dom.iterable" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n', "lib.esnext.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="es2022" />\r\n/// <reference lib="esnext.intl" />\r\n', "lib.esnext.full.d.ts": '/// <reference no-default-lib="true"/>\r\n/// <reference lib="esnext" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n/// <reference lib="dom.iterable" />', "lib.esnext.intl.d.ts": '/// <reference no-default-lib="true"/>\r\ndeclare namespace Intl{interface NumberFormat{formatRange(start:number|bigint,end:number|bigint):string;formatRangeToParts(start:number|bigint,end:number|bigint):NumberFormatPart[];}}', "lib.esnext.promise.d.ts": '/// <reference no-default-lib="true"/>\ninterface AggregateError extends Error{errors:any[]}interface AggregateErrorConstructor{new(errors:Iterable<any>,message?:string):AggregateError;(errors:Iterable<any>,message?:string):AggregateError;readonly prototype:AggregateError;}declare var AggregateError:AggregateErrorConstructor;interface PromiseConstructor{any<T>(values:(T|PromiseLike<T>)[]|Iterable<T|PromiseLike<T>>):Promise<T>}', "lib.esnext.string.d.ts": '/// <reference no-default-lib="true"/>\ninterface String{replaceAll(searchValue:string|RegExp,replaceValue:string):string;replaceAll(searchValue:string|RegExp,replacer:(substring:string,...args:any[])=>string):string;}', "lib.esnext.weakref.d.ts": '/// <reference no-default-lib="true"/>\ninterface WeakRef<T extends object>{readonly[Symbol.toStringTag]:"WeakRef";deref():T|undefined;}interface WeakRefConstructor{readonly prototype:WeakRef<any>;new<T extends object>(target?:T):WeakRef<T>;}declare var WeakRef:WeakRefConstructor;interface FinalizationRegistry{readonly[Symbol.toStringTag]:"FinalizationRegistry";register(target:object,heldValue:any,unregisterToken?:object):void;unregister(unregisterToken:object):void;}interface FinalizationRegistryConstructor{readonly prototype:FinalizationRegistry;new(cleanupCallback:(heldValue:any)=>void):FinalizationRegistry;}declare var FinalizationRegistry:FinalizationRegistryConstructor;', "lib.scripthost.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface ActiveXObject{new(s:string):any;}declare var ActiveXObject:ActiveXObject;interface ITextWriter{Write(s:string):void;WriteLine(s:string):void;Close():void;}interface TextStreamBase{Column:number;Line:number;Close():void;}interface TextStreamWriter extends TextStreamBase{Write(s:string):void;WriteBlankLines(intLines:number):void;WriteLine(s:string):void;}interface TextStreamReader extends TextStreamBase{Read(characters:number):string;ReadAll():string;ReadLine():string;Skip(characters:number):void;SkipLine():void;AtEndOfLine:boolean;AtEndOfStream:boolean;}declare var WScript:{Echo(s:any):void;StdErr:TextStreamWriter;StdOut:TextStreamWriter;Arguments:{length:number;Item(n:number):string;};ScriptFullName:string;Quit(exitCode?:number):number;BuildVersion:number;FullName:string;Interactive:boolean;Name:string;Path:string;ScriptName:string;StdIn:TextStreamReader;Version:string;ConnectObject(objEventSource:any,strPrefix:string):void;CreateObject(strProgID:string,strPrefix?:string):any;DisconnectObject(obj:any):void;GetObject(strPathname:string,strProgID?:string,strPrefix?:string):any;Sleep(intTime:number):void;};declare var WSH:typeof WScript;declare class SafeArray<T=any>{private constructor();private SafeArray_typekey:SafeArray<T>;}interface Enumerator<T=any>{atEnd():boolean;item():T;moveFirst():void;moveNext():void;}interface EnumeratorConstructor{new<T=any>(safearray:SafeArray<T>):Enumerator<T>;new<T=any>(collection:{Item(index:any):T}):Enumerator<T>;new<T=any>(collection:any):Enumerator<T>;}declare var Enumerator:EnumeratorConstructor;interface VBArray<T=any>{dimensions():number;getItem(dimension1Index:number,...dimensionNIndexes:number[]):T;lbound(dimension?:number):number;ubound(dimension?:number):number;toArray():T[];}interface VBArrayConstructor{new<T=any>(safeArray:SafeArray<T>):VBArray<T>;}declare var VBArray:VBArrayConstructor;declare class VarDate{private constructor();private VarDate_typekey:VarDate;}interface DateConstructor{new(vd:VarDate):Date;}interface Date{getVarDate:()=>VarDate;}', "lib.webworker.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface AddEventListenerOptions extends EventListenerOptions{once?:boolean;passive?:boolean;signal?:AbortSignal;}interface AesCbcParams extends Algorithm{iv:BufferSource;}interface AesCtrParams extends Algorithm{counter:BufferSource;length:number;}interface AesDerivedKeyParams extends Algorithm{length:number;}interface AesGcmParams extends Algorithm{additionalData?:BufferSource;iv:BufferSource;tagLength?:number;}interface AesKeyAlgorithm extends KeyAlgorithm{length:number;}interface AesKeyGenParams extends Algorithm{length:number;}interface Algorithm{name:string;}interface AudioConfiguration{bitrate?:number;channels?:string;contentType:string;samplerate?:number;spatialRendering?:boolean;}interface BlobPropertyBag{endings?:EndingType;type?:string;}interface CacheQueryOptions{ignoreMethod?:boolean;ignoreSearch?:boolean;ignoreVary?:boolean;}interface ClientQueryOptions{includeUncontrolled?:boolean;type?:ClientTypes;}interface CloseEventInit extends EventInit{code?:number;reason?:string;wasClean?:boolean;}interface CryptoKeyPair{privateKey:CryptoKey;publicKey:CryptoKey;}interface CustomEventInit<T=any>extends EventInit{detail?:T;}interface DOMMatrix2DInit{a?:number;b?:number;c?:number;d?:number;e?:number;f?:number;m11?:number;m12?:number;m21?:number;m22?:number;m41?:number;m42?:number;}interface DOMMatrixInit extends DOMMatrix2DInit{is2D?:boolean;m13?:number;m14?:number;m23?:number;m24?:number;m31?:number;m32?:number;m33?:number;m34?:number;m43?:number;m44?:number;}interface DOMPointInit{w?:number;x?:number;y?:number;z?:number;}interface DOMQuadInit{p1?:DOMPointInit;p2?:DOMPointInit;p3?:DOMPointInit;p4?:DOMPointInit;}interface DOMRectInit{height?:number;width?:number;x?:number;y?:number;}interface EcKeyGenParams extends Algorithm{namedCurve:NamedCurve;}interface EcKeyImportParams extends Algorithm{namedCurve:NamedCurve;}interface EcdhKeyDeriveParams extends Algorithm{public:CryptoKey;}interface EcdsaParams extends Algorithm{hash:HashAlgorithmIdentifier;}interface ErrorEventInit extends EventInit{colno?:number;error?:any;filename?:string;lineno?:number;message?:string;}interface EventInit{bubbles?:boolean;cancelable?:boolean;composed?:boolean;}interface EventListenerOptions{capture?:boolean;}interface EventSourceInit{withCredentials?:boolean;}interface ExtendableEventInit extends EventInit{}interface ExtendableMessageEventInit extends ExtendableEventInit{data?:any;lastEventId?:string;origin?:string;ports?:MessagePort[];source?:Client|ServiceWorker|MessagePort|null;}interface FetchEventInit extends ExtendableEventInit{clientId?:string;handled?:Promise<undefined>;preloadResponse?:Promise<any>;replacesClientId?:string;request:Request;resultingClientId?:string;}interface FilePropertyBag extends BlobPropertyBag{lastModified?:number;}interface FileSystemGetDirectoryOptions{create?:boolean;}interface FileSystemGetFileOptions{create?:boolean;}interface FileSystemRemoveOptions{recursive?:boolean;}interface FontFaceDescriptors{display?:string;featureSettings?:string;stretch?:string;style?:string;unicodeRange?:string;variant?:string;weight?:string;}interface FontFaceSetLoadEventInit extends EventInit{fontfaces?:FontFace[];}interface GetNotificationOptions{tag?:string;}interface HkdfParams extends Algorithm{hash:HashAlgorithmIdentifier;info:BufferSource;salt:BufferSource;}interface HmacImportParams extends Algorithm{hash:HashAlgorithmIdentifier;length?:number;}interface HmacKeyGenParams extends Algorithm{hash:HashAlgorithmIdentifier;length?:number;}interface IDBDatabaseInfo{name?:string;version?:number;}interface IDBIndexParameters{multiEntry?:boolean;unique?:boolean;}interface IDBObjectStoreParameters{autoIncrement?:boolean;keyPath?:string|string[]|null;}interface IDBVersionChangeEventInit extends EventInit{newVersion?:number|null;oldVersion?:number;}interface ImageBitmapOptions{colorSpaceConversion?:ColorSpaceConversion;imageOrientation?:ImageOrientation;premultiplyAlpha?:PremultiplyAlpha;resizeHeight?:number;resizeQuality?:ResizeQuality;resizeWidth?:number;}interface ImageBitmapRenderingContextSettings{alpha?:boolean;}interface ImageDataSettings{colorSpace?:PredefinedColorSpace;}interface ImportMeta{url:string;}interface JsonWebKey{alg?:string;crv?:string;d?:string;dp?:string;dq?:string;e?:string;ext?:boolean;k?:string;key_ops?:string[];kty?:string;n?:string;oth?:RsaOtherPrimesInfo[];p?:string;q?:string;qi?:string;use?:string;x?:string;y?:string;}interface KeyAlgorithm{name:string;}interface LockInfo{clientId?:string;mode?:LockMode;name?:string;}interface LockManagerSnapshot{held?:LockInfo[];pending?:LockInfo[];}interface LockOptions{ifAvailable?:boolean;mode?:LockMode;signal?:AbortSignal;steal?:boolean;}interface MediaCapabilitiesDecodingInfo extends MediaCapabilitiesInfo{configuration?:MediaDecodingConfiguration;}interface MediaCapabilitiesEncodingInfo extends MediaCapabilitiesInfo{configuration?:MediaEncodingConfiguration;}interface MediaCapabilitiesInfo{powerEfficient:boolean;smooth:boolean;supported:boolean;}interface MediaConfiguration{audio?:AudioConfiguration;video?:VideoConfiguration;}interface MediaDecodingConfiguration extends MediaConfiguration{type:MediaDecodingType;}interface MediaEncodingConfiguration extends MediaConfiguration{type:MediaEncodingType;}interface MessageEventInit<T=any>extends EventInit{data?:T;lastEventId?:string;origin?:string;ports?:MessagePort[];source?:MessageEventSource|null;}interface MultiCacheQueryOptions extends CacheQueryOptions{cacheName?:string;}interface NavigationPreloadState{enabled?:boolean;headerValue?:string;}interface NotificationAction{action:string;icon?:string;title:string;}interface NotificationEventInit extends ExtendableEventInit{action?:string;notification:Notification;}interface NotificationOptions{actions?:NotificationAction[];badge?:string;body?:string;data?:any;dir?:NotificationDirection;icon?:string;image?:string;lang?:string;renotify?:boolean;requireInteraction?:boolean;silent?:boolean;tag?:string;timestamp?:EpochTimeStamp;vibrate?:VibratePattern;}interface Pbkdf2Params extends Algorithm{hash:HashAlgorithmIdentifier;iterations:number;salt:BufferSource;}interface PerformanceMarkOptions{detail?:any;startTime?:DOMHighResTimeStamp;}interface PerformanceMeasureOptions{detail?:any;duration?:DOMHighResTimeStamp;end?:string|DOMHighResTimeStamp;start?:string|DOMHighResTimeStamp;}interface PerformanceObserverInit{buffered?:boolean;entryTypes?:string[];type?:string;}interface PermissionDescriptor{name:PermissionName;}interface ProgressEventInit extends EventInit{lengthComputable?:boolean;loaded?:number;total?:number;}interface PromiseRejectionEventInit extends EventInit{promise:Promise<any>;reason?:any;}interface PushEventInit extends ExtendableEventInit{data?:PushMessageDataInit;}interface PushSubscriptionJSON{endpoint?:string;expirationTime?:EpochTimeStamp|null;keys?:Record<string,string>;}interface PushSubscriptionOptionsInit{applicationServerKey?:BufferSource|string|null;userVisibleOnly?:boolean;}interface QueuingStrategy<T=any>{highWaterMark?:number;size?:QueuingStrategySize<T>;}interface QueuingStrategyInit{highWaterMark:number;}interface RTCEncodedAudioFrameMetadata{contributingSources?:number[];synchronizationSource?:number;}interface RTCEncodedVideoFrameMetadata{contributingSources?:number[];dependencies?:number[];frameId?:number;height?:number;spatialIndex?:number;synchronizationSource?:number;temporalIndex?:number;width?:number;}interface ReadableStreamDefaultReadDoneResult{done:true;value?:undefined;}interface ReadableStreamDefaultReadValueResult<T>{done:false;value:T;}interface ReadableWritablePair<R=any,W=any>{readable:ReadableStream<R>;writable:WritableStream<W>;}interface RegistrationOptions{scope?:string;type?:WorkerType;updateViaCache?:ServiceWorkerUpdateViaCache;}interface RequestInit{body?:BodyInit|null;cache?:RequestCache;credentials?:RequestCredentials;headers?:HeadersInit;integrity?:string;keepalive?:boolean;method?:string;mode?:RequestMode;redirect?:RequestRedirect;referrer?:string;referrerPolicy?:ReferrerPolicy;signal?:AbortSignal|null;window?:null;}interface ResponseInit{headers?:HeadersInit;status?:number;statusText?:string;}interface RsaHashedImportParams extends Algorithm{hash:HashAlgorithmIdentifier;}interface RsaHashedKeyGenParams extends RsaKeyGenParams{hash:HashAlgorithmIdentifier;}interface RsaKeyGenParams extends Algorithm{modulusLength:number;publicExponent:BigInteger;}interface RsaOaepParams extends Algorithm{label?:BufferSource;}interface RsaOtherPrimesInfo{d?:string;r?:string;t?:string;}interface RsaPssParams extends Algorithm{saltLength:number;}interface SecurityPolicyViolationEventInit extends EventInit{blockedURI?:string;columnNumber?:number;disposition:SecurityPolicyViolationEventDisposition;documentURI:string;effectiveDirective:string;lineNumber?:number;originalPolicy:string;referrer?:string;sample?:string;sourceFile?:string;statusCode:number;violatedDirective:string;}interface StorageEstimate{quota?:number;usage?:number;}interface StreamPipeOptions{preventAbort?:boolean;preventCancel?:boolean;preventClose?:boolean;signal?:AbortSignal;}interface StructuredSerializeOptions{transfer?:Transferable[];}interface TextDecodeOptions{stream?:boolean;}interface TextDecoderOptions{fatal?:boolean;ignoreBOM?:boolean;}interface TextEncoderEncodeIntoResult{read?:number;written?:number;}interface Transformer<I=any,O=any>{flush?:TransformerFlushCallback<O>;readableType?:undefined;start?:TransformerStartCallback<O>;transform?:TransformerTransformCallback<I,O>;writableType?:undefined;}interface UnderlyingSink<W=any>{abort?:UnderlyingSinkAbortCallback;close?:UnderlyingSinkCloseCallback;start?:UnderlyingSinkStartCallback;type?:undefined;write?:UnderlyingSinkWriteCallback<W>;}interface UnderlyingSource<R=any>{cancel?:UnderlyingSourceCancelCallback;pull?:UnderlyingSourcePullCallback<R>;start?:UnderlyingSourceStartCallback<R>;type?:undefined;}interface VideoColorSpaceInit{fullRange?:boolean;matrix?:VideoMatrixCoefficients;primaries?:VideoColorPrimaries;transfer?:VideoTransferCharacteristics;}interface VideoConfiguration{bitrate:number;colorGamut?:ColorGamut;contentType:string;framerate:number;hdrMetadataType?:HdrMetadataType;height:number;scalabilityMode?:string;transferFunction?:TransferFunction;width:number;}interface WebGLContextAttributes{alpha?:boolean;antialias?:boolean;depth?:boolean;desynchronized?:boolean;failIfMajorPerformanceCaveat?:boolean;powerPreference?:WebGLPowerPreference;premultipliedAlpha?:boolean;preserveDrawingBuffer?:boolean;stencil?:boolean;}interface WebGLContextEventInit extends EventInit{statusMessage?:string;}interface WorkerOptions{credentials?:RequestCredentials;name?:string;type?:WorkerType;}interface ANGLE_instanced_arrays{drawArraysInstancedANGLE(mode:GLenum,first:GLint,count:GLsizei,primcount:GLsizei):void;drawElementsInstancedANGLE(mode:GLenum,count:GLsizei,type:GLenum,offset:GLintptr,primcount:GLsizei):void;vertexAttribDivisorANGLE(index:GLuint,divisor:GLuint):void;readonly VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE:GLenum;}interface AbortController{readonly signal:AbortSignal;}declare var AbortController:{prototype:AbortController;new():AbortController;};interface AbortSignalEventMap{"abort":Event;}interface AbortSignal extends EventTarget{readonly aborted:boolean;onabort:((this:AbortSignal,ev:Event)=>any)|null;readonly reason:any;throwIfAborted():void;addEventListener<K extends keyof AbortSignalEventMap>(type:K,listener:(this:AbortSignal,ev:AbortSignalEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof AbortSignalEventMap>(type:K,listener:(this:AbortSignal,ev:AbortSignalEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var AbortSignal:{prototype:AbortSignal;new():AbortSignal;abort(reason?:any):AbortSignal;};interface AbstractWorkerEventMap{"error":ErrorEvent;}interface AbstractWorker{onerror:((this:AbstractWorker,ev:ErrorEvent)=>any)|null;addEventListener<K extends keyof AbstractWorkerEventMap>(type:K,listener:(this:AbstractWorker,ev:AbstractWorkerEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof AbstractWorkerEventMap>(type:K,listener:(this:AbstractWorker,ev:AbstractWorkerEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}interface AnimationFrameProvider{cancelAnimationFrame(handle:number):void;requestAnimationFrame(callback:FrameRequestCallback):number;}interface Blob{readonly size:number;readonly type:string;arrayBuffer():Promise<ArrayBuffer>;slice(start?:number,end?:number,contentType?:string):Blob;stream():ReadableStream<Uint8Array>;text():Promise<string>;}declare var Blob:{prototype:Blob;new(blobParts?:BlobPart[],options?:BlobPropertyBag):Blob;};interface Body{readonly body:ReadableStream<Uint8Array>|null;readonly bodyUsed:boolean;arrayBuffer():Promise<ArrayBuffer>;blob():Promise<Blob>;formData():Promise<FormData>;json():Promise<any>;text():Promise<string>;}interface BroadcastChannelEventMap{"message":MessageEvent;"messageerror":MessageEvent;}interface BroadcastChannel extends EventTarget{readonly name:string;onmessage:((this:BroadcastChannel,ev:MessageEvent)=>any)|null;onmessageerror:((this:BroadcastChannel,ev:MessageEvent)=>any)|null;close():void;postMessage(message:any):void;addEventListener<K extends keyof BroadcastChannelEventMap>(type:K,listener:(this:BroadcastChannel,ev:BroadcastChannelEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof BroadcastChannelEventMap>(type:K,listener:(this:BroadcastChannel,ev:BroadcastChannelEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var BroadcastChannel:{prototype:BroadcastChannel;new(name:string):BroadcastChannel;};interface ByteLengthQueuingStrategy extends QueuingStrategy<ArrayBufferView>{readonly highWaterMark:number;readonly size:QueuingStrategySize<ArrayBufferView>;}declare var ByteLengthQueuingStrategy:{prototype:ByteLengthQueuingStrategy;new(init:QueuingStrategyInit):ByteLengthQueuingStrategy;};interface Cache{add(request:RequestInfo|URL):Promise<void>;addAll(requests:RequestInfo[]):Promise<void>;delete(request:RequestInfo|URL,options?:CacheQueryOptions):Promise<boolean>;keys(request?:RequestInfo|URL,options?:CacheQueryOptions):Promise<ReadonlyArray<Request>>;match(request:RequestInfo|URL,options?:CacheQueryOptions):Promise<Response|undefined>;matchAll(request?:RequestInfo|URL,options?:CacheQueryOptions):Promise<ReadonlyArray<Response>>;put(request:RequestInfo|URL,response:Response):Promise<void>;}declare var Cache:{prototype:Cache;new():Cache;};interface CacheStorage{delete(cacheName:string):Promise<boolean>;has(cacheName:string):Promise<boolean>;keys():Promise<string[]>;match(request:RequestInfo|URL,options?:MultiCacheQueryOptions):Promise<Response|undefined>;open(cacheName:string):Promise<Cache>;}declare var CacheStorage:{prototype:CacheStorage;new():CacheStorage;};interface CanvasGradient{addColorStop(offset:number,color:string):void;}declare var CanvasGradient:{prototype:CanvasGradient;new():CanvasGradient;};interface CanvasPath{arc(x:number,y:number,radius:number,startAngle:number,endAngle:number,counterclockwise?:boolean):void;arcTo(x1:number,y1:number,x2:number,y2:number,radius:number):void;bezierCurveTo(cp1x:number,cp1y:number,cp2x:number,cp2y:number,x:number,y:number):void;closePath():void;ellipse(x:number,y:number,radiusX:number,radiusY:number,rotation:number,startAngle:number,endAngle:number,counterclockwise?:boolean):void;lineTo(x:number,y:number):void;moveTo(x:number,y:number):void;quadraticCurveTo(cpx:number,cpy:number,x:number,y:number):void;rect(x:number,y:number,w:number,h:number):void;}interface CanvasPattern{setTransform(transform?:DOMMatrix2DInit):void;}declare var CanvasPattern:{prototype:CanvasPattern;new():CanvasPattern;};interface Client{readonly frameType:FrameType;readonly id:string;readonly type:ClientTypes;readonly url:string;postMessage(message:any,transfer:Transferable[]):void;postMessage(message:any,options?:StructuredSerializeOptions):void;}declare var Client:{prototype:Client;new():Client;};interface Clients{claim():Promise<void>;get(id:string):Promise<Client|undefined>;matchAll<T extends ClientQueryOptions>(options?:T):Promise<ReadonlyArray<T["type"]extends"window"?WindowClient:Client>>;openWindow(url:string|URL):Promise<WindowClient|null>;}declare var Clients:{prototype:Clients;new():Clients;};interface CloseEvent extends Event{readonly code:number;readonly reason:string;readonly wasClean:boolean;}declare var CloseEvent:{prototype:CloseEvent;new(type:string,eventInitDict?:CloseEventInit):CloseEvent;};interface CountQueuingStrategy extends QueuingStrategy{readonly highWaterMark:number;readonly size:QueuingStrategySize;}declare var CountQueuingStrategy:{prototype:CountQueuingStrategy;new(init:QueuingStrategyInit):CountQueuingStrategy;};interface Crypto{readonly subtle:SubtleCrypto;getRandomValues<T extends ArrayBufferView|null>(array:T):T;randomUUID():string;}declare var Crypto:{prototype:Crypto;new():Crypto;};interface CryptoKey{readonly algorithm:KeyAlgorithm;readonly extractable:boolean;readonly type:KeyType;readonly usages:KeyUsage[];}declare var CryptoKey:{prototype:CryptoKey;new():CryptoKey;};interface CustomEvent<T=any>extends Event{readonly detail:T;initCustomEvent(type:string,bubbles?:boolean,cancelable?:boolean,detail?:T):void;}declare var CustomEvent:{prototype:CustomEvent;new<T>(type:string,eventInitDict?:CustomEventInit<T>):CustomEvent<T>;};interface DOMException extends Error{readonly code:number;readonly message:string;readonly name:string;readonly ABORT_ERR:number;readonly DATA_CLONE_ERR:number;readonly DOMSTRING_SIZE_ERR:number;readonly HIERARCHY_REQUEST_ERR:number;readonly INDEX_SIZE_ERR:number;readonly INUSE_ATTRIBUTE_ERR:number;readonly INVALID_ACCESS_ERR:number;readonly INVALID_CHARACTER_ERR:number;readonly INVALID_MODIFICATION_ERR:number;readonly INVALID_NODE_TYPE_ERR:number;readonly INVALID_STATE_ERR:number;readonly NAMESPACE_ERR:number;readonly NETWORK_ERR:number;readonly NOT_FOUND_ERR:number;readonly NOT_SUPPORTED_ERR:number;readonly NO_DATA_ALLOWED_ERR:number;readonly NO_MODIFICATION_ALLOWED_ERR:number;readonly QUOTA_EXCEEDED_ERR:number;readonly SECURITY_ERR:number;readonly SYNTAX_ERR:number;readonly TIMEOUT_ERR:number;readonly TYPE_MISMATCH_ERR:number;readonly URL_MISMATCH_ERR:number;readonly VALIDATION_ERR:number;readonly WRONG_DOCUMENT_ERR:number;}declare var DOMException:{prototype:DOMException;new(message?:string,name?:string):DOMException;readonly ABORT_ERR:number;readonly DATA_CLONE_ERR:number;readonly DOMSTRING_SIZE_ERR:number;readonly HIERARCHY_REQUEST_ERR:number;readonly INDEX_SIZE_ERR:number;readonly INUSE_ATTRIBUTE_ERR:number;readonly INVALID_ACCESS_ERR:number;readonly INVALID_CHARACTER_ERR:number;readonly INVALID_MODIFICATION_ERR:number;readonly INVALID_NODE_TYPE_ERR:number;readonly INVALID_STATE_ERR:number;readonly NAMESPACE_ERR:number;readonly NETWORK_ERR:number;readonly NOT_FOUND_ERR:number;readonly NOT_SUPPORTED_ERR:number;readonly NO_DATA_ALLOWED_ERR:number;readonly NO_MODIFICATION_ALLOWED_ERR:number;readonly QUOTA_EXCEEDED_ERR:number;readonly SECURITY_ERR:number;readonly SYNTAX_ERR:number;readonly TIMEOUT_ERR:number;readonly TYPE_MISMATCH_ERR:number;readonly URL_MISMATCH_ERR:number;readonly VALIDATION_ERR:number;readonly WRONG_DOCUMENT_ERR:number;};interface DOMMatrix extends DOMMatrixReadOnly{a:number;b:number;c:number;d:number;e:number;f:number;m11:number;m12:number;m13:number;m14:number;m21:number;m22:number;m23:number;m24:number;m31:number;m32:number;m33:number;m34:number;m41:number;m42:number;m43:number;m44:number;invertSelf():DOMMatrix;multiplySelf(other?:DOMMatrixInit):DOMMatrix;preMultiplySelf(other?:DOMMatrixInit):DOMMatrix;rotateAxisAngleSelf(x?:number,y?:number,z?:number,angle?:number):DOMMatrix;rotateFromVectorSelf(x?:number,y?:number):DOMMatrix;rotateSelf(rotX?:number,rotY?:number,rotZ?:number):DOMMatrix;scale3dSelf(scale?:number,originX?:number,originY?:number,originZ?:number):DOMMatrix;scaleSelf(scaleX?:number,scaleY?:number,scaleZ?:number,originX?:number,originY?:number,originZ?:number):DOMMatrix;skewXSelf(sx?:number):DOMMatrix;skewYSelf(sy?:number):DOMMatrix;translateSelf(tx?:number,ty?:number,tz?:number):DOMMatrix;}declare var DOMMatrix:{prototype:DOMMatrix;new(init?:string|number[]):DOMMatrix;fromFloat32Array(array32:Float32Array):DOMMatrix;fromFloat64Array(array64:Float64Array):DOMMatrix;fromMatrix(other?:DOMMatrixInit):DOMMatrix;};interface DOMMatrixReadOnly{readonly a:number;readonly b:number;readonly c:number;readonly d:number;readonly e:number;readonly f:number;readonly is2D:boolean;readonly isIdentity:boolean;readonly m11:number;readonly m12:number;readonly m13:number;readonly m14:number;readonly m21:number;readonly m22:number;readonly m23:number;readonly m24:number;readonly m31:number;readonly m32:number;readonly m33:number;readonly m34:number;readonly m41:number;readonly m42:number;readonly m43:number;readonly m44:number;flipX():DOMMatrix;flipY():DOMMatrix;inverse():DOMMatrix;multiply(other?:DOMMatrixInit):DOMMatrix;rotate(rotX?:number,rotY?:number,rotZ?:number):DOMMatrix;rotateAxisAngle(x?:number,y?:number,z?:number,angle?:number):DOMMatrix;rotateFromVector(x?:number,y?:number):DOMMatrix;scale(scaleX?:number,scaleY?:number,scaleZ?:number,originX?:number,originY?:number,originZ?:number):DOMMatrix;scale3d(scale?:number,originX?:number,originY?:number,originZ?:number):DOMMatrix;scaleNonUniform(scaleX?:number,scaleY?:number):DOMMatrix;skewX(sx?:number):DOMMatrix;skewY(sy?:number):DOMMatrix;toFloat32Array():Float32Array;toFloat64Array():Float64Array;toJSON():any;transformPoint(point?:DOMPointInit):DOMPoint;translate(tx?:number,ty?:number,tz?:number):DOMMatrix;}declare var DOMMatrixReadOnly:{prototype:DOMMatrixReadOnly;new(init?:string|number[]):DOMMatrixReadOnly;fromFloat32Array(array32:Float32Array):DOMMatrixReadOnly;fromFloat64Array(array64:Float64Array):DOMMatrixReadOnly;fromMatrix(other?:DOMMatrixInit):DOMMatrixReadOnly;};interface DOMPoint extends DOMPointReadOnly{w:number;x:number;y:number;z:number;}declare var DOMPoint:{prototype:DOMPoint;new(x?:number,y?:number,z?:number,w?:number):DOMPoint;fromPoint(other?:DOMPointInit):DOMPoint;};interface DOMPointReadOnly{readonly w:number;readonly x:number;readonly y:number;readonly z:number;matrixTransform(matrix?:DOMMatrixInit):DOMPoint;toJSON():any;}declare var DOMPointReadOnly:{prototype:DOMPointReadOnly;new(x?:number,y?:number,z?:number,w?:number):DOMPointReadOnly;fromPoint(other?:DOMPointInit):DOMPointReadOnly;};interface DOMQuad{readonly p1:DOMPoint;readonly p2:DOMPoint;readonly p3:DOMPoint;readonly p4:DOMPoint;getBounds():DOMRect;toJSON():any;}declare var DOMQuad:{prototype:DOMQuad;new(p1?:DOMPointInit,p2?:DOMPointInit,p3?:DOMPointInit,p4?:DOMPointInit):DOMQuad;fromQuad(other?:DOMQuadInit):DOMQuad;fromRect(other?:DOMRectInit):DOMQuad;};interface DOMRect extends DOMRectReadOnly{height:number;width:number;x:number;y:number;}declare var DOMRect:{prototype:DOMRect;new(x?:number,y?:number,width?:number,height?:number):DOMRect;fromRect(other?:DOMRectInit):DOMRect;};interface DOMRectReadOnly{readonly bottom:number;readonly height:number;readonly left:number;readonly right:number;readonly top:number;readonly width:number;readonly x:number;readonly y:number;toJSON():any;}declare var DOMRectReadOnly:{prototype:DOMRectReadOnly;new(x?:number,y?:number,width?:number,height?:number):DOMRectReadOnly;fromRect(other?:DOMRectInit):DOMRectReadOnly;};interface DOMStringList{readonly length:number;contains(string:string):boolean;item(index:number):string|null;[index:number]:string;}declare var DOMStringList:{prototype:DOMStringList;new():DOMStringList;};interface DedicatedWorkerGlobalScopeEventMap extends WorkerGlobalScopeEventMap{"message":MessageEvent;"messageerror":MessageEvent;}interface DedicatedWorkerGlobalScope extends WorkerGlobalScope,AnimationFrameProvider{readonly name:string;onmessage:((this:DedicatedWorkerGlobalScope,ev:MessageEvent)=>any)|null;onmessageerror:((this:DedicatedWorkerGlobalScope,ev:MessageEvent)=>any)|null;close():void;postMessage(message:any,transfer:Transferable[]):void;postMessage(message:any,options?:StructuredSerializeOptions):void;addEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type:K,listener:(this:DedicatedWorkerGlobalScope,ev:DedicatedWorkerGlobalScopeEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type:K,listener:(this:DedicatedWorkerGlobalScope,ev:DedicatedWorkerGlobalScopeEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var DedicatedWorkerGlobalScope:{prototype:DedicatedWorkerGlobalScope;new():DedicatedWorkerGlobalScope;};interface EXT_blend_minmax{readonly MAX_EXT:GLenum;readonly MIN_EXT:GLenum;}interface EXT_color_buffer_float{}interface EXT_color_buffer_half_float{readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT:GLenum;readonly RGB16F_EXT:GLenum;readonly RGBA16F_EXT:GLenum;readonly UNSIGNED_NORMALIZED_EXT:GLenum;}interface EXT_float_blend{}interface EXT_frag_depth{}interface EXT_sRGB{readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT:GLenum;readonly SRGB8_ALPHA8_EXT:GLenum;readonly SRGB_ALPHA_EXT:GLenum;readonly SRGB_EXT:GLenum;}interface EXT_shader_texture_lod{}interface EXT_texture_compression_rgtc{readonly COMPRESSED_RED_GREEN_RGTC2_EXT:GLenum;readonly COMPRESSED_RED_RGTC1_EXT:GLenum;readonly COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT:GLenum;readonly COMPRESSED_SIGNED_RED_RGTC1_EXT:GLenum;}interface EXT_texture_filter_anisotropic{readonly MAX_TEXTURE_MAX_ANISOTROPY_EXT:GLenum;readonly TEXTURE_MAX_ANISOTROPY_EXT:GLenum;}interface ErrorEvent extends Event{readonly colno:number;readonly error:any;readonly filename:string;readonly lineno:number;readonly message:string;}declare var ErrorEvent:{prototype:ErrorEvent;new(type:string,eventInitDict?:ErrorEventInit):ErrorEvent;};interface Event{readonly bubbles:boolean;cancelBubble:boolean;readonly cancelable:boolean;readonly composed:boolean;readonly currentTarget:EventTarget|null;readonly defaultPrevented:boolean;readonly eventPhase:number;readonly isTrusted:boolean;returnValue:boolean;readonly srcElement:EventTarget|null;readonly target:EventTarget|null;readonly timeStamp:DOMHighResTimeStamp;readonly type:string;composedPath():EventTarget[];initEvent(type:string,bubbles?:boolean,cancelable?:boolean):void;preventDefault():void;stopImmediatePropagation():void;stopPropagation():void;readonly AT_TARGET:number;readonly BUBBLING_PHASE:number;readonly CAPTURING_PHASE:number;readonly NONE:number;}declare var Event:{prototype:Event;new(type:string,eventInitDict?:EventInit):Event;readonly AT_TARGET:number;readonly BUBBLING_PHASE:number;readonly CAPTURING_PHASE:number;readonly NONE:number;};interface EventListener{(evt:Event):void;}interface EventListenerObject{handleEvent(object:Event):void;}interface EventSourceEventMap{"error":Event;"message":MessageEvent;"open":Event;}interface EventSource extends EventTarget{onerror:((this:EventSource,ev:Event)=>any)|null;onmessage:((this:EventSource,ev:MessageEvent)=>any)|null;onopen:((this:EventSource,ev:Event)=>any)|null;readonly readyState:number;readonly url:string;readonly withCredentials:boolean;close():void;readonly CLOSED:number;readonly CONNECTING:number;readonly OPEN:number;addEventListener<K extends keyof EventSourceEventMap>(type:K,listener:(this:EventSource,ev:EventSourceEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:(this:EventSource,event:MessageEvent)=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof EventSourceEventMap>(type:K,listener:(this:EventSource,ev:EventSourceEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:(this:EventSource,event:MessageEvent)=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var EventSource:{prototype:EventSource;new(url:string|URL,eventSourceInitDict?:EventSourceInit):EventSource;readonly CLOSED:number;readonly CONNECTING:number;readonly OPEN:number;};interface EventTarget{addEventListener(type:string,callback:EventListenerOrEventListenerObject|null,options?:AddEventListenerOptions|boolean):void;dispatchEvent(event:Event):boolean;removeEventListener(type:string,callback:EventListenerOrEventListenerObject|null,options?:EventListenerOptions|boolean):void;}declare var EventTarget:{prototype:EventTarget;new():EventTarget;};interface ExtendableEvent extends Event{waitUntil(f:any):void;}declare var ExtendableEvent:{prototype:ExtendableEvent;new(type:string,eventInitDict?:ExtendableEventInit):ExtendableEvent;};interface ExtendableMessageEvent extends ExtendableEvent{readonly data:any;readonly lastEventId:string;readonly origin:string;readonly ports:ReadonlyArray<MessagePort>;readonly source:Client|ServiceWorker|MessagePort|null;}declare var ExtendableMessageEvent:{prototype:ExtendableMessageEvent;new(type:string,eventInitDict?:ExtendableMessageEventInit):ExtendableMessageEvent;};interface FetchEvent extends ExtendableEvent{readonly clientId:string;readonly handled:Promise<undefined>;readonly preloadResponse:Promise<any>;readonly request:Request;readonly resultingClientId:string;respondWith(r:Response|PromiseLike<Response>):void;}declare var FetchEvent:{prototype:FetchEvent;new(type:string,eventInitDict:FetchEventInit):FetchEvent;};interface File extends Blob{readonly lastModified:number;readonly name:string;readonly webkitRelativePath:string;}declare var File:{prototype:File;new(fileBits:BlobPart[],fileName:string,options?:FilePropertyBag):File;};interface FileList{readonly length:number;item(index:number):File|null;[index:number]:File;}declare var FileList:{prototype:FileList;new():FileList;};interface FileReaderEventMap{"abort":ProgressEvent<FileReader>;"error":ProgressEvent<FileReader>;"load":ProgressEvent<FileReader>;"loadend":ProgressEvent<FileReader>;"loadstart":ProgressEvent<FileReader>;"progress":ProgressEvent<FileReader>;}interface FileReader extends EventTarget{readonly error:DOMException|null;onabort:((this:FileReader,ev:ProgressEvent<FileReader>)=>any)|null;onerror:((this:FileReader,ev:ProgressEvent<FileReader>)=>any)|null;onload:((this:FileReader,ev:ProgressEvent<FileReader>)=>any)|null;onloadend:((this:FileReader,ev:ProgressEvent<FileReader>)=>any)|null;onloadstart:((this:FileReader,ev:ProgressEvent<FileReader>)=>any)|null;onprogress:((this:FileReader,ev:ProgressEvent<FileReader>)=>any)|null;readonly readyState:number;readonly result:string|ArrayBuffer|null;abort():void;readAsArrayBuffer(blob:Blob):void;readAsBinaryString(blob:Blob):void;readAsDataURL(blob:Blob):void;readAsText(blob:Blob,encoding?:string):void;readonly DONE:number;readonly EMPTY:number;readonly LOADING:number;addEventListener<K extends keyof FileReaderEventMap>(type:K,listener:(this:FileReader,ev:FileReaderEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof FileReaderEventMap>(type:K,listener:(this:FileReader,ev:FileReaderEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var FileReader:{prototype:FileReader;new():FileReader;readonly DONE:number;readonly EMPTY:number;readonly LOADING:number;};interface FileReaderSync{readAsArrayBuffer(blob:Blob):ArrayBuffer;readAsBinaryString(blob:Blob):string;readAsDataURL(blob:Blob):string;readAsText(blob:Blob,encoding?:string):string;}declare var FileReaderSync:{prototype:FileReaderSync;new():FileReaderSync;};interface FileSystemDirectoryHandle extends FileSystemHandle{readonly kind:"directory";getDirectoryHandle(name:string,options?:FileSystemGetDirectoryOptions):Promise<FileSystemDirectoryHandle>;getFileHandle(name:string,options?:FileSystemGetFileOptions):Promise<FileSystemFileHandle>;removeEntry(name:string,options?:FileSystemRemoveOptions):Promise<void>;resolve(possibleDescendant:FileSystemHandle):Promise<string[]|null>;}declare var FileSystemDirectoryHandle:{prototype:FileSystemDirectoryHandle;new():FileSystemDirectoryHandle;};interface FileSystemFileHandle extends FileSystemHandle{readonly kind:"file";getFile():Promise<File>;}declare var FileSystemFileHandle:{prototype:FileSystemFileHandle;new():FileSystemFileHandle;};interface FileSystemHandle{readonly kind:FileSystemHandleKind;readonly name:string;isSameEntry(other:FileSystemHandle):Promise<boolean>;}declare var FileSystemHandle:{prototype:FileSystemHandle;new():FileSystemHandle;};interface FontFace{ascentOverride:string;descentOverride:string;display:string;family:string;featureSettings:string;lineGapOverride:string;readonly loaded:Promise<FontFace>;readonly status:FontFaceLoadStatus;stretch:string;style:string;unicodeRange:string;variant:string;variationSettings:string;weight:string;load():Promise<FontFace>;}declare var FontFace:{prototype:FontFace;new(family:string,source:string|BinaryData,descriptors?:FontFaceDescriptors):FontFace;};interface FontFaceSetEventMap{"loading":Event;"loadingdone":Event;"loadingerror":Event;}interface FontFaceSet extends EventTarget{onloading:((this:FontFaceSet,ev:Event)=>any)|null;onloadingdone:((this:FontFaceSet,ev:Event)=>any)|null;onloadingerror:((this:FontFaceSet,ev:Event)=>any)|null;readonly ready:Promise<FontFaceSet>;readonly status:FontFaceSetLoadStatus;check(font:string,text?:string):boolean;load(font:string,text?:string):Promise<FontFace[]>;forEach(callbackfn:(value:FontFace,key:FontFace,parent:FontFaceSet)=>void,thisArg?:any):void;addEventListener<K extends keyof FontFaceSetEventMap>(type:K,listener:(this:FontFaceSet,ev:FontFaceSetEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof FontFaceSetEventMap>(type:K,listener:(this:FontFaceSet,ev:FontFaceSetEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var FontFaceSet:{prototype:FontFaceSet;new(initialFaces:FontFace[]):FontFaceSet;};interface FontFaceSetLoadEvent extends Event{readonly fontfaces:ReadonlyArray<FontFace>;}declare var FontFaceSetLoadEvent:{prototype:FontFaceSetLoadEvent;new(type:string,eventInitDict?:FontFaceSetLoadEventInit):FontFaceSetLoadEvent;};interface FontFaceSource{readonly fonts:FontFaceSet;}interface FormData{append(name:string,value:string|Blob,fileName?:string):void;delete(name:string):void;get(name:string):FormDataEntryValue|null;getAll(name:string):FormDataEntryValue[];has(name:string):boolean;set(name:string,value:string|Blob,fileName?:string):void;forEach(callbackfn:(value:FormDataEntryValue,key:string,parent:FormData)=>void,thisArg?:any):void;}declare var FormData:{prototype:FormData;new():FormData;};interface GenericTransformStream{readonly readable:ReadableStream;readonly writable:WritableStream;}interface Headers{append(name:string,value:string):void;delete(name:string):void;get(name:string):string|null;has(name:string):boolean;set(name:string,value:string):void;forEach(callbackfn:(value:string,key:string,parent:Headers)=>void,thisArg?:any):void;}declare var Headers:{prototype:Headers;new(init?:HeadersInit):Headers;};interface IDBCursor{readonly direction:IDBCursorDirection;readonly key:IDBValidKey;readonly primaryKey:IDBValidKey;readonly request:IDBRequest;readonly source:IDBObjectStore|IDBIndex;advance(count:number):void;continue(key?:IDBValidKey):void;continuePrimaryKey(key:IDBValidKey,primaryKey:IDBValidKey):void;delete():IDBRequest<undefined>;update(value:any):IDBRequest<IDBValidKey>;}declare var IDBCursor:{prototype:IDBCursor;new():IDBCursor;};interface IDBCursorWithValue extends IDBCursor{readonly value:any;}declare var IDBCursorWithValue:{prototype:IDBCursorWithValue;new():IDBCursorWithValue;};interface IDBDatabaseEventMap{"abort":Event;"close":Event;"error":Event;"versionchange":IDBVersionChangeEvent;}interface IDBDatabase extends EventTarget{readonly name:string;readonly objectStoreNames:DOMStringList;onabort:((this:IDBDatabase,ev:Event)=>any)|null;onclose:((this:IDBDatabase,ev:Event)=>any)|null;onerror:((this:IDBDatabase,ev:Event)=>any)|null;onversionchange:((this:IDBDatabase,ev:IDBVersionChangeEvent)=>any)|null;readonly version:number;close():void;createObjectStore(name:string,options?:IDBObjectStoreParameters):IDBObjectStore;deleteObjectStore(name:string):void;transaction(storeNames:string|string[],mode?:IDBTransactionMode):IDBTransaction;addEventListener<K extends keyof IDBDatabaseEventMap>(type:K,listener:(this:IDBDatabase,ev:IDBDatabaseEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof IDBDatabaseEventMap>(type:K,listener:(this:IDBDatabase,ev:IDBDatabaseEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var IDBDatabase:{prototype:IDBDatabase;new():IDBDatabase;};interface IDBFactory{cmp(first:any,second:any):number;databases():Promise<IDBDatabaseInfo[]>;deleteDatabase(name:string):IDBOpenDBRequest;open(name:string,version?:number):IDBOpenDBRequest;}declare var IDBFactory:{prototype:IDBFactory;new():IDBFactory;};interface IDBIndex{readonly keyPath:string|string[];readonly multiEntry:boolean;name:string;readonly objectStore:IDBObjectStore;readonly unique:boolean;count(query?:IDBValidKey|IDBKeyRange):IDBRequest<number>;get(query:IDBValidKey|IDBKeyRange):IDBRequest<any>;getAll(query?:IDBValidKey|IDBKeyRange|null,count?:number):IDBRequest<any[]>;getAllKeys(query?:IDBValidKey|IDBKeyRange|null,count?:number):IDBRequest<IDBValidKey[]>;getKey(query:IDBValidKey|IDBKeyRange):IDBRequest<IDBValidKey|undefined>;openCursor(query?:IDBValidKey|IDBKeyRange|null,direction?:IDBCursorDirection):IDBRequest<IDBCursorWithValue|null>;openKeyCursor(query?:IDBValidKey|IDBKeyRange|null,direction?:IDBCursorDirection):IDBRequest<IDBCursor|null>;}declare var IDBIndex:{prototype:IDBIndex;new():IDBIndex;};interface IDBKeyRange{readonly lower:any;readonly lowerOpen:boolean;readonly upper:any;readonly upperOpen:boolean;includes(key:any):boolean;}declare var IDBKeyRange:{prototype:IDBKeyRange;new():IDBKeyRange;bound(lower:any,upper:any,lowerOpen?:boolean,upperOpen?:boolean):IDBKeyRange;lowerBound(lower:any,open?:boolean):IDBKeyRange;only(value:any):IDBKeyRange;upperBound(upper:any,open?:boolean):IDBKeyRange;};interface IDBObjectStore{readonly autoIncrement:boolean;readonly indexNames:DOMStringList;readonly keyPath:string|string[];name:string;readonly transaction:IDBTransaction;add(value:any,key?:IDBValidKey):IDBRequest<IDBValidKey>;clear():IDBRequest<undefined>;count(query?:IDBValidKey|IDBKeyRange):IDBRequest<number>;createIndex(name:string,keyPath:string|string[],options?:IDBIndexParameters):IDBIndex;delete(query:IDBValidKey|IDBKeyRange):IDBRequest<undefined>;deleteIndex(name:string):void;get(query:IDBValidKey|IDBKeyRange):IDBRequest<any>;getAll(query?:IDBValidKey|IDBKeyRange|null,count?:number):IDBRequest<any[]>;getAllKeys(query?:IDBValidKey|IDBKeyRange|null,count?:number):IDBRequest<IDBValidKey[]>;getKey(query:IDBValidKey|IDBKeyRange):IDBRequest<IDBValidKey|undefined>;index(name:string):IDBIndex;openCursor(query?:IDBValidKey|IDBKeyRange|null,direction?:IDBCursorDirection):IDBRequest<IDBCursorWithValue|null>;openKeyCursor(query?:IDBValidKey|IDBKeyRange|null,direction?:IDBCursorDirection):IDBRequest<IDBCursor|null>;put(value:any,key?:IDBValidKey):IDBRequest<IDBValidKey>;}declare var IDBObjectStore:{prototype:IDBObjectStore;new():IDBObjectStore;};interface IDBOpenDBRequestEventMap extends IDBRequestEventMap{"blocked":Event;"upgradeneeded":IDBVersionChangeEvent;}interface IDBOpenDBRequest extends IDBRequest<IDBDatabase>{onblocked:((this:IDBOpenDBRequest,ev:Event)=>any)|null;onupgradeneeded:((this:IDBOpenDBRequest,ev:IDBVersionChangeEvent)=>any)|null;addEventListener<K extends keyof IDBOpenDBRequestEventMap>(type:K,listener:(this:IDBOpenDBRequest,ev:IDBOpenDBRequestEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof IDBOpenDBRequestEventMap>(type:K,listener:(this:IDBOpenDBRequest,ev:IDBOpenDBRequestEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var IDBOpenDBRequest:{prototype:IDBOpenDBRequest;new():IDBOpenDBRequest;};interface IDBRequestEventMap{"error":Event;"success":Event;}interface IDBRequest<T=any>extends EventTarget{readonly error:DOMException|null;onerror:((this:IDBRequest<T>,ev:Event)=>any)|null;onsuccess:((this:IDBRequest<T>,ev:Event)=>any)|null;readonly readyState:IDBRequestReadyState;readonly result:T;readonly source:IDBObjectStore|IDBIndex|IDBCursor;readonly transaction:IDBTransaction|null;addEventListener<K extends keyof IDBRequestEventMap>(type:K,listener:(this:IDBRequest<T>,ev:IDBRequestEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof IDBRequestEventMap>(type:K,listener:(this:IDBRequest<T>,ev:IDBRequestEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var IDBRequest:{prototype:IDBRequest;new():IDBRequest;};interface IDBTransactionEventMap{"abort":Event;"complete":Event;"error":Event;}interface IDBTransaction extends EventTarget{readonly db:IDBDatabase;readonly durability:IDBTransactionDurability;readonly error:DOMException|null;readonly mode:IDBTransactionMode;readonly objectStoreNames:DOMStringList;onabort:((this:IDBTransaction,ev:Event)=>any)|null;oncomplete:((this:IDBTransaction,ev:Event)=>any)|null;onerror:((this:IDBTransaction,ev:Event)=>any)|null;abort():void;commit():void;objectStore(name:string):IDBObjectStore;addEventListener<K extends keyof IDBTransactionEventMap>(type:K,listener:(this:IDBTransaction,ev:IDBTransactionEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof IDBTransactionEventMap>(type:K,listener:(this:IDBTransaction,ev:IDBTransactionEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var IDBTransaction:{prototype:IDBTransaction;new():IDBTransaction;};interface IDBVersionChangeEvent extends Event{readonly newVersion:number|null;readonly oldVersion:number;}declare var IDBVersionChangeEvent:{prototype:IDBVersionChangeEvent;new(type:string,eventInitDict?:IDBVersionChangeEventInit):IDBVersionChangeEvent;};interface ImageBitmap{readonly height:number;readonly width:number;close():void;}declare var ImageBitmap:{prototype:ImageBitmap;new():ImageBitmap;};interface ImageBitmapRenderingContext{transferFromImageBitmap(bitmap:ImageBitmap|null):void;}declare var ImageBitmapRenderingContext:{prototype:ImageBitmapRenderingContext;new():ImageBitmapRenderingContext;};interface ImageData{readonly colorSpace:PredefinedColorSpace;readonly data:Uint8ClampedArray;readonly height:number;readonly width:number;}declare var ImageData:{prototype:ImageData;new(sw:number,sh:number,settings?:ImageDataSettings):ImageData;new(data:Uint8ClampedArray,sw:number,sh?:number,settings?:ImageDataSettings):ImageData;};interface KHR_parallel_shader_compile{readonly COMPLETION_STATUS_KHR:GLenum;}interface Lock{readonly mode:LockMode;readonly name:string;}declare var Lock:{prototype:Lock;new():Lock;};interface LockManager{query():Promise<LockManagerSnapshot>;request(name:string,callback:LockGrantedCallback):Promise<any>;request(name:string,options:LockOptions,callback:LockGrantedCallback):Promise<any>;}declare var LockManager:{prototype:LockManager;new():LockManager;};interface MediaCapabilities{decodingInfo(configuration:MediaDecodingConfiguration):Promise<MediaCapabilitiesDecodingInfo>;encodingInfo(configuration:MediaEncodingConfiguration):Promise<MediaCapabilitiesEncodingInfo>;}declare var MediaCapabilities:{prototype:MediaCapabilities;new():MediaCapabilities;};interface MessageChannel{readonly port1:MessagePort;readonly port2:MessagePort;}declare var MessageChannel:{prototype:MessageChannel;new():MessageChannel;};interface MessageEvent<T=any>extends Event{readonly data:T;readonly lastEventId:string;readonly origin:string;readonly ports:ReadonlyArray<MessagePort>;readonly source:MessageEventSource|null;initMessageEvent(type:string,bubbles?:boolean,cancelable?:boolean,data?:any,origin?:string,lastEventId?:string,source?:MessageEventSource|null,ports?:MessagePort[]):void;}declare var MessageEvent:{prototype:MessageEvent;new<T>(type:string,eventInitDict?:MessageEventInit<T>):MessageEvent<T>;};interface MessagePortEventMap{"message":MessageEvent;"messageerror":MessageEvent;}interface MessagePort extends EventTarget{onmessage:((this:MessagePort,ev:MessageEvent)=>any)|null;onmessageerror:((this:MessagePort,ev:MessageEvent)=>any)|null;close():void;postMessage(message:any,transfer:Transferable[]):void;postMessage(message:any,options?:StructuredSerializeOptions):void;start():void;addEventListener<K extends keyof MessagePortEventMap>(type:K,listener:(this:MessagePort,ev:MessagePortEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof MessagePortEventMap>(type:K,listener:(this:MessagePort,ev:MessagePortEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var MessagePort:{prototype:MessagePort;new():MessagePort;};interface NavigationPreloadManager{disable():Promise<void>;enable():Promise<void>;getState():Promise<NavigationPreloadState>;setHeaderValue(value:string):Promise<void>;}declare var NavigationPreloadManager:{prototype:NavigationPreloadManager;new():NavigationPreloadManager;};interface NavigatorConcurrentHardware{readonly hardwareConcurrency:number;}interface NavigatorID{readonly appCodeName:string;readonly appName:string;readonly appVersion:string;readonly platform:string;readonly product:string;readonly userAgent:string;}interface NavigatorLanguage{readonly language:string;readonly languages:ReadonlyArray<string>;}interface NavigatorLocks{readonly locks:LockManager;}interface NavigatorNetworkInformation{readonly connection:NetworkInformation;}interface NavigatorOnLine{readonly onLine:boolean;}interface NavigatorStorage{readonly storage:StorageManager;}interface NetworkInformation extends EventTarget{readonly type:ConnectionType;}declare var NetworkInformation:{prototype:NetworkInformation;new():NetworkInformation;};interface NotificationEventMap{"click":Event;"close":Event;"error":Event;"show":Event;}interface Notification extends EventTarget{readonly body:string;readonly data:any;readonly dir:NotificationDirection;readonly icon:string;readonly lang:string;onclick:((this:Notification,ev:Event)=>any)|null;onclose:((this:Notification,ev:Event)=>any)|null;onerror:((this:Notification,ev:Event)=>any)|null;onshow:((this:Notification,ev:Event)=>any)|null;readonly tag:string;readonly title:string;close():void;addEventListener<K extends keyof NotificationEventMap>(type:K,listener:(this:Notification,ev:NotificationEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof NotificationEventMap>(type:K,listener:(this:Notification,ev:NotificationEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var Notification:{prototype:Notification;new(title:string,options?:NotificationOptions):Notification;readonly permission:NotificationPermission;};interface NotificationEvent extends ExtendableEvent{readonly action:string;readonly notification:Notification;}declare var NotificationEvent:{prototype:NotificationEvent;new(type:string,eventInitDict:NotificationEventInit):NotificationEvent;};interface OES_element_index_uint{}interface OES_fbo_render_mipmap{}interface OES_standard_derivatives{readonly FRAGMENT_SHADER_DERIVATIVE_HINT_OES:GLenum;}interface OES_texture_float{}interface OES_texture_float_linear{}interface OES_texture_half_float{readonly HALF_FLOAT_OES:GLenum;}interface OES_texture_half_float_linear{}interface OES_vertex_array_object{bindVertexArrayOES(arrayObject:WebGLVertexArrayObjectOES|null):void;createVertexArrayOES():WebGLVertexArrayObjectOES|null;deleteVertexArrayOES(arrayObject:WebGLVertexArrayObjectOES|null):void;isVertexArrayOES(arrayObject:WebGLVertexArrayObjectOES|null):GLboolean;readonly VERTEX_ARRAY_BINDING_OES:GLenum;}interface OVR_multiview2{framebufferTextureMultiviewOVR(target:GLenum,attachment:GLenum,texture:WebGLTexture|null,level:GLint,baseViewIndex:GLint,numViews:GLsizei):void;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR:GLenum;readonly FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR:GLenum;readonly MAX_VIEWS_OVR:GLenum;}interface OffscreenCanvas extends EventTarget{}interface Path2D extends CanvasPath{addPath(path:Path2D,transform?:DOMMatrix2DInit):void;}declare var Path2D:{prototype:Path2D;new(path?:Path2D|string):Path2D;};interface PerformanceEventMap{"resourcetimingbufferfull":Event;}interface Performance extends EventTarget{onresourcetimingbufferfull:((this:Performance,ev:Event)=>any)|null;readonly timeOrigin:DOMHighResTimeStamp;clearMarks(markName?:string):void;clearMeasures(measureName?:string):void;clearResourceTimings():void;getEntries():PerformanceEntryList;getEntriesByName(name:string,type?:string):PerformanceEntryList;getEntriesByType(type:string):PerformanceEntryList;mark(markName:string,markOptions?:PerformanceMarkOptions):PerformanceMark;measure(measureName:string,startOrMeasureOptions?:string|PerformanceMeasureOptions,endMark?:string):PerformanceMeasure;now():DOMHighResTimeStamp;setResourceTimingBufferSize(maxSize:number):void;toJSON():any;addEventListener<K extends keyof PerformanceEventMap>(type:K,listener:(this:Performance,ev:PerformanceEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof PerformanceEventMap>(type:K,listener:(this:Performance,ev:PerformanceEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var Performance:{prototype:Performance;new():Performance;};interface PerformanceEntry{readonly duration:DOMHighResTimeStamp;readonly entryType:string;readonly name:string;readonly startTime:DOMHighResTimeStamp;toJSON():any;}declare var PerformanceEntry:{prototype:PerformanceEntry;new():PerformanceEntry;};interface PerformanceMark extends PerformanceEntry{readonly detail:any;}declare var PerformanceMark:{prototype:PerformanceMark;new(markName:string,markOptions?:PerformanceMarkOptions):PerformanceMark;};interface PerformanceMeasure extends PerformanceEntry{readonly detail:any;}declare var PerformanceMeasure:{prototype:PerformanceMeasure;new():PerformanceMeasure;};interface PerformanceObserver{disconnect():void;observe(options?:PerformanceObserverInit):void;takeRecords():PerformanceEntryList;}declare var PerformanceObserver:{prototype:PerformanceObserver;new(callback:PerformanceObserverCallback):PerformanceObserver;readonly supportedEntryTypes:ReadonlyArray<string>;};interface PerformanceObserverEntryList{getEntries():PerformanceEntryList;getEntriesByName(name:string,type?:string):PerformanceEntryList;getEntriesByType(type:string):PerformanceEntryList;}declare var PerformanceObserverEntryList:{prototype:PerformanceObserverEntryList;new():PerformanceObserverEntryList;};interface PerformanceResourceTiming extends PerformanceEntry{readonly connectEnd:DOMHighResTimeStamp;readonly connectStart:DOMHighResTimeStamp;readonly decodedBodySize:number;readonly domainLookupEnd:DOMHighResTimeStamp;readonly domainLookupStart:DOMHighResTimeStamp;readonly encodedBodySize:number;readonly fetchStart:DOMHighResTimeStamp;readonly initiatorType:string;readonly nextHopProtocol:string;readonly redirectEnd:DOMHighResTimeStamp;readonly redirectStart:DOMHighResTimeStamp;readonly requestStart:DOMHighResTimeStamp;readonly responseEnd:DOMHighResTimeStamp;readonly responseStart:DOMHighResTimeStamp;readonly secureConnectionStart:DOMHighResTimeStamp;readonly serverTiming:ReadonlyArray<PerformanceServerTiming>;readonly transferSize:number;readonly workerStart:DOMHighResTimeStamp;toJSON():any;}declare var PerformanceResourceTiming:{prototype:PerformanceResourceTiming;new():PerformanceResourceTiming;};interface PerformanceServerTiming{readonly description:string;readonly duration:DOMHighResTimeStamp;readonly name:string;toJSON():any;}declare var PerformanceServerTiming:{prototype:PerformanceServerTiming;new():PerformanceServerTiming;};interface PermissionStatusEventMap{"change":Event;}interface PermissionStatus extends EventTarget{onchange:((this:PermissionStatus,ev:Event)=>any)|null;readonly state:PermissionState;addEventListener<K extends keyof PermissionStatusEventMap>(type:K,listener:(this:PermissionStatus,ev:PermissionStatusEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof PermissionStatusEventMap>(type:K,listener:(this:PermissionStatus,ev:PermissionStatusEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var PermissionStatus:{prototype:PermissionStatus;new():PermissionStatus;};interface Permissions{query(permissionDesc:PermissionDescriptor):Promise<PermissionStatus>;}declare var Permissions:{prototype:Permissions;new():Permissions;};interface ProgressEvent<T extends EventTarget=EventTarget>extends Event{readonly lengthComputable:boolean;readonly loaded:number;readonly target:T|null;readonly total:number;}declare var ProgressEvent:{prototype:ProgressEvent;new(type:string,eventInitDict?:ProgressEventInit):ProgressEvent;};interface PromiseRejectionEvent extends Event{readonly promise:Promise<any>;readonly reason:any;}declare var PromiseRejectionEvent:{prototype:PromiseRejectionEvent;new(type:string,eventInitDict:PromiseRejectionEventInit):PromiseRejectionEvent;};interface PushEvent extends ExtendableEvent{readonly data:PushMessageData|null;}declare var PushEvent:{prototype:PushEvent;new(type:string,eventInitDict?:PushEventInit):PushEvent;};interface PushManager{getSubscription():Promise<PushSubscription|null>;permissionState(options?:PushSubscriptionOptionsInit):Promise<PermissionState>;subscribe(options?:PushSubscriptionOptionsInit):Promise<PushSubscription>;}declare var PushManager:{prototype:PushManager;new():PushManager;readonly supportedContentEncodings:ReadonlyArray<string>;};interface PushMessageData{arrayBuffer():ArrayBuffer;blob():Blob;json():any;text():string;}declare var PushMessageData:{prototype:PushMessageData;new():PushMessageData;};interface PushSubscription{readonly endpoint:string;readonly options:PushSubscriptionOptions;getKey(name:PushEncryptionKeyName):ArrayBuffer|null;toJSON():PushSubscriptionJSON;unsubscribe():Promise<boolean>;}declare var PushSubscription:{prototype:PushSubscription;new():PushSubscription;};interface PushSubscriptionOptions{readonly applicationServerKey:ArrayBuffer|null;}declare var PushSubscriptionOptions:{prototype:PushSubscriptionOptions;new():PushSubscriptionOptions;};interface RTCEncodedAudioFrame{data:ArrayBuffer;readonly timestamp:number;getMetadata():RTCEncodedAudioFrameMetadata;}declare var RTCEncodedAudioFrame:{prototype:RTCEncodedAudioFrame;new():RTCEncodedAudioFrame;};interface RTCEncodedVideoFrame{data:ArrayBuffer;readonly timestamp:number;readonly type:RTCEncodedVideoFrameType;getMetadata():RTCEncodedVideoFrameMetadata;}declare var RTCEncodedVideoFrame:{prototype:RTCEncodedVideoFrame;new():RTCEncodedVideoFrame;};interface ReadableStream<R=any>{readonly locked:boolean;cancel(reason?:any):Promise<void>;getReader():ReadableStreamDefaultReader<R>;pipeThrough<T>(transform:ReadableWritablePair<T,R>,options?:StreamPipeOptions):ReadableStream<T>;pipeTo(destination:WritableStream<R>,options?:StreamPipeOptions):Promise<void>;tee():[ReadableStream<R>,ReadableStream<R>];}declare var ReadableStream:{prototype:ReadableStream;new<R=any>(underlyingSource?:UnderlyingSource<R>,strategy?:QueuingStrategy<R>):ReadableStream<R>;};interface ReadableStreamDefaultController<R=any>{readonly desiredSize:number|null;close():void;enqueue(chunk?:R):void;error(e?:any):void;}declare var ReadableStreamDefaultController:{prototype:ReadableStreamDefaultController;new():ReadableStreamDefaultController;};interface ReadableStreamDefaultReader<R=any>extends ReadableStreamGenericReader{read():Promise<ReadableStreamDefaultReadResult<R>>;releaseLock():void;}declare var ReadableStreamDefaultReader:{prototype:ReadableStreamDefaultReader;new<R=any>(stream:ReadableStream<R>):ReadableStreamDefaultReader<R>;};interface ReadableStreamGenericReader{readonly closed:Promise<undefined>;cancel(reason?:any):Promise<void>;}interface Request extends Body{readonly cache:RequestCache;readonly credentials:RequestCredentials;readonly destination:RequestDestination;readonly headers:Headers;readonly integrity:string;readonly keepalive:boolean;readonly method:string;readonly mode:RequestMode;readonly redirect:RequestRedirect;readonly referrer:string;readonly referrerPolicy:ReferrerPolicy;readonly signal:AbortSignal;readonly url:string;clone():Request;}declare var Request:{prototype:Request;new(input:RequestInfo|URL,init?:RequestInit):Request;};interface Response extends Body{readonly headers:Headers;readonly ok:boolean;readonly redirected:boolean;readonly status:number;readonly statusText:string;readonly type:ResponseType;readonly url:string;clone():Response;}declare var Response:{prototype:Response;new(body?:BodyInit|null,init?:ResponseInit):Response;error():Response;redirect(url:string|URL,status?:number):Response;};interface SecurityPolicyViolationEvent extends Event{readonly blockedURI:string;readonly columnNumber:number;readonly disposition:SecurityPolicyViolationEventDisposition;readonly documentURI:string;readonly effectiveDirective:string;readonly lineNumber:number;readonly originalPolicy:string;readonly referrer:string;readonly sample:string;readonly sourceFile:string;readonly statusCode:number;readonly violatedDirective:string;}declare var SecurityPolicyViolationEvent:{prototype:SecurityPolicyViolationEvent;new(type:string,eventInitDict?:SecurityPolicyViolationEventInit):SecurityPolicyViolationEvent;};interface ServiceWorkerEventMap extends AbstractWorkerEventMap{"statechange":Event;}interface ServiceWorker extends EventTarget,AbstractWorker{onstatechange:((this:ServiceWorker,ev:Event)=>any)|null;readonly scriptURL:string;readonly state:ServiceWorkerState;postMessage(message:any,transfer:Transferable[]):void;postMessage(message:any,options?:StructuredSerializeOptions):void;addEventListener<K extends keyof ServiceWorkerEventMap>(type:K,listener:(this:ServiceWorker,ev:ServiceWorkerEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof ServiceWorkerEventMap>(type:K,listener:(this:ServiceWorker,ev:ServiceWorkerEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var ServiceWorker:{prototype:ServiceWorker;new():ServiceWorker;};interface ServiceWorkerContainerEventMap{"controllerchange":Event;"message":MessageEvent;"messageerror":MessageEvent;}interface ServiceWorkerContainer extends EventTarget{readonly controller:ServiceWorker|null;oncontrollerchange:((this:ServiceWorkerContainer,ev:Event)=>any)|null;onmessage:((this:ServiceWorkerContainer,ev:MessageEvent)=>any)|null;onmessageerror:((this:ServiceWorkerContainer,ev:MessageEvent)=>any)|null;readonly ready:Promise<ServiceWorkerRegistration>;getRegistration(clientURL?:string|URL):Promise<ServiceWorkerRegistration|undefined>;getRegistrations():Promise<ReadonlyArray<ServiceWorkerRegistration>>;register(scriptURL:string|URL,options?:RegistrationOptions):Promise<ServiceWorkerRegistration>;startMessages():void;addEventListener<K extends keyof ServiceWorkerContainerEventMap>(type:K,listener:(this:ServiceWorkerContainer,ev:ServiceWorkerContainerEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof ServiceWorkerContainerEventMap>(type:K,listener:(this:ServiceWorkerContainer,ev:ServiceWorkerContainerEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var ServiceWorkerContainer:{prototype:ServiceWorkerContainer;new():ServiceWorkerContainer;};interface ServiceWorkerGlobalScopeEventMap extends WorkerGlobalScopeEventMap{"activate":ExtendableEvent;"fetch":FetchEvent;"install":ExtendableEvent;"message":ExtendableMessageEvent;"messageerror":MessageEvent;"notificationclick":NotificationEvent;"notificationclose":NotificationEvent;"push":PushEvent;}interface ServiceWorkerGlobalScope extends WorkerGlobalScope{readonly clients:Clients;onactivate:((this:ServiceWorkerGlobalScope,ev:ExtendableEvent)=>any)|null;onfetch:((this:ServiceWorkerGlobalScope,ev:FetchEvent)=>any)|null;oninstall:((this:ServiceWorkerGlobalScope,ev:ExtendableEvent)=>any)|null;onmessage:((this:ServiceWorkerGlobalScope,ev:ExtendableMessageEvent)=>any)|null;onmessageerror:((this:ServiceWorkerGlobalScope,ev:MessageEvent)=>any)|null;onnotificationclick:((this:ServiceWorkerGlobalScope,ev:NotificationEvent)=>any)|null;onnotificationclose:((this:ServiceWorkerGlobalScope,ev:NotificationEvent)=>any)|null;onpush:((this:ServiceWorkerGlobalScope,ev:PushEvent)=>any)|null;readonly registration:ServiceWorkerRegistration;skipWaiting():Promise<void>;addEventListener<K extends keyof ServiceWorkerGlobalScopeEventMap>(type:K,listener:(this:ServiceWorkerGlobalScope,ev:ServiceWorkerGlobalScopeEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof ServiceWorkerGlobalScopeEventMap>(type:K,listener:(this:ServiceWorkerGlobalScope,ev:ServiceWorkerGlobalScopeEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var ServiceWorkerGlobalScope:{prototype:ServiceWorkerGlobalScope;new():ServiceWorkerGlobalScope;};interface ServiceWorkerRegistrationEventMap{"updatefound":Event;}interface ServiceWorkerRegistration extends EventTarget{readonly active:ServiceWorker|null;readonly installing:ServiceWorker|null;readonly navigationPreload:NavigationPreloadManager;onupdatefound:((this:ServiceWorkerRegistration,ev:Event)=>any)|null;readonly pushManager:PushManager;readonly scope:string;readonly updateViaCache:ServiceWorkerUpdateViaCache;readonly waiting:ServiceWorker|null;getNotifications(filter?:GetNotificationOptions):Promise<Notification[]>;showNotification(title:string,options?:NotificationOptions):Promise<void>;unregister():Promise<boolean>;update():Promise<void>;addEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type:K,listener:(this:ServiceWorkerRegistration,ev:ServiceWorkerRegistrationEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type:K,listener:(this:ServiceWorkerRegistration,ev:ServiceWorkerRegistrationEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var ServiceWorkerRegistration:{prototype:ServiceWorkerRegistration;new():ServiceWorkerRegistration;};interface SharedWorkerGlobalScopeEventMap extends WorkerGlobalScopeEventMap{"connect":MessageEvent;}interface SharedWorkerGlobalScope extends WorkerGlobalScope{readonly name:string;onconnect:((this:SharedWorkerGlobalScope,ev:MessageEvent)=>any)|null;close():void;addEventListener<K extends keyof SharedWorkerGlobalScopeEventMap>(type:K,listener:(this:SharedWorkerGlobalScope,ev:SharedWorkerGlobalScopeEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof SharedWorkerGlobalScopeEventMap>(type:K,listener:(this:SharedWorkerGlobalScope,ev:SharedWorkerGlobalScopeEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var SharedWorkerGlobalScope:{prototype:SharedWorkerGlobalScope;new():SharedWorkerGlobalScope;};interface StorageManager{estimate():Promise<StorageEstimate>;getDirectory():Promise<FileSystemDirectoryHandle>;persisted():Promise<boolean>;}declare var StorageManager:{prototype:StorageManager;new():StorageManager;};interface SubtleCrypto{decrypt(algorithm:AlgorithmIdentifier|RsaOaepParams|AesCtrParams|AesCbcParams|AesGcmParams,key:CryptoKey,data:BufferSource):Promise<any>;deriveBits(algorithm:AlgorithmIdentifier|EcdhKeyDeriveParams|HkdfParams|Pbkdf2Params,baseKey:CryptoKey,length:number):Promise<ArrayBuffer>;deriveKey(algorithm:AlgorithmIdentifier|EcdhKeyDeriveParams|HkdfParams|Pbkdf2Params,baseKey:CryptoKey,derivedKeyType:AlgorithmIdentifier|AesDerivedKeyParams|HmacImportParams|HkdfParams|Pbkdf2Params,extractable:boolean,keyUsages:KeyUsage[]):Promise<CryptoKey>;digest(algorithm:AlgorithmIdentifier,data:BufferSource):Promise<ArrayBuffer>;encrypt(algorithm:AlgorithmIdentifier|RsaOaepParams|AesCtrParams|AesCbcParams|AesGcmParams,key:CryptoKey,data:BufferSource):Promise<any>;exportKey(format:"jwk",key:CryptoKey):Promise<JsonWebKey>;exportKey(format:Exclude<KeyFormat,"jwk">,key:CryptoKey):Promise<ArrayBuffer>;generateKey(algorithm:RsaHashedKeyGenParams|EcKeyGenParams,extractable:boolean,keyUsages:ReadonlyArray<KeyUsage>):Promise<CryptoKeyPair>;generateKey(algorithm:AesKeyGenParams|HmacKeyGenParams|Pbkdf2Params,extractable:boolean,keyUsages:ReadonlyArray<KeyUsage>):Promise<CryptoKey>;generateKey(algorithm:AlgorithmIdentifier,extractable:boolean,keyUsages:KeyUsage[]):Promise<CryptoKeyPair|CryptoKey>;importKey(format:"jwk",keyData:JsonWebKey,algorithm:AlgorithmIdentifier|RsaHashedImportParams|EcKeyImportParams|HmacImportParams|AesKeyAlgorithm,extractable:boolean,keyUsages:ReadonlyArray<KeyUsage>):Promise<CryptoKey>;importKey(format:Exclude<KeyFormat,"jwk">,keyData:BufferSource,algorithm:AlgorithmIdentifier|RsaHashedImportParams|EcKeyImportParams|HmacImportParams|AesKeyAlgorithm,extractable:boolean,keyUsages:KeyUsage[]):Promise<CryptoKey>;sign(algorithm:AlgorithmIdentifier|RsaPssParams|EcdsaParams,key:CryptoKey,data:BufferSource):Promise<ArrayBuffer>;unwrapKey(format:KeyFormat,wrappedKey:BufferSource,unwrappingKey:CryptoKey,unwrapAlgorithm:AlgorithmIdentifier|RsaOaepParams|AesCtrParams|AesCbcParams|AesGcmParams,unwrappedKeyAlgorithm:AlgorithmIdentifier|RsaHashedImportParams|EcKeyImportParams|HmacImportParams|AesKeyAlgorithm,extractable:boolean,keyUsages:KeyUsage[]):Promise<CryptoKey>;verify(algorithm:AlgorithmIdentifier|RsaPssParams|EcdsaParams,key:CryptoKey,signature:BufferSource,data:BufferSource):Promise<boolean>;wrapKey(format:KeyFormat,key:CryptoKey,wrappingKey:CryptoKey,wrapAlgorithm:AlgorithmIdentifier|RsaOaepParams|AesCtrParams|AesCbcParams|AesGcmParams):Promise<ArrayBuffer>;}declare var SubtleCrypto:{prototype:SubtleCrypto;new():SubtleCrypto;};interface TextDecoder extends TextDecoderCommon{decode(input?:BufferSource,options?:TextDecodeOptions):string;}declare var TextDecoder:{prototype:TextDecoder;new(label?:string,options?:TextDecoderOptions):TextDecoder;};interface TextDecoderCommon{readonly encoding:string;readonly fatal:boolean;readonly ignoreBOM:boolean;}interface TextDecoderStream extends GenericTransformStream,TextDecoderCommon{readonly readable:ReadableStream<string>;readonly writable:WritableStream<BufferSource>;}declare var TextDecoderStream:{prototype:TextDecoderStream;new(label?:string,options?:TextDecoderOptions):TextDecoderStream;};interface TextEncoder extends TextEncoderCommon{encode(input?:string):Uint8Array;encodeInto(source:string,destination:Uint8Array):TextEncoderEncodeIntoResult;}declare var TextEncoder:{prototype:TextEncoder;new():TextEncoder;};interface TextEncoderCommon{readonly encoding:string;}interface TextEncoderStream extends GenericTransformStream,TextEncoderCommon{readonly readable:ReadableStream<Uint8Array>;readonly writable:WritableStream<string>;}declare var TextEncoderStream:{prototype:TextEncoderStream;new():TextEncoderStream;};interface TextMetrics{readonly actualBoundingBoxAscent:number;readonly actualBoundingBoxDescent:number;readonly actualBoundingBoxLeft:number;readonly actualBoundingBoxRight:number;readonly fontBoundingBoxAscent:number;readonly fontBoundingBoxDescent:number;readonly width:number;}declare var TextMetrics:{prototype:TextMetrics;new():TextMetrics;};interface TransformStream<I=any,O=any>{readonly readable:ReadableStream<O>;readonly writable:WritableStream<I>;}declare var TransformStream:{prototype:TransformStream;new<I=any,O=any>(transformer?:Transformer<I,O>,writableStrategy?:QueuingStrategy<I>,readableStrategy?:QueuingStrategy<O>):TransformStream<I,O>;};interface TransformStreamDefaultController<O=any>{readonly desiredSize:number|null;enqueue(chunk?:O):void;error(reason?:any):void;terminate():void;}declare var TransformStreamDefaultController:{prototype:TransformStreamDefaultController;new():TransformStreamDefaultController;};interface URL{hash:string;host:string;hostname:string;href:string;toString():string;readonly origin:string;password:string;pathname:string;port:string;protocol:string;search:string;readonly searchParams:URLSearchParams;username:string;toJSON():string;}declare var URL:{prototype:URL;new(url:string|URL,base?:string|URL):URL;createObjectURL(obj:Blob):string;revokeObjectURL(url:string):void;};interface URLSearchParams{append(name:string,value:string):void;delete(name:string):void;get(name:string):string|null;getAll(name:string):string[];has(name:string):boolean;set(name:string,value:string):void;sort():void;toString():string;forEach(callbackfn:(value:string,key:string,parent:URLSearchParams)=>void,thisArg?:any):void;}declare var URLSearchParams:{prototype:URLSearchParams;new(init?:string[][]|Record<string,string>|string|URLSearchParams):URLSearchParams;toString():string;};interface VideoColorSpace{readonly fullRange:boolean|null;readonly matrix:VideoMatrixCoefficients|null;readonly primaries:VideoColorPrimaries|null;readonly transfer:VideoTransferCharacteristics|null;toJSON():VideoColorSpaceInit;}declare var VideoColorSpace:{prototype:VideoColorSpace;new(init?:VideoColorSpaceInit):VideoColorSpace;};interface WEBGL_color_buffer_float{readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT:GLenum;readonly RGBA32F_EXT:GLenum;readonly UNSIGNED_NORMALIZED_EXT:GLenum;}interface WEBGL_compressed_texture_astc{getSupportedProfiles():string[];readonly COMPRESSED_RGBA_ASTC_10x10_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_10x5_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_10x6_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_10x8_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_12x10_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_12x12_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_4x4_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_5x4_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_5x5_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_6x5_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_6x6_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_8x5_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_8x6_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_8x8_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:GLenum;}interface WEBGL_compressed_texture_etc{readonly COMPRESSED_R11_EAC:GLenum;readonly COMPRESSED_RG11_EAC:GLenum;readonly COMPRESSED_RGB8_ETC2:GLenum;readonly COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:GLenum;readonly COMPRESSED_RGBA8_ETC2_EAC:GLenum;readonly COMPRESSED_SIGNED_R11_EAC:GLenum;readonly COMPRESSED_SIGNED_RG11_EAC:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:GLenum;readonly COMPRESSED_SRGB8_ETC2:GLenum;readonly COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:GLenum;}interface WEBGL_compressed_texture_etc1{readonly COMPRESSED_RGB_ETC1_WEBGL:GLenum;}interface WEBGL_compressed_texture_s3tc{readonly COMPRESSED_RGBA_S3TC_DXT1_EXT:GLenum;readonly COMPRESSED_RGBA_S3TC_DXT3_EXT:GLenum;readonly COMPRESSED_RGBA_S3TC_DXT5_EXT:GLenum;readonly COMPRESSED_RGB_S3TC_DXT1_EXT:GLenum;}interface WEBGL_compressed_texture_s3tc_srgb{readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT:GLenum;readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT:GLenum;readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT:GLenum;readonly COMPRESSED_SRGB_S3TC_DXT1_EXT:GLenum;}interface WEBGL_debug_renderer_info{readonly UNMASKED_RENDERER_WEBGL:GLenum;readonly UNMASKED_VENDOR_WEBGL:GLenum;}interface WEBGL_debug_shaders{getTranslatedShaderSource(shader:WebGLShader):string;}interface WEBGL_depth_texture{readonly UNSIGNED_INT_24_8_WEBGL:GLenum;}interface WEBGL_draw_buffers{drawBuffersWEBGL(buffers:GLenum[]):void;readonly COLOR_ATTACHMENT0_WEBGL:GLenum;readonly COLOR_ATTACHMENT10_WEBGL:GLenum;readonly COLOR_ATTACHMENT11_WEBGL:GLenum;readonly COLOR_ATTACHMENT12_WEBGL:GLenum;readonly COLOR_ATTACHMENT13_WEBGL:GLenum;readonly COLOR_ATTACHMENT14_WEBGL:GLenum;readonly COLOR_ATTACHMENT15_WEBGL:GLenum;readonly COLOR_ATTACHMENT1_WEBGL:GLenum;readonly COLOR_ATTACHMENT2_WEBGL:GLenum;readonly COLOR_ATTACHMENT3_WEBGL:GLenum;readonly COLOR_ATTACHMENT4_WEBGL:GLenum;readonly COLOR_ATTACHMENT5_WEBGL:GLenum;readonly COLOR_ATTACHMENT6_WEBGL:GLenum;readonly COLOR_ATTACHMENT7_WEBGL:GLenum;readonly COLOR_ATTACHMENT8_WEBGL:GLenum;readonly COLOR_ATTACHMENT9_WEBGL:GLenum;readonly DRAW_BUFFER0_WEBGL:GLenum;readonly DRAW_BUFFER10_WEBGL:GLenum;readonly DRAW_BUFFER11_WEBGL:GLenum;readonly DRAW_BUFFER12_WEBGL:GLenum;readonly DRAW_BUFFER13_WEBGL:GLenum;readonly DRAW_BUFFER14_WEBGL:GLenum;readonly DRAW_BUFFER15_WEBGL:GLenum;readonly DRAW_BUFFER1_WEBGL:GLenum;readonly DRAW_BUFFER2_WEBGL:GLenum;readonly DRAW_BUFFER3_WEBGL:GLenum;readonly DRAW_BUFFER4_WEBGL:GLenum;readonly DRAW_BUFFER5_WEBGL:GLenum;readonly DRAW_BUFFER6_WEBGL:GLenum;readonly DRAW_BUFFER7_WEBGL:GLenum;readonly DRAW_BUFFER8_WEBGL:GLenum;readonly DRAW_BUFFER9_WEBGL:GLenum;readonly MAX_COLOR_ATTACHMENTS_WEBGL:GLenum;readonly MAX_DRAW_BUFFERS_WEBGL:GLenum;}interface WEBGL_lose_context{loseContext():void;restoreContext():void;}interface WEBGL_multi_draw{multiDrawArraysInstancedWEBGL(mode:GLenum,firstsList:Int32Array|GLint[],firstsOffset:GLuint,countsList:Int32Array|GLsizei[],countsOffset:GLuint,instanceCountsList:Int32Array|GLsizei[],instanceCountsOffset:GLuint,drawcount:GLsizei):void;multiDrawArraysWEBGL(mode:GLenum,firstsList:Int32Array|GLint[],firstsOffset:GLuint,countsList:Int32Array|GLsizei[],countsOffset:GLuint,drawcount:GLsizei):void;multiDrawElementsInstancedWEBGL(mode:GLenum,countsList:Int32Array|GLint[],countsOffset:GLuint,type:GLenum,offsetsList:Int32Array|GLsizei[],offsetsOffset:GLuint,instanceCountsList:Int32Array|GLsizei[],instanceCountsOffset:GLuint,drawcount:GLsizei):void;multiDrawElementsWEBGL(mode:GLenum,countsList:Int32Array|GLint[],countsOffset:GLuint,type:GLenum,offsetsList:Int32Array|GLsizei[],offsetsOffset:GLuint,drawcount:GLsizei):void;}interface WebGL2RenderingContext extends WebGL2RenderingContextBase,WebGL2RenderingContextOverloads,WebGLRenderingContextBase{}declare var WebGL2RenderingContext:{prototype:WebGL2RenderingContext;new():WebGL2RenderingContext;readonly ACTIVE_UNIFORM_BLOCKS:GLenum;readonly ALREADY_SIGNALED:GLenum;readonly ANY_SAMPLES_PASSED:GLenum;readonly ANY_SAMPLES_PASSED_CONSERVATIVE:GLenum;readonly COLOR:GLenum;readonly COLOR_ATTACHMENT1:GLenum;readonly COLOR_ATTACHMENT10:GLenum;readonly COLOR_ATTACHMENT11:GLenum;readonly COLOR_ATTACHMENT12:GLenum;readonly COLOR_ATTACHMENT13:GLenum;readonly COLOR_ATTACHMENT14:GLenum;readonly COLOR_ATTACHMENT15:GLenum;readonly COLOR_ATTACHMENT2:GLenum;readonly COLOR_ATTACHMENT3:GLenum;readonly COLOR_ATTACHMENT4:GLenum;readonly COLOR_ATTACHMENT5:GLenum;readonly COLOR_ATTACHMENT6:GLenum;readonly COLOR_ATTACHMENT7:GLenum;readonly COLOR_ATTACHMENT8:GLenum;readonly COLOR_ATTACHMENT9:GLenum;readonly COMPARE_REF_TO_TEXTURE:GLenum;readonly CONDITION_SATISFIED:GLenum;readonly COPY_READ_BUFFER:GLenum;readonly COPY_READ_BUFFER_BINDING:GLenum;readonly COPY_WRITE_BUFFER:GLenum;readonly COPY_WRITE_BUFFER_BINDING:GLenum;readonly CURRENT_QUERY:GLenum;readonly DEPTH:GLenum;readonly DEPTH24_STENCIL8:GLenum;readonly DEPTH32F_STENCIL8:GLenum;readonly DEPTH_COMPONENT24:GLenum;readonly DEPTH_COMPONENT32F:GLenum;readonly DRAW_BUFFER0:GLenum;readonly DRAW_BUFFER1:GLenum;readonly DRAW_BUFFER10:GLenum;readonly DRAW_BUFFER11:GLenum;readonly DRAW_BUFFER12:GLenum;readonly DRAW_BUFFER13:GLenum;readonly DRAW_BUFFER14:GLenum;readonly DRAW_BUFFER15:GLenum;readonly DRAW_BUFFER2:GLenum;readonly DRAW_BUFFER3:GLenum;readonly DRAW_BUFFER4:GLenum;readonly DRAW_BUFFER5:GLenum;readonly DRAW_BUFFER6:GLenum;readonly DRAW_BUFFER7:GLenum;readonly DRAW_BUFFER8:GLenum;readonly DRAW_BUFFER9:GLenum;readonly DRAW_FRAMEBUFFER:GLenum;readonly DRAW_FRAMEBUFFER_BINDING:GLenum;readonly DYNAMIC_COPY:GLenum;readonly DYNAMIC_READ:GLenum;readonly FLOAT_32_UNSIGNED_INT_24_8_REV:GLenum;readonly FLOAT_MAT2x3:GLenum;readonly FLOAT_MAT2x4:GLenum;readonly FLOAT_MAT3x2:GLenum;readonly FLOAT_MAT3x4:GLenum;readonly FLOAT_MAT4x2:GLenum;readonly FLOAT_MAT4x3:GLenum;readonly FRAGMENT_SHADER_DERIVATIVE_HINT:GLenum;readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING:GLenum;readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER:GLenum;readonly FRAMEBUFFER_DEFAULT:GLenum;readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:GLenum;readonly HALF_FLOAT:GLenum;readonly INTERLEAVED_ATTRIBS:GLenum;readonly INT_2_10_10_10_REV:GLenum;readonly INT_SAMPLER_2D:GLenum;readonly INT_SAMPLER_2D_ARRAY:GLenum;readonly INT_SAMPLER_3D:GLenum;readonly INT_SAMPLER_CUBE:GLenum;readonly INVALID_INDEX:GLenum;readonly MAX:GLenum;readonly MAX_3D_TEXTURE_SIZE:GLenum;readonly MAX_ARRAY_TEXTURE_LAYERS:GLenum;readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL:GLenum;readonly MAX_COLOR_ATTACHMENTS:GLenum;readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS:GLenum;readonly MAX_COMBINED_UNIFORM_BLOCKS:GLenum;readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS:GLenum;readonly MAX_DRAW_BUFFERS:GLenum;readonly MAX_ELEMENTS_INDICES:GLenum;readonly MAX_ELEMENTS_VERTICES:GLenum;readonly MAX_ELEMENT_INDEX:GLenum;readonly MAX_FRAGMENT_INPUT_COMPONENTS:GLenum;readonly MAX_FRAGMENT_UNIFORM_BLOCKS:GLenum;readonly MAX_FRAGMENT_UNIFORM_COMPONENTS:GLenum;readonly MAX_PROGRAM_TEXEL_OFFSET:GLenum;readonly MAX_SAMPLES:GLenum;readonly MAX_SERVER_WAIT_TIMEOUT:GLenum;readonly MAX_TEXTURE_LOD_BIAS:GLenum;readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS:GLenum;readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS:GLenum;readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS:GLenum;readonly MAX_UNIFORM_BLOCK_SIZE:GLenum;readonly MAX_UNIFORM_BUFFER_BINDINGS:GLenum;readonly MAX_VARYING_COMPONENTS:GLenum;readonly MAX_VERTEX_OUTPUT_COMPONENTS:GLenum;readonly MAX_VERTEX_UNIFORM_BLOCKS:GLenum;readonly MAX_VERTEX_UNIFORM_COMPONENTS:GLenum;readonly MIN:GLenum;readonly MIN_PROGRAM_TEXEL_OFFSET:GLenum;readonly OBJECT_TYPE:GLenum;readonly PACK_ROW_LENGTH:GLenum;readonly PACK_SKIP_PIXELS:GLenum;readonly PACK_SKIP_ROWS:GLenum;readonly PIXEL_PACK_BUFFER:GLenum;readonly PIXEL_PACK_BUFFER_BINDING:GLenum;readonly PIXEL_UNPACK_BUFFER:GLenum;readonly PIXEL_UNPACK_BUFFER_BINDING:GLenum;readonly QUERY_RESULT:GLenum;readonly QUERY_RESULT_AVAILABLE:GLenum;readonly R11F_G11F_B10F:GLenum;readonly R16F:GLenum;readonly R16I:GLenum;readonly R16UI:GLenum;readonly R32F:GLenum;readonly R32I:GLenum;readonly R32UI:GLenum;readonly R8:GLenum;readonly R8I:GLenum;readonly R8UI:GLenum;readonly R8_SNORM:GLenum;readonly RASTERIZER_DISCARD:GLenum;readonly READ_BUFFER:GLenum;readonly READ_FRAMEBUFFER:GLenum;readonly READ_FRAMEBUFFER_BINDING:GLenum;readonly RED:GLenum;readonly RED_INTEGER:GLenum;readonly RENDERBUFFER_SAMPLES:GLenum;readonly RG:GLenum;readonly RG16F:GLenum;readonly RG16I:GLenum;readonly RG16UI:GLenum;readonly RG32F:GLenum;readonly RG32I:GLenum;readonly RG32UI:GLenum;readonly RG8:GLenum;readonly RG8I:GLenum;readonly RG8UI:GLenum;readonly RG8_SNORM:GLenum;readonly RGB10_A2:GLenum;readonly RGB10_A2UI:GLenum;readonly RGB16F:GLenum;readonly RGB16I:GLenum;readonly RGB16UI:GLenum;readonly RGB32F:GLenum;readonly RGB32I:GLenum;readonly RGB32UI:GLenum;readonly RGB8:GLenum;readonly RGB8I:GLenum;readonly RGB8UI:GLenum;readonly RGB8_SNORM:GLenum;readonly RGB9_E5:GLenum;readonly RGBA16F:GLenum;readonly RGBA16I:GLenum;readonly RGBA16UI:GLenum;readonly RGBA32F:GLenum;readonly RGBA32I:GLenum;readonly RGBA32UI:GLenum;readonly RGBA8:GLenum;readonly RGBA8I:GLenum;readonly RGBA8UI:GLenum;readonly RGBA8_SNORM:GLenum;readonly RGBA_INTEGER:GLenum;readonly RGB_INTEGER:GLenum;readonly RG_INTEGER:GLenum;readonly SAMPLER_2D_ARRAY:GLenum;readonly SAMPLER_2D_ARRAY_SHADOW:GLenum;readonly SAMPLER_2D_SHADOW:GLenum;readonly SAMPLER_3D:GLenum;readonly SAMPLER_BINDING:GLenum;readonly SAMPLER_CUBE_SHADOW:GLenum;readonly SEPARATE_ATTRIBS:GLenum;readonly SIGNALED:GLenum;readonly SIGNED_NORMALIZED:GLenum;readonly SRGB:GLenum;readonly SRGB8:GLenum;readonly SRGB8_ALPHA8:GLenum;readonly STATIC_COPY:GLenum;readonly STATIC_READ:GLenum;readonly STENCIL:GLenum;readonly STREAM_COPY:GLenum;readonly STREAM_READ:GLenum;readonly SYNC_CONDITION:GLenum;readonly SYNC_FENCE:GLenum;readonly SYNC_FLAGS:GLenum;readonly SYNC_FLUSH_COMMANDS_BIT:GLenum;readonly SYNC_GPU_COMMANDS_COMPLETE:GLenum;readonly SYNC_STATUS:GLenum;readonly TEXTURE_2D_ARRAY:GLenum;readonly TEXTURE_3D:GLenum;readonly TEXTURE_BASE_LEVEL:GLenum;readonly TEXTURE_BINDING_2D_ARRAY:GLenum;readonly TEXTURE_BINDING_3D:GLenum;readonly TEXTURE_COMPARE_FUNC:GLenum;readonly TEXTURE_COMPARE_MODE:GLenum;readonly TEXTURE_IMMUTABLE_FORMAT:GLenum;readonly TEXTURE_IMMUTABLE_LEVELS:GLenum;readonly TEXTURE_MAX_LEVEL:GLenum;readonly TEXTURE_MAX_LOD:GLenum;readonly TEXTURE_MIN_LOD:GLenum;readonly TEXTURE_WRAP_R:GLenum;readonly TIMEOUT_EXPIRED:GLenum;readonly TIMEOUT_IGNORED:GLint64;readonly TRANSFORM_FEEDBACK:GLenum;readonly TRANSFORM_FEEDBACK_ACTIVE:GLenum;readonly TRANSFORM_FEEDBACK_BINDING:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER_BINDING:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER_MODE:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER_SIZE:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER_START:GLenum;readonly TRANSFORM_FEEDBACK_PAUSED:GLenum;readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN:GLenum;readonly TRANSFORM_FEEDBACK_VARYINGS:GLenum;readonly UNIFORM_ARRAY_STRIDE:GLenum;readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS:GLenum;readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES:GLenum;readonly UNIFORM_BLOCK_BINDING:GLenum;readonly UNIFORM_BLOCK_DATA_SIZE:GLenum;readonly UNIFORM_BLOCK_INDEX:GLenum;readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER:GLenum;readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER:GLenum;readonly UNIFORM_BUFFER:GLenum;readonly UNIFORM_BUFFER_BINDING:GLenum;readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT:GLenum;readonly UNIFORM_BUFFER_SIZE:GLenum;readonly UNIFORM_BUFFER_START:GLenum;readonly UNIFORM_IS_ROW_MAJOR:GLenum;readonly UNIFORM_MATRIX_STRIDE:GLenum;readonly UNIFORM_OFFSET:GLenum;readonly UNIFORM_SIZE:GLenum;readonly UNIFORM_TYPE:GLenum;readonly UNPACK_IMAGE_HEIGHT:GLenum;readonly UNPACK_ROW_LENGTH:GLenum;readonly UNPACK_SKIP_IMAGES:GLenum;readonly UNPACK_SKIP_PIXELS:GLenum;readonly UNPACK_SKIP_ROWS:GLenum;readonly UNSIGNALED:GLenum;readonly UNSIGNED_INT_10F_11F_11F_REV:GLenum;readonly UNSIGNED_INT_24_8:GLenum;readonly UNSIGNED_INT_2_10_10_10_REV:GLenum;readonly UNSIGNED_INT_5_9_9_9_REV:GLenum;readonly UNSIGNED_INT_SAMPLER_2D:GLenum;readonly UNSIGNED_INT_SAMPLER_2D_ARRAY:GLenum;readonly UNSIGNED_INT_SAMPLER_3D:GLenum;readonly UNSIGNED_INT_SAMPLER_CUBE:GLenum;readonly UNSIGNED_INT_VEC2:GLenum;readonly UNSIGNED_INT_VEC3:GLenum;readonly UNSIGNED_INT_VEC4:GLenum;readonly UNSIGNED_NORMALIZED:GLenum;readonly VERTEX_ARRAY_BINDING:GLenum;readonly VERTEX_ATTRIB_ARRAY_DIVISOR:GLenum;readonly VERTEX_ATTRIB_ARRAY_INTEGER:GLenum;readonly WAIT_FAILED:GLenum;readonly ACTIVE_ATTRIBUTES:GLenum;readonly ACTIVE_TEXTURE:GLenum;readonly ACTIVE_UNIFORMS:GLenum;readonly ALIASED_LINE_WIDTH_RANGE:GLenum;readonly ALIASED_POINT_SIZE_RANGE:GLenum;readonly ALPHA:GLenum;readonly ALPHA_BITS:GLenum;readonly ALWAYS:GLenum;readonly ARRAY_BUFFER:GLenum;readonly ARRAY_BUFFER_BINDING:GLenum;readonly ATTACHED_SHADERS:GLenum;readonly BACK:GLenum;readonly BLEND:GLenum;readonly BLEND_COLOR:GLenum;readonly BLEND_DST_ALPHA:GLenum;readonly BLEND_DST_RGB:GLenum;readonly BLEND_EQUATION:GLenum;readonly BLEND_EQUATION_ALPHA:GLenum;readonly BLEND_EQUATION_RGB:GLenum;readonly BLEND_SRC_ALPHA:GLenum;readonly BLEND_SRC_RGB:GLenum;readonly BLUE_BITS:GLenum;readonly BOOL:GLenum;readonly BOOL_VEC2:GLenum;readonly BOOL_VEC3:GLenum;readonly BOOL_VEC4:GLenum;readonly BROWSER_DEFAULT_WEBGL:GLenum;readonly BUFFER_SIZE:GLenum;readonly BUFFER_USAGE:GLenum;readonly BYTE:GLenum;readonly CCW:GLenum;readonly CLAMP_TO_EDGE:GLenum;readonly COLOR_ATTACHMENT0:GLenum;readonly COLOR_BUFFER_BIT:GLenum;readonly COLOR_CLEAR_VALUE:GLenum;readonly COLOR_WRITEMASK:GLenum;readonly COMPILE_STATUS:GLenum;readonly COMPRESSED_TEXTURE_FORMATS:GLenum;readonly CONSTANT_ALPHA:GLenum;readonly CONSTANT_COLOR:GLenum;readonly CONTEXT_LOST_WEBGL:GLenum;readonly CULL_FACE:GLenum;readonly CULL_FACE_MODE:GLenum;readonly CURRENT_PROGRAM:GLenum;readonly CURRENT_VERTEX_ATTRIB:GLenum;readonly CW:GLenum;readonly DECR:GLenum;readonly DECR_WRAP:GLenum;readonly DELETE_STATUS:GLenum;readonly DEPTH_ATTACHMENT:GLenum;readonly DEPTH_BITS:GLenum;readonly DEPTH_BUFFER_BIT:GLenum;readonly DEPTH_CLEAR_VALUE:GLenum;readonly DEPTH_COMPONENT:GLenum;readonly DEPTH_COMPONENT16:GLenum;readonly DEPTH_FUNC:GLenum;readonly DEPTH_RANGE:GLenum;readonly DEPTH_STENCIL:GLenum;readonly DEPTH_STENCIL_ATTACHMENT:GLenum;readonly DEPTH_TEST:GLenum;readonly DEPTH_WRITEMASK:GLenum;readonly DITHER:GLenum;readonly DONT_CARE:GLenum;readonly DST_ALPHA:GLenum;readonly DST_COLOR:GLenum;readonly DYNAMIC_DRAW:GLenum;readonly ELEMENT_ARRAY_BUFFER:GLenum;readonly ELEMENT_ARRAY_BUFFER_BINDING:GLenum;readonly EQUAL:GLenum;readonly FASTEST:GLenum;readonly FLOAT:GLenum;readonly FLOAT_MAT2:GLenum;readonly FLOAT_MAT3:GLenum;readonly FLOAT_MAT4:GLenum;readonly FLOAT_VEC2:GLenum;readonly FLOAT_VEC3:GLenum;readonly FLOAT_VEC4:GLenum;readonly FRAGMENT_SHADER:GLenum;readonly FRAMEBUFFER:GLenum;readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:GLenum;readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:GLenum;readonly FRAMEBUFFER_BINDING:GLenum;readonly FRAMEBUFFER_COMPLETE:GLenum;readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT:GLenum;readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS:GLenum;readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:GLenum;readonly FRAMEBUFFER_UNSUPPORTED:GLenum;readonly FRONT:GLenum;readonly FRONT_AND_BACK:GLenum;readonly FRONT_FACE:GLenum;readonly FUNC_ADD:GLenum;readonly FUNC_REVERSE_SUBTRACT:GLenum;readonly FUNC_SUBTRACT:GLenum;readonly GENERATE_MIPMAP_HINT:GLenum;readonly GEQUAL:GLenum;readonly GREATER:GLenum;readonly GREEN_BITS:GLenum;readonly HIGH_FLOAT:GLenum;readonly HIGH_INT:GLenum;readonly IMPLEMENTATION_COLOR_READ_FORMAT:GLenum;readonly IMPLEMENTATION_COLOR_READ_TYPE:GLenum;readonly INCR:GLenum;readonly INCR_WRAP:GLenum;readonly INT:GLenum;readonly INT_VEC2:GLenum;readonly INT_VEC3:GLenum;readonly INT_VEC4:GLenum;readonly INVALID_ENUM:GLenum;readonly INVALID_FRAMEBUFFER_OPERATION:GLenum;readonly INVALID_OPERATION:GLenum;readonly INVALID_VALUE:GLenum;readonly INVERT:GLenum;readonly KEEP:GLenum;readonly LEQUAL:GLenum;readonly LESS:GLenum;readonly LINEAR:GLenum;readonly LINEAR_MIPMAP_LINEAR:GLenum;readonly LINEAR_MIPMAP_NEAREST:GLenum;readonly LINES:GLenum;readonly LINE_LOOP:GLenum;readonly LINE_STRIP:GLenum;readonly LINE_WIDTH:GLenum;readonly LINK_STATUS:GLenum;readonly LOW_FLOAT:GLenum;readonly LOW_INT:GLenum;readonly LUMINANCE:GLenum;readonly LUMINANCE_ALPHA:GLenum;readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_CUBE_MAP_TEXTURE_SIZE:GLenum;readonly MAX_FRAGMENT_UNIFORM_VECTORS:GLenum;readonly MAX_RENDERBUFFER_SIZE:GLenum;readonly MAX_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_TEXTURE_SIZE:GLenum;readonly MAX_VARYING_VECTORS:GLenum;readonly MAX_VERTEX_ATTRIBS:GLenum;readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_VERTEX_UNIFORM_VECTORS:GLenum;readonly MAX_VIEWPORT_DIMS:GLenum;readonly MEDIUM_FLOAT:GLenum;readonly MEDIUM_INT:GLenum;readonly MIRRORED_REPEAT:GLenum;readonly NEAREST:GLenum;readonly NEAREST_MIPMAP_LINEAR:GLenum;readonly NEAREST_MIPMAP_NEAREST:GLenum;readonly NEVER:GLenum;readonly NICEST:GLenum;readonly NONE:GLenum;readonly NOTEQUAL:GLenum;readonly NO_ERROR:GLenum;readonly ONE:GLenum;readonly ONE_MINUS_CONSTANT_ALPHA:GLenum;readonly ONE_MINUS_CONSTANT_COLOR:GLenum;readonly ONE_MINUS_DST_ALPHA:GLenum;readonly ONE_MINUS_DST_COLOR:GLenum;readonly ONE_MINUS_SRC_ALPHA:GLenum;readonly ONE_MINUS_SRC_COLOR:GLenum;readonly OUT_OF_MEMORY:GLenum;readonly PACK_ALIGNMENT:GLenum;readonly POINTS:GLenum;readonly POLYGON_OFFSET_FACTOR:GLenum;readonly POLYGON_OFFSET_FILL:GLenum;readonly POLYGON_OFFSET_UNITS:GLenum;readonly RED_BITS:GLenum;readonly RENDERBUFFER:GLenum;readonly RENDERBUFFER_ALPHA_SIZE:GLenum;readonly RENDERBUFFER_BINDING:GLenum;readonly RENDERBUFFER_BLUE_SIZE:GLenum;readonly RENDERBUFFER_DEPTH_SIZE:GLenum;readonly RENDERBUFFER_GREEN_SIZE:GLenum;readonly RENDERBUFFER_HEIGHT:GLenum;readonly RENDERBUFFER_INTERNAL_FORMAT:GLenum;readonly RENDERBUFFER_RED_SIZE:GLenum;readonly RENDERBUFFER_STENCIL_SIZE:GLenum;readonly RENDERBUFFER_WIDTH:GLenum;readonly RENDERER:GLenum;readonly REPEAT:GLenum;readonly REPLACE:GLenum;readonly RGB:GLenum;readonly RGB565:GLenum;readonly RGB5_A1:GLenum;readonly RGBA:GLenum;readonly RGBA4:GLenum;readonly SAMPLER_2D:GLenum;readonly SAMPLER_CUBE:GLenum;readonly SAMPLES:GLenum;readonly SAMPLE_ALPHA_TO_COVERAGE:GLenum;readonly SAMPLE_BUFFERS:GLenum;readonly SAMPLE_COVERAGE:GLenum;readonly SAMPLE_COVERAGE_INVERT:GLenum;readonly SAMPLE_COVERAGE_VALUE:GLenum;readonly SCISSOR_BOX:GLenum;readonly SCISSOR_TEST:GLenum;readonly SHADER_TYPE:GLenum;readonly SHADING_LANGUAGE_VERSION:GLenum;readonly SHORT:GLenum;readonly SRC_ALPHA:GLenum;readonly SRC_ALPHA_SATURATE:GLenum;readonly SRC_COLOR:GLenum;readonly STATIC_DRAW:GLenum;readonly STENCIL_ATTACHMENT:GLenum;readonly STENCIL_BACK_FAIL:GLenum;readonly STENCIL_BACK_FUNC:GLenum;readonly STENCIL_BACK_PASS_DEPTH_FAIL:GLenum;readonly STENCIL_BACK_PASS_DEPTH_PASS:GLenum;readonly STENCIL_BACK_REF:GLenum;readonly STENCIL_BACK_VALUE_MASK:GLenum;readonly STENCIL_BACK_WRITEMASK:GLenum;readonly STENCIL_BITS:GLenum;readonly STENCIL_BUFFER_BIT:GLenum;readonly STENCIL_CLEAR_VALUE:GLenum;readonly STENCIL_FAIL:GLenum;readonly STENCIL_FUNC:GLenum;readonly STENCIL_INDEX8:GLenum;readonly STENCIL_PASS_DEPTH_FAIL:GLenum;readonly STENCIL_PASS_DEPTH_PASS:GLenum;readonly STENCIL_REF:GLenum;readonly STENCIL_TEST:GLenum;readonly STENCIL_VALUE_MASK:GLenum;readonly STENCIL_WRITEMASK:GLenum;readonly STREAM_DRAW:GLenum;readonly SUBPIXEL_BITS:GLenum;readonly TEXTURE:GLenum;readonly TEXTURE0:GLenum;readonly TEXTURE1:GLenum;readonly TEXTURE10:GLenum;readonly TEXTURE11:GLenum;readonly TEXTURE12:GLenum;readonly TEXTURE13:GLenum;readonly TEXTURE14:GLenum;readonly TEXTURE15:GLenum;readonly TEXTURE16:GLenum;readonly TEXTURE17:GLenum;readonly TEXTURE18:GLenum;readonly TEXTURE19:GLenum;readonly TEXTURE2:GLenum;readonly TEXTURE20:GLenum;readonly TEXTURE21:GLenum;readonly TEXTURE22:GLenum;readonly TEXTURE23:GLenum;readonly TEXTURE24:GLenum;readonly TEXTURE25:GLenum;readonly TEXTURE26:GLenum;readonly TEXTURE27:GLenum;readonly TEXTURE28:GLenum;readonly TEXTURE29:GLenum;readonly TEXTURE3:GLenum;readonly TEXTURE30:GLenum;readonly TEXTURE31:GLenum;readonly TEXTURE4:GLenum;readonly TEXTURE5:GLenum;readonly TEXTURE6:GLenum;readonly TEXTURE7:GLenum;readonly TEXTURE8:GLenum;readonly TEXTURE9:GLenum;readonly TEXTURE_2D:GLenum;readonly TEXTURE_BINDING_2D:GLenum;readonly TEXTURE_BINDING_CUBE_MAP:GLenum;readonly TEXTURE_CUBE_MAP:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_X:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_Y:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_Z:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_X:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_Y:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_Z:GLenum;readonly TEXTURE_MAG_FILTER:GLenum;readonly TEXTURE_MIN_FILTER:GLenum;readonly TEXTURE_WRAP_S:GLenum;readonly TEXTURE_WRAP_T:GLenum;readonly TRIANGLES:GLenum;readonly TRIANGLE_FAN:GLenum;readonly TRIANGLE_STRIP:GLenum;readonly UNPACK_ALIGNMENT:GLenum;readonly UNPACK_COLORSPACE_CONVERSION_WEBGL:GLenum;readonly UNPACK_FLIP_Y_WEBGL:GLenum;readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL:GLenum;readonly UNSIGNED_BYTE:GLenum;readonly UNSIGNED_INT:GLenum;readonly UNSIGNED_SHORT:GLenum;readonly UNSIGNED_SHORT_4_4_4_4:GLenum;readonly UNSIGNED_SHORT_5_5_5_1:GLenum;readonly UNSIGNED_SHORT_5_6_5:GLenum;readonly VALIDATE_STATUS:GLenum;readonly VENDOR:GLenum;readonly VERSION:GLenum;readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:GLenum;readonly VERTEX_ATTRIB_ARRAY_ENABLED:GLenum;readonly VERTEX_ATTRIB_ARRAY_NORMALIZED:GLenum;readonly VERTEX_ATTRIB_ARRAY_POINTER:GLenum;readonly VERTEX_ATTRIB_ARRAY_SIZE:GLenum;readonly VERTEX_ATTRIB_ARRAY_STRIDE:GLenum;readonly VERTEX_ATTRIB_ARRAY_TYPE:GLenum;readonly VERTEX_SHADER:GLenum;readonly VIEWPORT:GLenum;readonly ZERO:GLenum;};interface WebGL2RenderingContextBase{beginQuery(target:GLenum,query:WebGLQuery):void;beginTransformFeedback(primitiveMode:GLenum):void;bindBufferBase(target:GLenum,index:GLuint,buffer:WebGLBuffer|null):void;bindBufferRange(target:GLenum,index:GLuint,buffer:WebGLBuffer|null,offset:GLintptr,size:GLsizeiptr):void;bindSampler(unit:GLuint,sampler:WebGLSampler|null):void;bindTransformFeedback(target:GLenum,tf:WebGLTransformFeedback|null):void;bindVertexArray(array:WebGLVertexArrayObject|null):void;blitFramebuffer(srcX0:GLint,srcY0:GLint,srcX1:GLint,srcY1:GLint,dstX0:GLint,dstY0:GLint,dstX1:GLint,dstY1:GLint,mask:GLbitfield,filter:GLenum):void;clearBufferfi(buffer:GLenum,drawbuffer:GLint,depth:GLfloat,stencil:GLint):void;clearBufferfv(buffer:GLenum,drawbuffer:GLint,values:Float32List,srcOffset?:GLuint):void;clearBufferiv(buffer:GLenum,drawbuffer:GLint,values:Int32List,srcOffset?:GLuint):void;clearBufferuiv(buffer:GLenum,drawbuffer:GLint,values:Uint32List,srcOffset?:GLuint):void;clientWaitSync(sync:WebGLSync,flags:GLbitfield,timeout:GLuint64):GLenum;compressedTexImage3D(target:GLenum,level:GLint,internalformat:GLenum,width:GLsizei,height:GLsizei,depth:GLsizei,border:GLint,imageSize:GLsizei,offset:GLintptr):void;compressedTexImage3D(target:GLenum,level:GLint,internalformat:GLenum,width:GLsizei,height:GLsizei,depth:GLsizei,border:GLint,srcData:ArrayBufferView,srcOffset?:GLuint,srcLengthOverride?:GLuint):void;compressedTexSubImage3D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,zoffset:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,format:GLenum,imageSize:GLsizei,offset:GLintptr):void;compressedTexSubImage3D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,zoffset:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,format:GLenum,srcData:ArrayBufferView,srcOffset?:GLuint,srcLengthOverride?:GLuint):void;copyBufferSubData(readTarget:GLenum,writeTarget:GLenum,readOffset:GLintptr,writeOffset:GLintptr,size:GLsizeiptr):void;copyTexSubImage3D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,zoffset:GLint,x:GLint,y:GLint,width:GLsizei,height:GLsizei):void;createQuery():WebGLQuery|null;createSampler():WebGLSampler|null;createTransformFeedback():WebGLTransformFeedback|null;createVertexArray():WebGLVertexArrayObject|null;deleteQuery(query:WebGLQuery|null):void;deleteSampler(sampler:WebGLSampler|null):void;deleteSync(sync:WebGLSync|null):void;deleteTransformFeedback(tf:WebGLTransformFeedback|null):void;deleteVertexArray(vertexArray:WebGLVertexArrayObject|null):void;drawArraysInstanced(mode:GLenum,first:GLint,count:GLsizei,instanceCount:GLsizei):void;drawBuffers(buffers:GLenum[]):void;drawElementsInstanced(mode:GLenum,count:GLsizei,type:GLenum,offset:GLintptr,instanceCount:GLsizei):void;drawRangeElements(mode:GLenum,start:GLuint,end:GLuint,count:GLsizei,type:GLenum,offset:GLintptr):void;endQuery(target:GLenum):void;endTransformFeedback():void;fenceSync(condition:GLenum,flags:GLbitfield):WebGLSync|null;framebufferTextureLayer(target:GLenum,attachment:GLenum,texture:WebGLTexture|null,level:GLint,layer:GLint):void;getActiveUniformBlockName(program:WebGLProgram,uniformBlockIndex:GLuint):string|null;getActiveUniformBlockParameter(program:WebGLProgram,uniformBlockIndex:GLuint,pname:GLenum):any;getActiveUniforms(program:WebGLProgram,uniformIndices:GLuint[],pname:GLenum):any;getBufferSubData(target:GLenum,srcByteOffset:GLintptr,dstBuffer:ArrayBufferView,dstOffset?:GLuint,length?:GLuint):void;getFragDataLocation(program:WebGLProgram,name:string):GLint;getIndexedParameter(target:GLenum,index:GLuint):any;getInternalformatParameter(target:GLenum,internalformat:GLenum,pname:GLenum):any;getQuery(target:GLenum,pname:GLenum):WebGLQuery|null;getQueryParameter(query:WebGLQuery,pname:GLenum):any;getSamplerParameter(sampler:WebGLSampler,pname:GLenum):any;getSyncParameter(sync:WebGLSync,pname:GLenum):any;getTransformFeedbackVarying(program:WebGLProgram,index:GLuint):WebGLActiveInfo|null;getUniformBlockIndex(program:WebGLProgram,uniformBlockName:string):GLuint;getUniformIndices(program:WebGLProgram,uniformNames:string[]):GLuint[]|null;invalidateFramebuffer(target:GLenum,attachments:GLenum[]):void;invalidateSubFramebuffer(target:GLenum,attachments:GLenum[],x:GLint,y:GLint,width:GLsizei,height:GLsizei):void;isQuery(query:WebGLQuery|null):GLboolean;isSampler(sampler:WebGLSampler|null):GLboolean;isSync(sync:WebGLSync|null):GLboolean;isTransformFeedback(tf:WebGLTransformFeedback|null):GLboolean;isVertexArray(vertexArray:WebGLVertexArrayObject|null):GLboolean;pauseTransformFeedback():void;readBuffer(src:GLenum):void;renderbufferStorageMultisample(target:GLenum,samples:GLsizei,internalformat:GLenum,width:GLsizei,height:GLsizei):void;resumeTransformFeedback():void;samplerParameterf(sampler:WebGLSampler,pname:GLenum,param:GLfloat):void;samplerParameteri(sampler:WebGLSampler,pname:GLenum,param:GLint):void;texImage3D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,border:GLint,format:GLenum,type:GLenum,pboOffset:GLintptr):void;texImage3D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,border:GLint,format:GLenum,type:GLenum,source:TexImageSource):void;texImage3D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,border:GLint,format:GLenum,type:GLenum,srcData:ArrayBufferView|null):void;texImage3D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,border:GLint,format:GLenum,type:GLenum,srcData:ArrayBufferView,srcOffset:GLuint):void;texStorage2D(target:GLenum,levels:GLsizei,internalformat:GLenum,width:GLsizei,height:GLsizei):void;texStorage3D(target:GLenum,levels:GLsizei,internalformat:GLenum,width:GLsizei,height:GLsizei,depth:GLsizei):void;texSubImage3D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,zoffset:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,format:GLenum,type:GLenum,pboOffset:GLintptr):void;texSubImage3D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,zoffset:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,format:GLenum,type:GLenum,source:TexImageSource):void;texSubImage3D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,zoffset:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,format:GLenum,type:GLenum,srcData:ArrayBufferView|null,srcOffset?:GLuint):void;transformFeedbackVaryings(program:WebGLProgram,varyings:string[],bufferMode:GLenum):void;uniform1ui(location:WebGLUniformLocation|null,v0:GLuint):void;uniform1uiv(location:WebGLUniformLocation|null,data:Uint32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform2ui(location:WebGLUniformLocation|null,v0:GLuint,v1:GLuint):void;uniform2uiv(location:WebGLUniformLocation|null,data:Uint32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform3ui(location:WebGLUniformLocation|null,v0:GLuint,v1:GLuint,v2:GLuint):void;uniform3uiv(location:WebGLUniformLocation|null,data:Uint32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform4ui(location:WebGLUniformLocation|null,v0:GLuint,v1:GLuint,v2:GLuint,v3:GLuint):void;uniform4uiv(location:WebGLUniformLocation|null,data:Uint32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformBlockBinding(program:WebGLProgram,uniformBlockIndex:GLuint,uniformBlockBinding:GLuint):void;uniformMatrix2x3fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix2x4fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix3x2fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix3x4fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix4x2fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix4x3fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;vertexAttribDivisor(index:GLuint,divisor:GLuint):void;vertexAttribI4i(index:GLuint,x:GLint,y:GLint,z:GLint,w:GLint):void;vertexAttribI4iv(index:GLuint,values:Int32List):void;vertexAttribI4ui(index:GLuint,x:GLuint,y:GLuint,z:GLuint,w:GLuint):void;vertexAttribI4uiv(index:GLuint,values:Uint32List):void;vertexAttribIPointer(index:GLuint,size:GLint,type:GLenum,stride:GLsizei,offset:GLintptr):void;waitSync(sync:WebGLSync,flags:GLbitfield,timeout:GLint64):void;readonly ACTIVE_UNIFORM_BLOCKS:GLenum;readonly ALREADY_SIGNALED:GLenum;readonly ANY_SAMPLES_PASSED:GLenum;readonly ANY_SAMPLES_PASSED_CONSERVATIVE:GLenum;readonly COLOR:GLenum;readonly COLOR_ATTACHMENT1:GLenum;readonly COLOR_ATTACHMENT10:GLenum;readonly COLOR_ATTACHMENT11:GLenum;readonly COLOR_ATTACHMENT12:GLenum;readonly COLOR_ATTACHMENT13:GLenum;readonly COLOR_ATTACHMENT14:GLenum;readonly COLOR_ATTACHMENT15:GLenum;readonly COLOR_ATTACHMENT2:GLenum;readonly COLOR_ATTACHMENT3:GLenum;readonly COLOR_ATTACHMENT4:GLenum;readonly COLOR_ATTACHMENT5:GLenum;readonly COLOR_ATTACHMENT6:GLenum;readonly COLOR_ATTACHMENT7:GLenum;readonly COLOR_ATTACHMENT8:GLenum;readonly COLOR_ATTACHMENT9:GLenum;readonly COMPARE_REF_TO_TEXTURE:GLenum;readonly CONDITION_SATISFIED:GLenum;readonly COPY_READ_BUFFER:GLenum;readonly COPY_READ_BUFFER_BINDING:GLenum;readonly COPY_WRITE_BUFFER:GLenum;readonly COPY_WRITE_BUFFER_BINDING:GLenum;readonly CURRENT_QUERY:GLenum;readonly DEPTH:GLenum;readonly DEPTH24_STENCIL8:GLenum;readonly DEPTH32F_STENCIL8:GLenum;readonly DEPTH_COMPONENT24:GLenum;readonly DEPTH_COMPONENT32F:GLenum;readonly DRAW_BUFFER0:GLenum;readonly DRAW_BUFFER1:GLenum;readonly DRAW_BUFFER10:GLenum;readonly DRAW_BUFFER11:GLenum;readonly DRAW_BUFFER12:GLenum;readonly DRAW_BUFFER13:GLenum;readonly DRAW_BUFFER14:GLenum;readonly DRAW_BUFFER15:GLenum;readonly DRAW_BUFFER2:GLenum;readonly DRAW_BUFFER3:GLenum;readonly DRAW_BUFFER4:GLenum;readonly DRAW_BUFFER5:GLenum;readonly DRAW_BUFFER6:GLenum;readonly DRAW_BUFFER7:GLenum;readonly DRAW_BUFFER8:GLenum;readonly DRAW_BUFFER9:GLenum;readonly DRAW_FRAMEBUFFER:GLenum;readonly DRAW_FRAMEBUFFER_BINDING:GLenum;readonly DYNAMIC_COPY:GLenum;readonly DYNAMIC_READ:GLenum;readonly FLOAT_32_UNSIGNED_INT_24_8_REV:GLenum;readonly FLOAT_MAT2x3:GLenum;readonly FLOAT_MAT2x4:GLenum;readonly FLOAT_MAT3x2:GLenum;readonly FLOAT_MAT3x4:GLenum;readonly FLOAT_MAT4x2:GLenum;readonly FLOAT_MAT4x3:GLenum;readonly FRAGMENT_SHADER_DERIVATIVE_HINT:GLenum;readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING:GLenum;readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER:GLenum;readonly FRAMEBUFFER_DEFAULT:GLenum;readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:GLenum;readonly HALF_FLOAT:GLenum;readonly INTERLEAVED_ATTRIBS:GLenum;readonly INT_2_10_10_10_REV:GLenum;readonly INT_SAMPLER_2D:GLenum;readonly INT_SAMPLER_2D_ARRAY:GLenum;readonly INT_SAMPLER_3D:GLenum;readonly INT_SAMPLER_CUBE:GLenum;readonly INVALID_INDEX:GLenum;readonly MAX:GLenum;readonly MAX_3D_TEXTURE_SIZE:GLenum;readonly MAX_ARRAY_TEXTURE_LAYERS:GLenum;readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL:GLenum;readonly MAX_COLOR_ATTACHMENTS:GLenum;readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS:GLenum;readonly MAX_COMBINED_UNIFORM_BLOCKS:GLenum;readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS:GLenum;readonly MAX_DRAW_BUFFERS:GLenum;readonly MAX_ELEMENTS_INDICES:GLenum;readonly MAX_ELEMENTS_VERTICES:GLenum;readonly MAX_ELEMENT_INDEX:GLenum;readonly MAX_FRAGMENT_INPUT_COMPONENTS:GLenum;readonly MAX_FRAGMENT_UNIFORM_BLOCKS:GLenum;readonly MAX_FRAGMENT_UNIFORM_COMPONENTS:GLenum;readonly MAX_PROGRAM_TEXEL_OFFSET:GLenum;readonly MAX_SAMPLES:GLenum;readonly MAX_SERVER_WAIT_TIMEOUT:GLenum;readonly MAX_TEXTURE_LOD_BIAS:GLenum;readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS:GLenum;readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS:GLenum;readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS:GLenum;readonly MAX_UNIFORM_BLOCK_SIZE:GLenum;readonly MAX_UNIFORM_BUFFER_BINDINGS:GLenum;readonly MAX_VARYING_COMPONENTS:GLenum;readonly MAX_VERTEX_OUTPUT_COMPONENTS:GLenum;readonly MAX_VERTEX_UNIFORM_BLOCKS:GLenum;readonly MAX_VERTEX_UNIFORM_COMPONENTS:GLenum;readonly MIN:GLenum;readonly MIN_PROGRAM_TEXEL_OFFSET:GLenum;readonly OBJECT_TYPE:GLenum;readonly PACK_ROW_LENGTH:GLenum;readonly PACK_SKIP_PIXELS:GLenum;readonly PACK_SKIP_ROWS:GLenum;readonly PIXEL_PACK_BUFFER:GLenum;readonly PIXEL_PACK_BUFFER_BINDING:GLenum;readonly PIXEL_UNPACK_BUFFER:GLenum;readonly PIXEL_UNPACK_BUFFER_BINDING:GLenum;readonly QUERY_RESULT:GLenum;readonly QUERY_RESULT_AVAILABLE:GLenum;readonly R11F_G11F_B10F:GLenum;readonly R16F:GLenum;readonly R16I:GLenum;readonly R16UI:GLenum;readonly R32F:GLenum;readonly R32I:GLenum;readonly R32UI:GLenum;readonly R8:GLenum;readonly R8I:GLenum;readonly R8UI:GLenum;readonly R8_SNORM:GLenum;readonly RASTERIZER_DISCARD:GLenum;readonly READ_BUFFER:GLenum;readonly READ_FRAMEBUFFER:GLenum;readonly READ_FRAMEBUFFER_BINDING:GLenum;readonly RED:GLenum;readonly RED_INTEGER:GLenum;readonly RENDERBUFFER_SAMPLES:GLenum;readonly RG:GLenum;readonly RG16F:GLenum;readonly RG16I:GLenum;readonly RG16UI:GLenum;readonly RG32F:GLenum;readonly RG32I:GLenum;readonly RG32UI:GLenum;readonly RG8:GLenum;readonly RG8I:GLenum;readonly RG8UI:GLenum;readonly RG8_SNORM:GLenum;readonly RGB10_A2:GLenum;readonly RGB10_A2UI:GLenum;readonly RGB16F:GLenum;readonly RGB16I:GLenum;readonly RGB16UI:GLenum;readonly RGB32F:GLenum;readonly RGB32I:GLenum;readonly RGB32UI:GLenum;readonly RGB8:GLenum;readonly RGB8I:GLenum;readonly RGB8UI:GLenum;readonly RGB8_SNORM:GLenum;readonly RGB9_E5:GLenum;readonly RGBA16F:GLenum;readonly RGBA16I:GLenum;readonly RGBA16UI:GLenum;readonly RGBA32F:GLenum;readonly RGBA32I:GLenum;readonly RGBA32UI:GLenum;readonly RGBA8:GLenum;readonly RGBA8I:GLenum;readonly RGBA8UI:GLenum;readonly RGBA8_SNORM:GLenum;readonly RGBA_INTEGER:GLenum;readonly RGB_INTEGER:GLenum;readonly RG_INTEGER:GLenum;readonly SAMPLER_2D_ARRAY:GLenum;readonly SAMPLER_2D_ARRAY_SHADOW:GLenum;readonly SAMPLER_2D_SHADOW:GLenum;readonly SAMPLER_3D:GLenum;readonly SAMPLER_BINDING:GLenum;readonly SAMPLER_CUBE_SHADOW:GLenum;readonly SEPARATE_ATTRIBS:GLenum;readonly SIGNALED:GLenum;readonly SIGNED_NORMALIZED:GLenum;readonly SRGB:GLenum;readonly SRGB8:GLenum;readonly SRGB8_ALPHA8:GLenum;readonly STATIC_COPY:GLenum;readonly STATIC_READ:GLenum;readonly STENCIL:GLenum;readonly STREAM_COPY:GLenum;readonly STREAM_READ:GLenum;readonly SYNC_CONDITION:GLenum;readonly SYNC_FENCE:GLenum;readonly SYNC_FLAGS:GLenum;readonly SYNC_FLUSH_COMMANDS_BIT:GLenum;readonly SYNC_GPU_COMMANDS_COMPLETE:GLenum;readonly SYNC_STATUS:GLenum;readonly TEXTURE_2D_ARRAY:GLenum;readonly TEXTURE_3D:GLenum;readonly TEXTURE_BASE_LEVEL:GLenum;readonly TEXTURE_BINDING_2D_ARRAY:GLenum;readonly TEXTURE_BINDING_3D:GLenum;readonly TEXTURE_COMPARE_FUNC:GLenum;readonly TEXTURE_COMPARE_MODE:GLenum;readonly TEXTURE_IMMUTABLE_FORMAT:GLenum;readonly TEXTURE_IMMUTABLE_LEVELS:GLenum;readonly TEXTURE_MAX_LEVEL:GLenum;readonly TEXTURE_MAX_LOD:GLenum;readonly TEXTURE_MIN_LOD:GLenum;readonly TEXTURE_WRAP_R:GLenum;readonly TIMEOUT_EXPIRED:GLenum;readonly TIMEOUT_IGNORED:GLint64;readonly TRANSFORM_FEEDBACK:GLenum;readonly TRANSFORM_FEEDBACK_ACTIVE:GLenum;readonly TRANSFORM_FEEDBACK_BINDING:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER_BINDING:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER_MODE:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER_SIZE:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER_START:GLenum;readonly TRANSFORM_FEEDBACK_PAUSED:GLenum;readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN:GLenum;readonly TRANSFORM_FEEDBACK_VARYINGS:GLenum;readonly UNIFORM_ARRAY_STRIDE:GLenum;readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS:GLenum;readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES:GLenum;readonly UNIFORM_BLOCK_BINDING:GLenum;readonly UNIFORM_BLOCK_DATA_SIZE:GLenum;readonly UNIFORM_BLOCK_INDEX:GLenum;readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER:GLenum;readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER:GLenum;readonly UNIFORM_BUFFER:GLenum;readonly UNIFORM_BUFFER_BINDING:GLenum;readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT:GLenum;readonly UNIFORM_BUFFER_SIZE:GLenum;readonly UNIFORM_BUFFER_START:GLenum;readonly UNIFORM_IS_ROW_MAJOR:GLenum;readonly UNIFORM_MATRIX_STRIDE:GLenum;readonly UNIFORM_OFFSET:GLenum;readonly UNIFORM_SIZE:GLenum;readonly UNIFORM_TYPE:GLenum;readonly UNPACK_IMAGE_HEIGHT:GLenum;readonly UNPACK_ROW_LENGTH:GLenum;readonly UNPACK_SKIP_IMAGES:GLenum;readonly UNPACK_SKIP_PIXELS:GLenum;readonly UNPACK_SKIP_ROWS:GLenum;readonly UNSIGNALED:GLenum;readonly UNSIGNED_INT_10F_11F_11F_REV:GLenum;readonly UNSIGNED_INT_24_8:GLenum;readonly UNSIGNED_INT_2_10_10_10_REV:GLenum;readonly UNSIGNED_INT_5_9_9_9_REV:GLenum;readonly UNSIGNED_INT_SAMPLER_2D:GLenum;readonly UNSIGNED_INT_SAMPLER_2D_ARRAY:GLenum;readonly UNSIGNED_INT_SAMPLER_3D:GLenum;readonly UNSIGNED_INT_SAMPLER_CUBE:GLenum;readonly UNSIGNED_INT_VEC2:GLenum;readonly UNSIGNED_INT_VEC3:GLenum;readonly UNSIGNED_INT_VEC4:GLenum;readonly UNSIGNED_NORMALIZED:GLenum;readonly VERTEX_ARRAY_BINDING:GLenum;readonly VERTEX_ATTRIB_ARRAY_DIVISOR:GLenum;readonly VERTEX_ATTRIB_ARRAY_INTEGER:GLenum;readonly WAIT_FAILED:GLenum;}interface WebGL2RenderingContextOverloads{bufferData(target:GLenum,size:GLsizeiptr,usage:GLenum):void;bufferData(target:GLenum,srcData:BufferSource|null,usage:GLenum):void;bufferData(target:GLenum,srcData:ArrayBufferView,usage:GLenum,srcOffset:GLuint,length?:GLuint):void;bufferSubData(target:GLenum,dstByteOffset:GLintptr,srcData:BufferSource):void;bufferSubData(target:GLenum,dstByteOffset:GLintptr,srcData:ArrayBufferView,srcOffset:GLuint,length?:GLuint):void;compressedTexImage2D(target:GLenum,level:GLint,internalformat:GLenum,width:GLsizei,height:GLsizei,border:GLint,imageSize:GLsizei,offset:GLintptr):void;compressedTexImage2D(target:GLenum,level:GLint,internalformat:GLenum,width:GLsizei,height:GLsizei,border:GLint,srcData:ArrayBufferView,srcOffset?:GLuint,srcLengthOverride?:GLuint):void;compressedTexSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,width:GLsizei,height:GLsizei,format:GLenum,imageSize:GLsizei,offset:GLintptr):void;compressedTexSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,width:GLsizei,height:GLsizei,format:GLenum,srcData:ArrayBufferView,srcOffset?:GLuint,srcLengthOverride?:GLuint):void;readPixels(x:GLint,y:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,dstData:ArrayBufferView|null):void;readPixels(x:GLint,y:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,offset:GLintptr):void;readPixels(x:GLint,y:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,dstData:ArrayBufferView,dstOffset:GLuint):void;texImage2D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,border:GLint,format:GLenum,type:GLenum,pixels:ArrayBufferView|null):void;texImage2D(target:GLenum,level:GLint,internalformat:GLint,format:GLenum,type:GLenum,source:TexImageSource):void;texImage2D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,border:GLint,format:GLenum,type:GLenum,pboOffset:GLintptr):void;texImage2D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,border:GLint,format:GLenum,type:GLenum,source:TexImageSource):void;texImage2D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,border:GLint,format:GLenum,type:GLenum,srcData:ArrayBufferView,srcOffset:GLuint):void;texSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,pixels:ArrayBufferView|null):void;texSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,format:GLenum,type:GLenum,source:TexImageSource):void;texSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,pboOffset:GLintptr):void;texSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,source:TexImageSource):void;texSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,srcData:ArrayBufferView,srcOffset:GLuint):void;uniform1fv(location:WebGLUniformLocation|null,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform1iv(location:WebGLUniformLocation|null,data:Int32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform2fv(location:WebGLUniformLocation|null,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform2iv(location:WebGLUniformLocation|null,data:Int32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform3fv(location:WebGLUniformLocation|null,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform3iv(location:WebGLUniformLocation|null,data:Int32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform4fv(location:WebGLUniformLocation|null,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform4iv(location:WebGLUniformLocation|null,data:Int32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix2fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix3fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix4fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;}interface WebGLActiveInfo{readonly name:string;readonly size:GLint;readonly type:GLenum;}declare var WebGLActiveInfo:{prototype:WebGLActiveInfo;new():WebGLActiveInfo;};interface WebGLBuffer{}declare var WebGLBuffer:{prototype:WebGLBuffer;new():WebGLBuffer;};interface WebGLContextEvent extends Event{readonly statusMessage:string;}declare var WebGLContextEvent:{prototype:WebGLContextEvent;new(type:string,eventInit?:WebGLContextEventInit):WebGLContextEvent;};interface WebGLFramebuffer{}declare var WebGLFramebuffer:{prototype:WebGLFramebuffer;new():WebGLFramebuffer;};interface WebGLProgram{}declare var WebGLProgram:{prototype:WebGLProgram;new():WebGLProgram;};interface WebGLQuery{}declare var WebGLQuery:{prototype:WebGLQuery;new():WebGLQuery;};interface WebGLRenderbuffer{}declare var WebGLRenderbuffer:{prototype:WebGLRenderbuffer;new():WebGLRenderbuffer;};interface WebGLRenderingContext extends WebGLRenderingContextBase,WebGLRenderingContextOverloads{}declare var WebGLRenderingContext:{prototype:WebGLRenderingContext;new():WebGLRenderingContext;readonly ACTIVE_ATTRIBUTES:GLenum;readonly ACTIVE_TEXTURE:GLenum;readonly ACTIVE_UNIFORMS:GLenum;readonly ALIASED_LINE_WIDTH_RANGE:GLenum;readonly ALIASED_POINT_SIZE_RANGE:GLenum;readonly ALPHA:GLenum;readonly ALPHA_BITS:GLenum;readonly ALWAYS:GLenum;readonly ARRAY_BUFFER:GLenum;readonly ARRAY_BUFFER_BINDING:GLenum;readonly ATTACHED_SHADERS:GLenum;readonly BACK:GLenum;readonly BLEND:GLenum;readonly BLEND_COLOR:GLenum;readonly BLEND_DST_ALPHA:GLenum;readonly BLEND_DST_RGB:GLenum;readonly BLEND_EQUATION:GLenum;readonly BLEND_EQUATION_ALPHA:GLenum;readonly BLEND_EQUATION_RGB:GLenum;readonly BLEND_SRC_ALPHA:GLenum;readonly BLEND_SRC_RGB:GLenum;readonly BLUE_BITS:GLenum;readonly BOOL:GLenum;readonly BOOL_VEC2:GLenum;readonly BOOL_VEC3:GLenum;readonly BOOL_VEC4:GLenum;readonly BROWSER_DEFAULT_WEBGL:GLenum;readonly BUFFER_SIZE:GLenum;readonly BUFFER_USAGE:GLenum;readonly BYTE:GLenum;readonly CCW:GLenum;readonly CLAMP_TO_EDGE:GLenum;readonly COLOR_ATTACHMENT0:GLenum;readonly COLOR_BUFFER_BIT:GLenum;readonly COLOR_CLEAR_VALUE:GLenum;readonly COLOR_WRITEMASK:GLenum;readonly COMPILE_STATUS:GLenum;readonly COMPRESSED_TEXTURE_FORMATS:GLenum;readonly CONSTANT_ALPHA:GLenum;readonly CONSTANT_COLOR:GLenum;readonly CONTEXT_LOST_WEBGL:GLenum;readonly CULL_FACE:GLenum;readonly CULL_FACE_MODE:GLenum;readonly CURRENT_PROGRAM:GLenum;readonly CURRENT_VERTEX_ATTRIB:GLenum;readonly CW:GLenum;readonly DECR:GLenum;readonly DECR_WRAP:GLenum;readonly DELETE_STATUS:GLenum;readonly DEPTH_ATTACHMENT:GLenum;readonly DEPTH_BITS:GLenum;readonly DEPTH_BUFFER_BIT:GLenum;readonly DEPTH_CLEAR_VALUE:GLenum;readonly DEPTH_COMPONENT:GLenum;readonly DEPTH_COMPONENT16:GLenum;readonly DEPTH_FUNC:GLenum;readonly DEPTH_RANGE:GLenum;readonly DEPTH_STENCIL:GLenum;readonly DEPTH_STENCIL_ATTACHMENT:GLenum;readonly DEPTH_TEST:GLenum;readonly DEPTH_WRITEMASK:GLenum;readonly DITHER:GLenum;readonly DONT_CARE:GLenum;readonly DST_ALPHA:GLenum;readonly DST_COLOR:GLenum;readonly DYNAMIC_DRAW:GLenum;readonly ELEMENT_ARRAY_BUFFER:GLenum;readonly ELEMENT_ARRAY_BUFFER_BINDING:GLenum;readonly EQUAL:GLenum;readonly FASTEST:GLenum;readonly FLOAT:GLenum;readonly FLOAT_MAT2:GLenum;readonly FLOAT_MAT3:GLenum;readonly FLOAT_MAT4:GLenum;readonly FLOAT_VEC2:GLenum;readonly FLOAT_VEC3:GLenum;readonly FLOAT_VEC4:GLenum;readonly FRAGMENT_SHADER:GLenum;readonly FRAMEBUFFER:GLenum;readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:GLenum;readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:GLenum;readonly FRAMEBUFFER_BINDING:GLenum;readonly FRAMEBUFFER_COMPLETE:GLenum;readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT:GLenum;readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS:GLenum;readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:GLenum;readonly FRAMEBUFFER_UNSUPPORTED:GLenum;readonly FRONT:GLenum;readonly FRONT_AND_BACK:GLenum;readonly FRONT_FACE:GLenum;readonly FUNC_ADD:GLenum;readonly FUNC_REVERSE_SUBTRACT:GLenum;readonly FUNC_SUBTRACT:GLenum;readonly GENERATE_MIPMAP_HINT:GLenum;readonly GEQUAL:GLenum;readonly GREATER:GLenum;readonly GREEN_BITS:GLenum;readonly HIGH_FLOAT:GLenum;readonly HIGH_INT:GLenum;readonly IMPLEMENTATION_COLOR_READ_FORMAT:GLenum;readonly IMPLEMENTATION_COLOR_READ_TYPE:GLenum;readonly INCR:GLenum;readonly INCR_WRAP:GLenum;readonly INT:GLenum;readonly INT_VEC2:GLenum;readonly INT_VEC3:GLenum;readonly INT_VEC4:GLenum;readonly INVALID_ENUM:GLenum;readonly INVALID_FRAMEBUFFER_OPERATION:GLenum;readonly INVALID_OPERATION:GLenum;readonly INVALID_VALUE:GLenum;readonly INVERT:GLenum;readonly KEEP:GLenum;readonly LEQUAL:GLenum;readonly LESS:GLenum;readonly LINEAR:GLenum;readonly LINEAR_MIPMAP_LINEAR:GLenum;readonly LINEAR_MIPMAP_NEAREST:GLenum;readonly LINES:GLenum;readonly LINE_LOOP:GLenum;readonly LINE_STRIP:GLenum;readonly LINE_WIDTH:GLenum;readonly LINK_STATUS:GLenum;readonly LOW_FLOAT:GLenum;readonly LOW_INT:GLenum;readonly LUMINANCE:GLenum;readonly LUMINANCE_ALPHA:GLenum;readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_CUBE_MAP_TEXTURE_SIZE:GLenum;readonly MAX_FRAGMENT_UNIFORM_VECTORS:GLenum;readonly MAX_RENDERBUFFER_SIZE:GLenum;readonly MAX_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_TEXTURE_SIZE:GLenum;readonly MAX_VARYING_VECTORS:GLenum;readonly MAX_VERTEX_ATTRIBS:GLenum;readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_VERTEX_UNIFORM_VECTORS:GLenum;readonly MAX_VIEWPORT_DIMS:GLenum;readonly MEDIUM_FLOAT:GLenum;readonly MEDIUM_INT:GLenum;readonly MIRRORED_REPEAT:GLenum;readonly NEAREST:GLenum;readonly NEAREST_MIPMAP_LINEAR:GLenum;readonly NEAREST_MIPMAP_NEAREST:GLenum;readonly NEVER:GLenum;readonly NICEST:GLenum;readonly NONE:GLenum;readonly NOTEQUAL:GLenum;readonly NO_ERROR:GLenum;readonly ONE:GLenum;readonly ONE_MINUS_CONSTANT_ALPHA:GLenum;readonly ONE_MINUS_CONSTANT_COLOR:GLenum;readonly ONE_MINUS_DST_ALPHA:GLenum;readonly ONE_MINUS_DST_COLOR:GLenum;readonly ONE_MINUS_SRC_ALPHA:GLenum;readonly ONE_MINUS_SRC_COLOR:GLenum;readonly OUT_OF_MEMORY:GLenum;readonly PACK_ALIGNMENT:GLenum;readonly POINTS:GLenum;readonly POLYGON_OFFSET_FACTOR:GLenum;readonly POLYGON_OFFSET_FILL:GLenum;readonly POLYGON_OFFSET_UNITS:GLenum;readonly RED_BITS:GLenum;readonly RENDERBUFFER:GLenum;readonly RENDERBUFFER_ALPHA_SIZE:GLenum;readonly RENDERBUFFER_BINDING:GLenum;readonly RENDERBUFFER_BLUE_SIZE:GLenum;readonly RENDERBUFFER_DEPTH_SIZE:GLenum;readonly RENDERBUFFER_GREEN_SIZE:GLenum;readonly RENDERBUFFER_HEIGHT:GLenum;readonly RENDERBUFFER_INTERNAL_FORMAT:GLenum;readonly RENDERBUFFER_RED_SIZE:GLenum;readonly RENDERBUFFER_STENCIL_SIZE:GLenum;readonly RENDERBUFFER_WIDTH:GLenum;readonly RENDERER:GLenum;readonly REPEAT:GLenum;readonly REPLACE:GLenum;readonly RGB:GLenum;readonly RGB565:GLenum;readonly RGB5_A1:GLenum;readonly RGBA:GLenum;readonly RGBA4:GLenum;readonly SAMPLER_2D:GLenum;readonly SAMPLER_CUBE:GLenum;readonly SAMPLES:GLenum;readonly SAMPLE_ALPHA_TO_COVERAGE:GLenum;readonly SAMPLE_BUFFERS:GLenum;readonly SAMPLE_COVERAGE:GLenum;readonly SAMPLE_COVERAGE_INVERT:GLenum;readonly SAMPLE_COVERAGE_VALUE:GLenum;readonly SCISSOR_BOX:GLenum;readonly SCISSOR_TEST:GLenum;readonly SHADER_TYPE:GLenum;readonly SHADING_LANGUAGE_VERSION:GLenum;readonly SHORT:GLenum;readonly SRC_ALPHA:GLenum;readonly SRC_ALPHA_SATURATE:GLenum;readonly SRC_COLOR:GLenum;readonly STATIC_DRAW:GLenum;readonly STENCIL_ATTACHMENT:GLenum;readonly STENCIL_BACK_FAIL:GLenum;readonly STENCIL_BACK_FUNC:GLenum;readonly STENCIL_BACK_PASS_DEPTH_FAIL:GLenum;readonly STENCIL_BACK_PASS_DEPTH_PASS:GLenum;readonly STENCIL_BACK_REF:GLenum;readonly STENCIL_BACK_VALUE_MASK:GLenum;readonly STENCIL_BACK_WRITEMASK:GLenum;readonly STENCIL_BITS:GLenum;readonly STENCIL_BUFFER_BIT:GLenum;readonly STENCIL_CLEAR_VALUE:GLenum;readonly STENCIL_FAIL:GLenum;readonly STENCIL_FUNC:GLenum;readonly STENCIL_INDEX8:GLenum;readonly STENCIL_PASS_DEPTH_FAIL:GLenum;readonly STENCIL_PASS_DEPTH_PASS:GLenum;readonly STENCIL_REF:GLenum;readonly STENCIL_TEST:GLenum;readonly STENCIL_VALUE_MASK:GLenum;readonly STENCIL_WRITEMASK:GLenum;readonly STREAM_DRAW:GLenum;readonly SUBPIXEL_BITS:GLenum;readonly TEXTURE:GLenum;readonly TEXTURE0:GLenum;readonly TEXTURE1:GLenum;readonly TEXTURE10:GLenum;readonly TEXTURE11:GLenum;readonly TEXTURE12:GLenum;readonly TEXTURE13:GLenum;readonly TEXTURE14:GLenum;readonly TEXTURE15:GLenum;readonly TEXTURE16:GLenum;readonly TEXTURE17:GLenum;readonly TEXTURE18:GLenum;readonly TEXTURE19:GLenum;readonly TEXTURE2:GLenum;readonly TEXTURE20:GLenum;readonly TEXTURE21:GLenum;readonly TEXTURE22:GLenum;readonly TEXTURE23:GLenum;readonly TEXTURE24:GLenum;readonly TEXTURE25:GLenum;readonly TEXTURE26:GLenum;readonly TEXTURE27:GLenum;readonly TEXTURE28:GLenum;readonly TEXTURE29:GLenum;readonly TEXTURE3:GLenum;readonly TEXTURE30:GLenum;readonly TEXTURE31:GLenum;readonly TEXTURE4:GLenum;readonly TEXTURE5:GLenum;readonly TEXTURE6:GLenum;readonly TEXTURE7:GLenum;readonly TEXTURE8:GLenum;readonly TEXTURE9:GLenum;readonly TEXTURE_2D:GLenum;readonly TEXTURE_BINDING_2D:GLenum;readonly TEXTURE_BINDING_CUBE_MAP:GLenum;readonly TEXTURE_CUBE_MAP:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_X:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_Y:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_Z:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_X:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_Y:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_Z:GLenum;readonly TEXTURE_MAG_FILTER:GLenum;readonly TEXTURE_MIN_FILTER:GLenum;readonly TEXTURE_WRAP_S:GLenum;readonly TEXTURE_WRAP_T:GLenum;readonly TRIANGLES:GLenum;readonly TRIANGLE_FAN:GLenum;readonly TRIANGLE_STRIP:GLenum;readonly UNPACK_ALIGNMENT:GLenum;readonly UNPACK_COLORSPACE_CONVERSION_WEBGL:GLenum;readonly UNPACK_FLIP_Y_WEBGL:GLenum;readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL:GLenum;readonly UNSIGNED_BYTE:GLenum;readonly UNSIGNED_INT:GLenum;readonly UNSIGNED_SHORT:GLenum;readonly UNSIGNED_SHORT_4_4_4_4:GLenum;readonly UNSIGNED_SHORT_5_5_5_1:GLenum;readonly UNSIGNED_SHORT_5_6_5:GLenum;readonly VALIDATE_STATUS:GLenum;readonly VENDOR:GLenum;readonly VERSION:GLenum;readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:GLenum;readonly VERTEX_ATTRIB_ARRAY_ENABLED:GLenum;readonly VERTEX_ATTRIB_ARRAY_NORMALIZED:GLenum;readonly VERTEX_ATTRIB_ARRAY_POINTER:GLenum;readonly VERTEX_ATTRIB_ARRAY_SIZE:GLenum;readonly VERTEX_ATTRIB_ARRAY_STRIDE:GLenum;readonly VERTEX_ATTRIB_ARRAY_TYPE:GLenum;readonly VERTEX_SHADER:GLenum;readonly VIEWPORT:GLenum;readonly ZERO:GLenum;};interface WebGLRenderingContextBase{readonly drawingBufferHeight:GLsizei;readonly drawingBufferWidth:GLsizei;activeTexture(texture:GLenum):void;attachShader(program:WebGLProgram,shader:WebGLShader):void;bindAttribLocation(program:WebGLProgram,index:GLuint,name:string):void;bindBuffer(target:GLenum,buffer:WebGLBuffer|null):void;bindFramebuffer(target:GLenum,framebuffer:WebGLFramebuffer|null):void;bindRenderbuffer(target:GLenum,renderbuffer:WebGLRenderbuffer|null):void;bindTexture(target:GLenum,texture:WebGLTexture|null):void;blendColor(red:GLclampf,green:GLclampf,blue:GLclampf,alpha:GLclampf):void;blendEquation(mode:GLenum):void;blendEquationSeparate(modeRGB:GLenum,modeAlpha:GLenum):void;blendFunc(sfactor:GLenum,dfactor:GLenum):void;blendFuncSeparate(srcRGB:GLenum,dstRGB:GLenum,srcAlpha:GLenum,dstAlpha:GLenum):void;checkFramebufferStatus(target:GLenum):GLenum;clear(mask:GLbitfield):void;clearColor(red:GLclampf,green:GLclampf,blue:GLclampf,alpha:GLclampf):void;clearDepth(depth:GLclampf):void;clearStencil(s:GLint):void;colorMask(red:GLboolean,green:GLboolean,blue:GLboolean,alpha:GLboolean):void;compileShader(shader:WebGLShader):void;copyTexImage2D(target:GLenum,level:GLint,internalformat:GLenum,x:GLint,y:GLint,width:GLsizei,height:GLsizei,border:GLint):void;copyTexSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,x:GLint,y:GLint,width:GLsizei,height:GLsizei):void;createBuffer():WebGLBuffer|null;createFramebuffer():WebGLFramebuffer|null;createProgram():WebGLProgram|null;createRenderbuffer():WebGLRenderbuffer|null;createShader(type:GLenum):WebGLShader|null;createTexture():WebGLTexture|null;cullFace(mode:GLenum):void;deleteBuffer(buffer:WebGLBuffer|null):void;deleteFramebuffer(framebuffer:WebGLFramebuffer|null):void;deleteProgram(program:WebGLProgram|null):void;deleteRenderbuffer(renderbuffer:WebGLRenderbuffer|null):void;deleteShader(shader:WebGLShader|null):void;deleteTexture(texture:WebGLTexture|null):void;depthFunc(func:GLenum):void;depthMask(flag:GLboolean):void;depthRange(zNear:GLclampf,zFar:GLclampf):void;detachShader(program:WebGLProgram,shader:WebGLShader):void;disable(cap:GLenum):void;disableVertexAttribArray(index:GLuint):void;drawArrays(mode:GLenum,first:GLint,count:GLsizei):void;drawElements(mode:GLenum,count:GLsizei,type:GLenum,offset:GLintptr):void;enable(cap:GLenum):void;enableVertexAttribArray(index:GLuint):void;finish():void;flush():void;framebufferRenderbuffer(target:GLenum,attachment:GLenum,renderbuffertarget:GLenum,renderbuffer:WebGLRenderbuffer|null):void;framebufferTexture2D(target:GLenum,attachment:GLenum,textarget:GLenum,texture:WebGLTexture|null,level:GLint):void;frontFace(mode:GLenum):void;generateMipmap(target:GLenum):void;getActiveAttrib(program:WebGLProgram,index:GLuint):WebGLActiveInfo|null;getActiveUniform(program:WebGLProgram,index:GLuint):WebGLActiveInfo|null;getAttachedShaders(program:WebGLProgram):WebGLShader[]|null;getAttribLocation(program:WebGLProgram,name:string):GLint;getBufferParameter(target:GLenum,pname:GLenum):any;getContextAttributes():WebGLContextAttributes|null;getError():GLenum;getExtension(extensionName:"EXT_blend_minmax"):EXT_blend_minmax|null;getExtension(extensionName:"EXT_color_buffer_float"):EXT_color_buffer_float|null;getExtension(extensionName:"EXT_color_buffer_half_float"):EXT_color_buffer_half_float|null;getExtension(extensionName:"EXT_float_blend"):EXT_float_blend|null;getExtension(extensionName:"EXT_texture_filter_anisotropic"):EXT_texture_filter_anisotropic|null;getExtension(extensionName:"EXT_frag_depth"):EXT_frag_depth|null;getExtension(extensionName:"EXT_shader_texture_lod"):EXT_shader_texture_lod|null;getExtension(extensionName:"EXT_sRGB"):EXT_sRGB|null;getExtension(extensionName:"KHR_parallel_shader_compile"):KHR_parallel_shader_compile|null;getExtension(extensionName:"OES_vertex_array_object"):OES_vertex_array_object|null;getExtension(extensionName:"OVR_multiview2"):OVR_multiview2|null;getExtension(extensionName:"WEBGL_color_buffer_float"):WEBGL_color_buffer_float|null;getExtension(extensionName:"WEBGL_compressed_texture_astc"):WEBGL_compressed_texture_astc|null;getExtension(extensionName:"WEBGL_compressed_texture_etc"):WEBGL_compressed_texture_etc|null;getExtension(extensionName:"WEBGL_compressed_texture_etc1"):WEBGL_compressed_texture_etc1|null;getExtension(extensionName:"WEBGL_compressed_texture_s3tc_srgb"):WEBGL_compressed_texture_s3tc_srgb|null;getExtension(extensionName:"WEBGL_debug_shaders"):WEBGL_debug_shaders|null;getExtension(extensionName:"WEBGL_draw_buffers"):WEBGL_draw_buffers|null;getExtension(extensionName:"WEBGL_lose_context"):WEBGL_lose_context|null;getExtension(extensionName:"WEBGL_depth_texture"):WEBGL_depth_texture|null;getExtension(extensionName:"WEBGL_debug_renderer_info"):WEBGL_debug_renderer_info|null;getExtension(extensionName:"WEBGL_compressed_texture_s3tc"):WEBGL_compressed_texture_s3tc|null;getExtension(extensionName:"OES_texture_half_float_linear"):OES_texture_half_float_linear|null;getExtension(extensionName:"OES_texture_half_float"):OES_texture_half_float|null;getExtension(extensionName:"OES_texture_float_linear"):OES_texture_float_linear|null;getExtension(extensionName:"OES_texture_float"):OES_texture_float|null;getExtension(extensionName:"OES_standard_derivatives"):OES_standard_derivatives|null;getExtension(extensionName:"OES_element_index_uint"):OES_element_index_uint|null;getExtension(extensionName:"ANGLE_instanced_arrays"):ANGLE_instanced_arrays|null;getExtension(name:string):any;getFramebufferAttachmentParameter(target:GLenum,attachment:GLenum,pname:GLenum):any;getParameter(pname:GLenum):any;getProgramInfoLog(program:WebGLProgram):string|null;getProgramParameter(program:WebGLProgram,pname:GLenum):any;getRenderbufferParameter(target:GLenum,pname:GLenum):any;getShaderInfoLog(shader:WebGLShader):string|null;getShaderParameter(shader:WebGLShader,pname:GLenum):any;getShaderPrecisionFormat(shadertype:GLenum,precisiontype:GLenum):WebGLShaderPrecisionFormat|null;getShaderSource(shader:WebGLShader):string|null;getSupportedExtensions():string[]|null;getTexParameter(target:GLenum,pname:GLenum):any;getUniform(program:WebGLProgram,location:WebGLUniformLocation):any;getUniformLocation(program:WebGLProgram,name:string):WebGLUniformLocation|null;getVertexAttrib(index:GLuint,pname:GLenum):any;getVertexAttribOffset(index:GLuint,pname:GLenum):GLintptr;hint(target:GLenum,mode:GLenum):void;isBuffer(buffer:WebGLBuffer|null):GLboolean;isContextLost():boolean;isEnabled(cap:GLenum):GLboolean;isFramebuffer(framebuffer:WebGLFramebuffer|null):GLboolean;isProgram(program:WebGLProgram|null):GLboolean;isRenderbuffer(renderbuffer:WebGLRenderbuffer|null):GLboolean;isShader(shader:WebGLShader|null):GLboolean;isTexture(texture:WebGLTexture|null):GLboolean;lineWidth(width:GLfloat):void;linkProgram(program:WebGLProgram):void;pixelStorei(pname:GLenum,param:GLint|GLboolean):void;polygonOffset(factor:GLfloat,units:GLfloat):void;renderbufferStorage(target:GLenum,internalformat:GLenum,width:GLsizei,height:GLsizei):void;sampleCoverage(value:GLclampf,invert:GLboolean):void;scissor(x:GLint,y:GLint,width:GLsizei,height:GLsizei):void;shaderSource(shader:WebGLShader,source:string):void;stencilFunc(func:GLenum,ref:GLint,mask:GLuint):void;stencilFuncSeparate(face:GLenum,func:GLenum,ref:GLint,mask:GLuint):void;stencilMask(mask:GLuint):void;stencilMaskSeparate(face:GLenum,mask:GLuint):void;stencilOp(fail:GLenum,zfail:GLenum,zpass:GLenum):void;stencilOpSeparate(face:GLenum,fail:GLenum,zfail:GLenum,zpass:GLenum):void;texParameterf(target:GLenum,pname:GLenum,param:GLfloat):void;texParameteri(target:GLenum,pname:GLenum,param:GLint):void;uniform1f(location:WebGLUniformLocation|null,x:GLfloat):void;uniform1i(location:WebGLUniformLocation|null,x:GLint):void;uniform2f(location:WebGLUniformLocation|null,x:GLfloat,y:GLfloat):void;uniform2i(location:WebGLUniformLocation|null,x:GLint,y:GLint):void;uniform3f(location:WebGLUniformLocation|null,x:GLfloat,y:GLfloat,z:GLfloat):void;uniform3i(location:WebGLUniformLocation|null,x:GLint,y:GLint,z:GLint):void;uniform4f(location:WebGLUniformLocation|null,x:GLfloat,y:GLfloat,z:GLfloat,w:GLfloat):void;uniform4i(location:WebGLUniformLocation|null,x:GLint,y:GLint,z:GLint,w:GLint):void;useProgram(program:WebGLProgram|null):void;validateProgram(program:WebGLProgram):void;vertexAttrib1f(index:GLuint,x:GLfloat):void;vertexAttrib1fv(index:GLuint,values:Float32List):void;vertexAttrib2f(index:GLuint,x:GLfloat,y:GLfloat):void;vertexAttrib2fv(index:GLuint,values:Float32List):void;vertexAttrib3f(index:GLuint,x:GLfloat,y:GLfloat,z:GLfloat):void;vertexAttrib3fv(index:GLuint,values:Float32List):void;vertexAttrib4f(index:GLuint,x:GLfloat,y:GLfloat,z:GLfloat,w:GLfloat):void;vertexAttrib4fv(index:GLuint,values:Float32List):void;vertexAttribPointer(index:GLuint,size:GLint,type:GLenum,normalized:GLboolean,stride:GLsizei,offset:GLintptr):void;viewport(x:GLint,y:GLint,width:GLsizei,height:GLsizei):void;readonly ACTIVE_ATTRIBUTES:GLenum;readonly ACTIVE_TEXTURE:GLenum;readonly ACTIVE_UNIFORMS:GLenum;readonly ALIASED_LINE_WIDTH_RANGE:GLenum;readonly ALIASED_POINT_SIZE_RANGE:GLenum;readonly ALPHA:GLenum;readonly ALPHA_BITS:GLenum;readonly ALWAYS:GLenum;readonly ARRAY_BUFFER:GLenum;readonly ARRAY_BUFFER_BINDING:GLenum;readonly ATTACHED_SHADERS:GLenum;readonly BACK:GLenum;readonly BLEND:GLenum;readonly BLEND_COLOR:GLenum;readonly BLEND_DST_ALPHA:GLenum;readonly BLEND_DST_RGB:GLenum;readonly BLEND_EQUATION:GLenum;readonly BLEND_EQUATION_ALPHA:GLenum;readonly BLEND_EQUATION_RGB:GLenum;readonly BLEND_SRC_ALPHA:GLenum;readonly BLEND_SRC_RGB:GLenum;readonly BLUE_BITS:GLenum;readonly BOOL:GLenum;readonly BOOL_VEC2:GLenum;readonly BOOL_VEC3:GLenum;readonly BOOL_VEC4:GLenum;readonly BROWSER_DEFAULT_WEBGL:GLenum;readonly BUFFER_SIZE:GLenum;readonly BUFFER_USAGE:GLenum;readonly BYTE:GLenum;readonly CCW:GLenum;readonly CLAMP_TO_EDGE:GLenum;readonly COLOR_ATTACHMENT0:GLenum;readonly COLOR_BUFFER_BIT:GLenum;readonly COLOR_CLEAR_VALUE:GLenum;readonly COLOR_WRITEMASK:GLenum;readonly COMPILE_STATUS:GLenum;readonly COMPRESSED_TEXTURE_FORMATS:GLenum;readonly CONSTANT_ALPHA:GLenum;readonly CONSTANT_COLOR:GLenum;readonly CONTEXT_LOST_WEBGL:GLenum;readonly CULL_FACE:GLenum;readonly CULL_FACE_MODE:GLenum;readonly CURRENT_PROGRAM:GLenum;readonly CURRENT_VERTEX_ATTRIB:GLenum;readonly CW:GLenum;readonly DECR:GLenum;readonly DECR_WRAP:GLenum;readonly DELETE_STATUS:GLenum;readonly DEPTH_ATTACHMENT:GLenum;readonly DEPTH_BITS:GLenum;readonly DEPTH_BUFFER_BIT:GLenum;readonly DEPTH_CLEAR_VALUE:GLenum;readonly DEPTH_COMPONENT:GLenum;readonly DEPTH_COMPONENT16:GLenum;readonly DEPTH_FUNC:GLenum;readonly DEPTH_RANGE:GLenum;readonly DEPTH_STENCIL:GLenum;readonly DEPTH_STENCIL_ATTACHMENT:GLenum;readonly DEPTH_TEST:GLenum;readonly DEPTH_WRITEMASK:GLenum;readonly DITHER:GLenum;readonly DONT_CARE:GLenum;readonly DST_ALPHA:GLenum;readonly DST_COLOR:GLenum;readonly DYNAMIC_DRAW:GLenum;readonly ELEMENT_ARRAY_BUFFER:GLenum;readonly ELEMENT_ARRAY_BUFFER_BINDING:GLenum;readonly EQUAL:GLenum;readonly FASTEST:GLenum;readonly FLOAT:GLenum;readonly FLOAT_MAT2:GLenum;readonly FLOAT_MAT3:GLenum;readonly FLOAT_MAT4:GLenum;readonly FLOAT_VEC2:GLenum;readonly FLOAT_VEC3:GLenum;readonly FLOAT_VEC4:GLenum;readonly FRAGMENT_SHADER:GLenum;readonly FRAMEBUFFER:GLenum;readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:GLenum;readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:GLenum;readonly FRAMEBUFFER_BINDING:GLenum;readonly FRAMEBUFFER_COMPLETE:GLenum;readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT:GLenum;readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS:GLenum;readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:GLenum;readonly FRAMEBUFFER_UNSUPPORTED:GLenum;readonly FRONT:GLenum;readonly FRONT_AND_BACK:GLenum;readonly FRONT_FACE:GLenum;readonly FUNC_ADD:GLenum;readonly FUNC_REVERSE_SUBTRACT:GLenum;readonly FUNC_SUBTRACT:GLenum;readonly GENERATE_MIPMAP_HINT:GLenum;readonly GEQUAL:GLenum;readonly GREATER:GLenum;readonly GREEN_BITS:GLenum;readonly HIGH_FLOAT:GLenum;readonly HIGH_INT:GLenum;readonly IMPLEMENTATION_COLOR_READ_FORMAT:GLenum;readonly IMPLEMENTATION_COLOR_READ_TYPE:GLenum;readonly INCR:GLenum;readonly INCR_WRAP:GLenum;readonly INT:GLenum;readonly INT_VEC2:GLenum;readonly INT_VEC3:GLenum;readonly INT_VEC4:GLenum;readonly INVALID_ENUM:GLenum;readonly INVALID_FRAMEBUFFER_OPERATION:GLenum;readonly INVALID_OPERATION:GLenum;readonly INVALID_VALUE:GLenum;readonly INVERT:GLenum;readonly KEEP:GLenum;readonly LEQUAL:GLenum;readonly LESS:GLenum;readonly LINEAR:GLenum;readonly LINEAR_MIPMAP_LINEAR:GLenum;readonly LINEAR_MIPMAP_NEAREST:GLenum;readonly LINES:GLenum;readonly LINE_LOOP:GLenum;readonly LINE_STRIP:GLenum;readonly LINE_WIDTH:GLenum;readonly LINK_STATUS:GLenum;readonly LOW_FLOAT:GLenum;readonly LOW_INT:GLenum;readonly LUMINANCE:GLenum;readonly LUMINANCE_ALPHA:GLenum;readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_CUBE_MAP_TEXTURE_SIZE:GLenum;readonly MAX_FRAGMENT_UNIFORM_VECTORS:GLenum;readonly MAX_RENDERBUFFER_SIZE:GLenum;readonly MAX_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_TEXTURE_SIZE:GLenum;readonly MAX_VARYING_VECTORS:GLenum;readonly MAX_VERTEX_ATTRIBS:GLenum;readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_VERTEX_UNIFORM_VECTORS:GLenum;readonly MAX_VIEWPORT_DIMS:GLenum;readonly MEDIUM_FLOAT:GLenum;readonly MEDIUM_INT:GLenum;readonly MIRRORED_REPEAT:GLenum;readonly NEAREST:GLenum;readonly NEAREST_MIPMAP_LINEAR:GLenum;readonly NEAREST_MIPMAP_NEAREST:GLenum;readonly NEVER:GLenum;readonly NICEST:GLenum;readonly NONE:GLenum;readonly NOTEQUAL:GLenum;readonly NO_ERROR:GLenum;readonly ONE:GLenum;readonly ONE_MINUS_CONSTANT_ALPHA:GLenum;readonly ONE_MINUS_CONSTANT_COLOR:GLenum;readonly ONE_MINUS_DST_ALPHA:GLenum;readonly ONE_MINUS_DST_COLOR:GLenum;readonly ONE_MINUS_SRC_ALPHA:GLenum;readonly ONE_MINUS_SRC_COLOR:GLenum;readonly OUT_OF_MEMORY:GLenum;readonly PACK_ALIGNMENT:GLenum;readonly POINTS:GLenum;readonly POLYGON_OFFSET_FACTOR:GLenum;readonly POLYGON_OFFSET_FILL:GLenum;readonly POLYGON_OFFSET_UNITS:GLenum;readonly RED_BITS:GLenum;readonly RENDERBUFFER:GLenum;readonly RENDERBUFFER_ALPHA_SIZE:GLenum;readonly RENDERBUFFER_BINDING:GLenum;readonly RENDERBUFFER_BLUE_SIZE:GLenum;readonly RENDERBUFFER_DEPTH_SIZE:GLenum;readonly RENDERBUFFER_GREEN_SIZE:GLenum;readonly RENDERBUFFER_HEIGHT:GLenum;readonly RENDERBUFFER_INTERNAL_FORMAT:GLenum;readonly RENDERBUFFER_RED_SIZE:GLenum;readonly RENDERBUFFER_STENCIL_SIZE:GLenum;readonly RENDERBUFFER_WIDTH:GLenum;readonly RENDERER:GLenum;readonly REPEAT:GLenum;readonly REPLACE:GLenum;readonly RGB:GLenum;readonly RGB565:GLenum;readonly RGB5_A1:GLenum;readonly RGBA:GLenum;readonly RGBA4:GLenum;readonly SAMPLER_2D:GLenum;readonly SAMPLER_CUBE:GLenum;readonly SAMPLES:GLenum;readonly SAMPLE_ALPHA_TO_COVERAGE:GLenum;readonly SAMPLE_BUFFERS:GLenum;readonly SAMPLE_COVERAGE:GLenum;readonly SAMPLE_COVERAGE_INVERT:GLenum;readonly SAMPLE_COVERAGE_VALUE:GLenum;readonly SCISSOR_BOX:GLenum;readonly SCISSOR_TEST:GLenum;readonly SHADER_TYPE:GLenum;readonly SHADING_LANGUAGE_VERSION:GLenum;readonly SHORT:GLenum;readonly SRC_ALPHA:GLenum;readonly SRC_ALPHA_SATURATE:GLenum;readonly SRC_COLOR:GLenum;readonly STATIC_DRAW:GLenum;readonly STENCIL_ATTACHMENT:GLenum;readonly STENCIL_BACK_FAIL:GLenum;readonly STENCIL_BACK_FUNC:GLenum;readonly STENCIL_BACK_PASS_DEPTH_FAIL:GLenum;readonly STENCIL_BACK_PASS_DEPTH_PASS:GLenum;readonly STENCIL_BACK_REF:GLenum;readonly STENCIL_BACK_VALUE_MASK:GLenum;readonly STENCIL_BACK_WRITEMASK:GLenum;readonly STENCIL_BITS:GLenum;readonly STENCIL_BUFFER_BIT:GLenum;readonly STENCIL_CLEAR_VALUE:GLenum;readonly STENCIL_FAIL:GLenum;readonly STENCIL_FUNC:GLenum;readonly STENCIL_INDEX8:GLenum;readonly STENCIL_PASS_DEPTH_FAIL:GLenum;readonly STENCIL_PASS_DEPTH_PASS:GLenum;readonly STENCIL_REF:GLenum;readonly STENCIL_TEST:GLenum;readonly STENCIL_VALUE_MASK:GLenum;readonly STENCIL_WRITEMASK:GLenum;readonly STREAM_DRAW:GLenum;readonly SUBPIXEL_BITS:GLenum;readonly TEXTURE:GLenum;readonly TEXTURE0:GLenum;readonly TEXTURE1:GLenum;readonly TEXTURE10:GLenum;readonly TEXTURE11:GLenum;readonly TEXTURE12:GLenum;readonly TEXTURE13:GLenum;readonly TEXTURE14:GLenum;readonly TEXTURE15:GLenum;readonly TEXTURE16:GLenum;readonly TEXTURE17:GLenum;readonly TEXTURE18:GLenum;readonly TEXTURE19:GLenum;readonly TEXTURE2:GLenum;readonly TEXTURE20:GLenum;readonly TEXTURE21:GLenum;readonly TEXTURE22:GLenum;readonly TEXTURE23:GLenum;readonly TEXTURE24:GLenum;readonly TEXTURE25:GLenum;readonly TEXTURE26:GLenum;readonly TEXTURE27:GLenum;readonly TEXTURE28:GLenum;readonly TEXTURE29:GLenum;readonly TEXTURE3:GLenum;readonly TEXTURE30:GLenum;readonly TEXTURE31:GLenum;readonly TEXTURE4:GLenum;readonly TEXTURE5:GLenum;readonly TEXTURE6:GLenum;readonly TEXTURE7:GLenum;readonly TEXTURE8:GLenum;readonly TEXTURE9:GLenum;readonly TEXTURE_2D:GLenum;readonly TEXTURE_BINDING_2D:GLenum;readonly TEXTURE_BINDING_CUBE_MAP:GLenum;readonly TEXTURE_CUBE_MAP:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_X:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_Y:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_Z:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_X:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_Y:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_Z:GLenum;readonly TEXTURE_MAG_FILTER:GLenum;readonly TEXTURE_MIN_FILTER:GLenum;readonly TEXTURE_WRAP_S:GLenum;readonly TEXTURE_WRAP_T:GLenum;readonly TRIANGLES:GLenum;readonly TRIANGLE_FAN:GLenum;readonly TRIANGLE_STRIP:GLenum;readonly UNPACK_ALIGNMENT:GLenum;readonly UNPACK_COLORSPACE_CONVERSION_WEBGL:GLenum;readonly UNPACK_FLIP_Y_WEBGL:GLenum;readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL:GLenum;readonly UNSIGNED_BYTE:GLenum;readonly UNSIGNED_INT:GLenum;readonly UNSIGNED_SHORT:GLenum;readonly UNSIGNED_SHORT_4_4_4_4:GLenum;readonly UNSIGNED_SHORT_5_5_5_1:GLenum;readonly UNSIGNED_SHORT_5_6_5:GLenum;readonly VALIDATE_STATUS:GLenum;readonly VENDOR:GLenum;readonly VERSION:GLenum;readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:GLenum;readonly VERTEX_ATTRIB_ARRAY_ENABLED:GLenum;readonly VERTEX_ATTRIB_ARRAY_NORMALIZED:GLenum;readonly VERTEX_ATTRIB_ARRAY_POINTER:GLenum;readonly VERTEX_ATTRIB_ARRAY_SIZE:GLenum;readonly VERTEX_ATTRIB_ARRAY_STRIDE:GLenum;readonly VERTEX_ATTRIB_ARRAY_TYPE:GLenum;readonly VERTEX_SHADER:GLenum;readonly VIEWPORT:GLenum;readonly ZERO:GLenum;}interface WebGLRenderingContextOverloads{bufferData(target:GLenum,size:GLsizeiptr,usage:GLenum):void;bufferData(target:GLenum,data:BufferSource|null,usage:GLenum):void;bufferSubData(target:GLenum,offset:GLintptr,data:BufferSource):void;compressedTexImage2D(target:GLenum,level:GLint,internalformat:GLenum,width:GLsizei,height:GLsizei,border:GLint,data:ArrayBufferView):void;compressedTexSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,width:GLsizei,height:GLsizei,format:GLenum,data:ArrayBufferView):void;readPixels(x:GLint,y:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,pixels:ArrayBufferView|null):void;texImage2D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,border:GLint,format:GLenum,type:GLenum,pixels:ArrayBufferView|null):void;texImage2D(target:GLenum,level:GLint,internalformat:GLint,format:GLenum,type:GLenum,source:TexImageSource):void;texSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,pixels:ArrayBufferView|null):void;texSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,format:GLenum,type:GLenum,source:TexImageSource):void;uniform1fv(location:WebGLUniformLocation|null,v:Float32List):void;uniform1iv(location:WebGLUniformLocation|null,v:Int32List):void;uniform2fv(location:WebGLUniformLocation|null,v:Float32List):void;uniform2iv(location:WebGLUniformLocation|null,v:Int32List):void;uniform3fv(location:WebGLUniformLocation|null,v:Float32List):void;uniform3iv(location:WebGLUniformLocation|null,v:Int32List):void;uniform4fv(location:WebGLUniformLocation|null,v:Float32List):void;uniform4iv(location:WebGLUniformLocation|null,v:Int32List):void;uniformMatrix2fv(location:WebGLUniformLocation|null,transpose:GLboolean,value:Float32List):void;uniformMatrix3fv(location:WebGLUniformLocation|null,transpose:GLboolean,value:Float32List):void;uniformMatrix4fv(location:WebGLUniformLocation|null,transpose:GLboolean,value:Float32List):void;}interface WebGLSampler{}declare var WebGLSampler:{prototype:WebGLSampler;new():WebGLSampler;};interface WebGLShader{}declare var WebGLShader:{prototype:WebGLShader;new():WebGLShader;};interface WebGLShaderPrecisionFormat{readonly precision:GLint;readonly rangeMax:GLint;readonly rangeMin:GLint;}declare var WebGLShaderPrecisionFormat:{prototype:WebGLShaderPrecisionFormat;new():WebGLShaderPrecisionFormat;};interface WebGLSync{}declare var WebGLSync:{prototype:WebGLSync;new():WebGLSync;};interface WebGLTexture{}declare var WebGLTexture:{prototype:WebGLTexture;new():WebGLTexture;};interface WebGLTransformFeedback{}declare var WebGLTransformFeedback:{prototype:WebGLTransformFeedback;new():WebGLTransformFeedback;};interface WebGLUniformLocation{}declare var WebGLUniformLocation:{prototype:WebGLUniformLocation;new():WebGLUniformLocation;};interface WebGLVertexArrayObject{}declare var WebGLVertexArrayObject:{prototype:WebGLVertexArrayObject;new():WebGLVertexArrayObject;};interface WebGLVertexArrayObjectOES{}interface WebSocketEventMap{"close":CloseEvent;"error":Event;"message":MessageEvent;"open":Event;}interface WebSocket extends EventTarget{binaryType:BinaryType;readonly bufferedAmount:number;readonly extensions:string;onclose:((this:WebSocket,ev:CloseEvent)=>any)|null;onerror:((this:WebSocket,ev:Event)=>any)|null;onmessage:((this:WebSocket,ev:MessageEvent)=>any)|null;onopen:((this:WebSocket,ev:Event)=>any)|null;readonly protocol:string;readonly readyState:number;readonly url:string;close(code?:number,reason?:string):void;send(data:string|ArrayBufferLike|Blob|ArrayBufferView):void;readonly CLOSED:number;readonly CLOSING:number;readonly CONNECTING:number;readonly OPEN:number;addEventListener<K extends keyof WebSocketEventMap>(type:K,listener:(this:WebSocket,ev:WebSocketEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof WebSocketEventMap>(type:K,listener:(this:WebSocket,ev:WebSocketEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var WebSocket:{prototype:WebSocket;new(url:string|URL,protocols?:string|string[]):WebSocket;readonly CLOSED:number;readonly CLOSING:number;readonly CONNECTING:number;readonly OPEN:number;};interface WindowClient extends Client{readonly focused:boolean;readonly visibilityState:DocumentVisibilityState;focus():Promise<WindowClient>;navigate(url:string|URL):Promise<WindowClient|null>;}declare var WindowClient:{prototype:WindowClient;new():WindowClient;};interface WindowOrWorkerGlobalScope{readonly caches:CacheStorage;readonly crossOriginIsolated:boolean;readonly crypto:Crypto;readonly indexedDB:IDBFactory;readonly isSecureContext:boolean;readonly origin:string;readonly performance:Performance;atob(data:string):string;btoa(data:string):string;clearInterval(id?:number):void;clearTimeout(id?:number):void;createImageBitmap(image:ImageBitmapSource,options?:ImageBitmapOptions):Promise<ImageBitmap>;createImageBitmap(image:ImageBitmapSource,sx:number,sy:number,sw:number,sh:number,options?:ImageBitmapOptions):Promise<ImageBitmap>;fetch(input:RequestInfo|URL,init?:RequestInit):Promise<Response>;queueMicrotask(callback:VoidFunction):void;reportError(e:any):void;setInterval(handler:TimerHandler,timeout?:number,...arguments:any[]):number;setTimeout(handler:TimerHandler,timeout?:number,...arguments:any[]):number;structuredClone(value:any,options?:StructuredSerializeOptions):any;}interface WorkerEventMap extends AbstractWorkerEventMap{"message":MessageEvent;"messageerror":MessageEvent;}interface Worker extends EventTarget,AbstractWorker{onmessage:((this:Worker,ev:MessageEvent)=>any)|null;onmessageerror:((this:Worker,ev:MessageEvent)=>any)|null;postMessage(message:any,transfer:Transferable[]):void;postMessage(message:any,options?:StructuredSerializeOptions):void;terminate():void;addEventListener<K extends keyof WorkerEventMap>(type:K,listener:(this:Worker,ev:WorkerEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof WorkerEventMap>(type:K,listener:(this:Worker,ev:WorkerEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var Worker:{prototype:Worker;new(scriptURL:string|URL,options?:WorkerOptions):Worker;};interface WorkerGlobalScopeEventMap{"error":ErrorEvent;"languagechange":Event;"offline":Event;"online":Event;"rejectionhandled":PromiseRejectionEvent;"unhandledrejection":PromiseRejectionEvent;}interface WorkerGlobalScope extends EventTarget,FontFaceSource,WindowOrWorkerGlobalScope{readonly location:WorkerLocation;readonly navigator:WorkerNavigator;onerror:((this:WorkerGlobalScope,ev:ErrorEvent)=>any)|null;onlanguagechange:((this:WorkerGlobalScope,ev:Event)=>any)|null;onoffline:((this:WorkerGlobalScope,ev:Event)=>any)|null;ononline:((this:WorkerGlobalScope,ev:Event)=>any)|null;onrejectionhandled:((this:WorkerGlobalScope,ev:PromiseRejectionEvent)=>any)|null;onunhandledrejection:((this:WorkerGlobalScope,ev:PromiseRejectionEvent)=>any)|null;readonly self:WorkerGlobalScope&typeof globalThis;importScripts(...urls:(string|URL)[]):void;addEventListener<K extends keyof WorkerGlobalScopeEventMap>(type:K,listener:(this:WorkerGlobalScope,ev:WorkerGlobalScopeEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof WorkerGlobalScopeEventMap>(type:K,listener:(this:WorkerGlobalScope,ev:WorkerGlobalScopeEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var WorkerGlobalScope:{prototype:WorkerGlobalScope;new():WorkerGlobalScope;};interface WorkerLocation{readonly hash:string;readonly host:string;readonly hostname:string;readonly href:string;toString():string;readonly origin:string;readonly pathname:string;readonly port:string;readonly protocol:string;readonly search:string;}declare var WorkerLocation:{prototype:WorkerLocation;new():WorkerLocation;};interface WorkerNavigator extends NavigatorConcurrentHardware,NavigatorID,NavigatorLanguage,NavigatorLocks,NavigatorNetworkInformation,NavigatorOnLine,NavigatorStorage{readonly mediaCapabilities:MediaCapabilities;}declare var WorkerNavigator:{prototype:WorkerNavigator;new():WorkerNavigator;};interface WritableStream<W=any>{readonly locked:boolean;abort(reason?:any):Promise<void>;close():Promise<void>;getWriter():WritableStreamDefaultWriter<W>;}declare var WritableStream:{prototype:WritableStream;new<W=any>(underlyingSink?:UnderlyingSink<W>,strategy?:QueuingStrategy<W>):WritableStream<W>;};interface WritableStreamDefaultController{error(e?:any):void;}declare var WritableStreamDefaultController:{prototype:WritableStreamDefaultController;new():WritableStreamDefaultController;};interface WritableStreamDefaultWriter<W=any>{readonly closed:Promise<undefined>;readonly desiredSize:number|null;readonly ready:Promise<undefined>;abort(reason?:any):Promise<void>;close():Promise<void>;releaseLock():void;write(chunk?:W):Promise<void>;}declare var WritableStreamDefaultWriter:{prototype:WritableStreamDefaultWriter;new<W=any>(stream:WritableStream<W>):WritableStreamDefaultWriter<W>;};interface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap{"readystatechange":Event;}interface XMLHttpRequest extends XMLHttpRequestEventTarget{onreadystatechange:((this:XMLHttpRequest,ev:Event)=>any)|null;readonly readyState:number;readonly response:any;readonly responseText:string;responseType:XMLHttpRequestResponseType;readonly responseURL:string;readonly status:number;readonly statusText:string;timeout:number;readonly upload:XMLHttpRequestUpload;withCredentials:boolean;abort():void;getAllResponseHeaders():string;getResponseHeader(name:string):string|null;open(method:string,url:string|URL):void;open(method:string,url:string|URL,async:boolean,username?:string|null,password?:string|null):void;overrideMimeType(mime:string):void;send(body?:XMLHttpRequestBodyInit|null):void;setRequestHeader(name:string,value:string):void;readonly DONE:number;readonly HEADERS_RECEIVED:number;readonly LOADING:number;readonly OPENED:number;readonly UNSENT:number;addEventListener<K extends keyof XMLHttpRequestEventMap>(type:K,listener:(this:XMLHttpRequest,ev:XMLHttpRequestEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof XMLHttpRequestEventMap>(type:K,listener:(this:XMLHttpRequest,ev:XMLHttpRequestEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var XMLHttpRequest:{prototype:XMLHttpRequest;new():XMLHttpRequest;readonly DONE:number;readonly HEADERS_RECEIVED:number;readonly LOADING:number;readonly OPENED:number;readonly UNSENT:number;};interface XMLHttpRequestEventTargetEventMap{"abort":ProgressEvent<XMLHttpRequestEventTarget>;"error":ProgressEvent<XMLHttpRequestEventTarget>;"load":ProgressEvent<XMLHttpRequestEventTarget>;"loadend":ProgressEvent<XMLHttpRequestEventTarget>;"loadstart":ProgressEvent<XMLHttpRequestEventTarget>;"progress":ProgressEvent<XMLHttpRequestEventTarget>;"timeout":ProgressEvent<XMLHttpRequestEventTarget>;}interface XMLHttpRequestEventTarget extends EventTarget{onabort:((this:XMLHttpRequest,ev:ProgressEvent)=>any)|null;onerror:((this:XMLHttpRequest,ev:ProgressEvent)=>any)|null;onload:((this:XMLHttpRequest,ev:ProgressEvent)=>any)|null;onloadend:((this:XMLHttpRequest,ev:ProgressEvent)=>any)|null;onloadstart:((this:XMLHttpRequest,ev:ProgressEvent)=>any)|null;onprogress:((this:XMLHttpRequest,ev:ProgressEvent)=>any)|null;ontimeout:((this:XMLHttpRequest,ev:ProgressEvent)=>any)|null;addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type:K,listener:(this:XMLHttpRequestEventTarget,ev:XMLHttpRequestEventTargetEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type:K,listener:(this:XMLHttpRequestEventTarget,ev:XMLHttpRequestEventTargetEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var XMLHttpRequestEventTarget:{prototype:XMLHttpRequestEventTarget;new():XMLHttpRequestEventTarget;};interface XMLHttpRequestUpload extends XMLHttpRequestEventTarget{addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type:K,listener:(this:XMLHttpRequestUpload,ev:XMLHttpRequestEventTargetEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type:K,listener:(this:XMLHttpRequestUpload,ev:XMLHttpRequestEventTargetEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var XMLHttpRequestUpload:{prototype:XMLHttpRequestUpload;new():XMLHttpRequestUpload;};interface Console{assert(condition?:boolean,...data:any[]):void;clear():void;count(label?:string):void;countReset(label?:string):void;debug(...data:any[]):void;dir(item?:any,options?:any):void;dirxml(...data:any[]):void;error(...data:any[]):void;group(...data:any[]):void;groupCollapsed(...data:any[]):void;groupEnd():void;info(...data:any[]):void;log(...data:any[]):void;table(tabularData?:any,properties?:string[]):void;time(label?:string):void;timeEnd(label?:string):void;timeLog(label?:string,...data:any[]):void;timeStamp(label?:string):void;trace(...data:any[]):void;warn(...data:any[]):void;}declare var console:Console;declare namespace WebAssembly{interface CompileError extends Error{}var CompileError:{prototype:CompileError;new(message?:string):CompileError;(message?:string):CompileError;};interface Global{value:any;valueOf():any;}var Global:{prototype:Global;new(descriptor:GlobalDescriptor,v?:any):Global;};interface Instance{readonly exports:Exports;}var Instance:{prototype:Instance;new(module:Module,importObject?:Imports):Instance;};interface LinkError extends Error{}var LinkError:{prototype:LinkError;new(message?:string):LinkError;(message?:string):LinkError;};interface Memory{readonly buffer:ArrayBuffer;grow(delta:number):number;}var Memory:{prototype:Memory;new(descriptor:MemoryDescriptor):Memory;};interface Module{}var Module:{prototype:Module;new(bytes:BufferSource):Module;customSections(moduleObject:Module,sectionName:string):ArrayBuffer[];exports(moduleObject:Module):ModuleExportDescriptor[];imports(moduleObject:Module):ModuleImportDescriptor[];};interface RuntimeError extends Error{}var RuntimeError:{prototype:RuntimeError;new(message?:string):RuntimeError;(message?:string):RuntimeError;};interface Table{readonly length:number;get(index:number):any;grow(delta:number,value?:any):number;set(index:number,value?:any):void;}var Table:{prototype:Table;new(descriptor:TableDescriptor,value?:any):Table;};interface GlobalDescriptor{mutable?:boolean;value:ValueType;}interface MemoryDescriptor{initial:number;maximum?:number;shared?:boolean;}interface ModuleExportDescriptor{kind:ImportExportKind;name:string;}interface ModuleImportDescriptor{kind:ImportExportKind;module:string;name:string;}interface TableDescriptor{element:TableKind;initial:number;maximum?:number;}interface WebAssemblyInstantiatedSource{instance:Instance;module:Module;}type ImportExportKind="function"|"global"|"memory"|"table";type TableKind="anyfunc"|"externref";type ValueType="anyfunc"|"externref"|"f32"|"f64"|"i32"|"i64"|"v128";type ExportValue=Function|Global|Memory|Table;type Exports=Record<string,ExportValue>;type ImportValue=ExportValue|number;type Imports=Record<string,ModuleImports>;type ModuleImports=Record<string,ImportValue>;function compile(bytes:BufferSource):Promise<Module>;function compileStreaming(source:Response|PromiseLike<Response>):Promise<Module>;function instantiate(bytes:BufferSource,importObject?:Imports):Promise<WebAssemblyInstantiatedSource>;function instantiate(moduleObject:Module,importObject?:Imports):Promise<Instance>;function instantiateStreaming(source:Response|PromiseLike<Response>,importObject?:Imports):Promise<WebAssemblyInstantiatedSource>;function validate(bytes:BufferSource):boolean;}interface FrameRequestCallback{(time:DOMHighResTimeStamp):void;}interface LockGrantedCallback{(lock:Lock|null):any;}interface OnErrorEventHandlerNonNull{(event:Event|string,source?:string,lineno?:number,colno?:number,error?:Error):any;}interface PerformanceObserverCallback{(entries:PerformanceObserverEntryList,observer:PerformanceObserver):void;}interface QueuingStrategySize<T=any>{(chunk:T):number;}interface TransformerFlushCallback<O>{(controller:TransformStreamDefaultController<O>):void|PromiseLike<void>;}interface TransformerStartCallback<O>{(controller:TransformStreamDefaultController<O>):any;}interface TransformerTransformCallback<I,O>{(chunk:I,controller:TransformStreamDefaultController<O>):void|PromiseLike<void>;}interface UnderlyingSinkAbortCallback{(reason?:any):void|PromiseLike<void>;}interface UnderlyingSinkCloseCallback{():void|PromiseLike<void>;}interface UnderlyingSinkStartCallback{(controller:WritableStreamDefaultController):any;}interface UnderlyingSinkWriteCallback<W>{(chunk:W,controller:WritableStreamDefaultController):void|PromiseLike<void>;}interface UnderlyingSourceCancelCallback{(reason?:any):void|PromiseLike<void>;}interface UnderlyingSourcePullCallback<R>{(controller:ReadableStreamController<R>):void|PromiseLike<void>;}interface UnderlyingSourceStartCallback<R>{(controller:ReadableStreamController<R>):any;}interface VoidFunction{():void;}declare var name:string;declare var onmessage:((this:DedicatedWorkerGlobalScope,ev:MessageEvent)=>any)|null;declare var onmessageerror:((this:DedicatedWorkerGlobalScope,ev:MessageEvent)=>any)|null;declare function close():void;declare function postMessage(message:any,transfer:Transferable[]):void;declare function postMessage(message:any,options?:StructuredSerializeOptions):void;declare function dispatchEvent(event:Event):boolean;declare var location:WorkerLocation;declare var navigator:WorkerNavigator;declare var onerror:((this:DedicatedWorkerGlobalScope,ev:ErrorEvent)=>any)|null;declare var onlanguagechange:((this:DedicatedWorkerGlobalScope,ev:Event)=>any)|null;declare var onoffline:((this:DedicatedWorkerGlobalScope,ev:Event)=>any)|null;declare var ononline:((this:DedicatedWorkerGlobalScope,ev:Event)=>any)|null;declare var onrejectionhandled:((this:DedicatedWorkerGlobalScope,ev:PromiseRejectionEvent)=>any)|null;declare var onunhandledrejection:((this:DedicatedWorkerGlobalScope,ev:PromiseRejectionEvent)=>any)|null;declare var self:WorkerGlobalScope&typeof globalThis;declare function importScripts(...urls:(string|URL)[]):void;declare function dispatchEvent(event:Event):boolean;declare var fonts:FontFaceSet;declare var caches:CacheStorage;declare var crossOriginIsolated:boolean;declare var crypto:Crypto;declare var indexedDB:IDBFactory;declare var isSecureContext:boolean;declare var origin:string;declare var performance:Performance;declare function atob(data:string):string;declare function btoa(data:string):string;declare function clearInterval(id?:number):void;declare function clearTimeout(id?:number):void;declare function createImageBitmap(image:ImageBitmapSource,options?:ImageBitmapOptions):Promise<ImageBitmap>;declare function createImageBitmap(image:ImageBitmapSource,sx:number,sy:number,sw:number,sh:number,options?:ImageBitmapOptions):Promise<ImageBitmap>;declare function fetch(input:RequestInfo|URL,init?:RequestInit):Promise<Response>;declare function queueMicrotask(callback:VoidFunction):void;declare function reportError(e:any):void;declare function setInterval(handler:TimerHandler,timeout?:number,...arguments:any[]):number;declare function setTimeout(handler:TimerHandler,timeout?:number,...arguments:any[]):number;declare function structuredClone(value:any,options?:StructuredSerializeOptions):any;declare function cancelAnimationFrame(handle:number):void;declare function requestAnimationFrame(callback:FrameRequestCallback):number;declare function addEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type:K,listener:(this:DedicatedWorkerGlobalScope,ev:DedicatedWorkerGlobalScopeEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;declare function addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;declare function removeEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type:K,listener:(this:DedicatedWorkerGlobalScope,ev:DedicatedWorkerGlobalScopeEventMap[K])=>any,options?:boolean|EventListenerOptions):void;declare function removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;type AlgorithmIdentifier=Algorithm|string;type BigInteger=Uint8Array;type BinaryData=ArrayBuffer|ArrayBufferView;type BlobPart=BufferSource|Blob|string;type BodyInit=ReadableStream|XMLHttpRequestBodyInit;type BufferSource=ArrayBufferView|ArrayBuffer;type CanvasImageSource=ImageBitmap|OffscreenCanvas;type DOMHighResTimeStamp=number;type EpochTimeStamp=number;type EventListenerOrEventListenerObject=EventListener|EventListenerObject;type Float32List=Float32Array|GLfloat[];type FormDataEntryValue=File|string;type GLbitfield=number;type GLboolean=boolean;type GLclampf=number;type GLenum=number;type GLfloat=number;type GLint=number;type GLint64=number;type GLintptr=number;type GLsizei=number;type GLsizeiptr=number;type GLuint=number;type GLuint64=number;type HashAlgorithmIdentifier=AlgorithmIdentifier;type HeadersInit=string[][]|Record<string,string>|Headers;type IDBValidKey=number|string|Date|BufferSource|IDBValidKey[];type ImageBitmapSource=CanvasImageSource|Blob|ImageData;type Int32List=Int32Array|GLint[];type MessageEventSource=MessagePort|ServiceWorker;type NamedCurve=string;type OnErrorEventHandler=OnErrorEventHandlerNonNull|null;type PerformanceEntryList=PerformanceEntry[];type PushMessageDataInit=BufferSource|string;type ReadableStreamController<T>=ReadableStreamDefaultController<T>;type ReadableStreamDefaultReadResult<T>=ReadableStreamDefaultReadValueResult<T>|ReadableStreamDefaultReadDoneResult;type ReadableStreamReader<T>=ReadableStreamDefaultReader<T>;type RequestInfo=Request|string;type TexImageSource=ImageBitmap|ImageData|OffscreenCanvas;type TimerHandler=string|Function;type Transferable=ArrayBuffer|MessagePort|ImageBitmap;type Uint32List=Uint32Array|GLuint[];type VibratePattern=number|number[];type XMLHttpRequestBodyInit=Blob|BufferSource|FormData|URLSearchParams|string;type BinaryType="arraybuffer"|"blob";type ClientTypes="all"|"sharedworker"|"window"|"worker";type ColorGamut="p3"|"rec2020"|"srgb";type ColorSpaceConversion="default"|"none";type ConnectionType="bluetooth"|"cellular"|"ethernet"|"mixed"|"none"|"other"|"unknown"|"wifi";type DocumentVisibilityState="hidden"|"visible";type EndingType="native"|"transparent";type FileSystemHandleKind="directory"|"file";type FontFaceLoadStatus="error"|"loaded"|"loading"|"unloaded";type FontFaceSetLoadStatus="loaded"|"loading";type FrameType="auxiliary"|"nested"|"none"|"top-level";type HdrMetadataType="smpteSt2086"|"smpteSt2094-10"|"smpteSt2094-40";type IDBCursorDirection="next"|"nextunique"|"prev"|"prevunique";type IDBRequestReadyState="done"|"pending";type IDBTransactionDurability="default"|"relaxed"|"strict";type IDBTransactionMode="readonly"|"readwrite"|"versionchange";type ImageOrientation="flipY"|"none";type KeyFormat="jwk"|"pkcs8"|"raw"|"spki";type KeyType="private"|"public"|"secret";type KeyUsage="decrypt"|"deriveBits"|"deriveKey"|"encrypt"|"sign"|"unwrapKey"|"verify"|"wrapKey";type LockMode="exclusive"|"shared";type MediaDecodingType="file"|"media-source"|"webrtc";type MediaEncodingType="record"|"webrtc";type NotificationDirection="auto"|"ltr"|"rtl";type NotificationPermission="default"|"denied"|"granted";type PermissionName="geolocation"|"notifications"|"persistent-storage"|"push"|"screen-wake-lock"|"xr-spatial-tracking";type PermissionState="denied"|"granted"|"prompt";type PredefinedColorSpace="display-p3"|"srgb";type PremultiplyAlpha="default"|"none"|"premultiply";type PushEncryptionKeyName="auth"|"p256dh";type RTCEncodedVideoFrameType="delta"|"empty"|"key";type ReferrerPolicy=""|"no-referrer"|"no-referrer-when-downgrade"|"origin"|"origin-when-cross-origin"|"same-origin"|"strict-origin"|"strict-origin-when-cross-origin"|"unsafe-url";type RequestCache="default"|"force-cache"|"no-cache"|"no-store"|"only-if-cached"|"reload";type RequestCredentials="include"|"omit"|"same-origin";type RequestDestination=""|"audio"|"audioworklet"|"document"|"embed"|"font"|"frame"|"iframe"|"image"|"manifest"|"object"|"paintworklet"|"report"|"script"|"sharedworker"|"style"|"track"|"video"|"worker"|"xslt";type RequestMode="cors"|"navigate"|"no-cors"|"same-origin";type RequestRedirect="error"|"follow"|"manual";type ResizeQuality="high"|"low"|"medium"|"pixelated";type ResponseType="basic"|"cors"|"default"|"error"|"opaque"|"opaqueredirect";type SecurityPolicyViolationEventDisposition="enforce"|"report";type ServiceWorkerState="activated"|"activating"|"installed"|"installing"|"parsed"|"redundant";type ServiceWorkerUpdateViaCache="all"|"imports"|"none";type TransferFunction="hlg"|"pq"|"srgb";type VideoColorPrimaries="bt470bg"|"bt709"|"smpte170m";type VideoMatrixCoefficients="bt470bg"|"bt709"|"rgb"|"smpte170m";type VideoTransferCharacteristics="bt709"|"iec61966-2-1"|"smpte170m";type WebGLPowerPreference="default"|"high-performance"|"low-power";type WorkerType="classic"|"module";type XMLHttpRequestResponseType=""|"arraybuffer"|"blob"|"document"|"json"|"text";', "lib.webworker.importscripts.d.ts": '/// <reference no-default-lib="true"/>\r\ndeclare function importScripts(...urls:string[]):void;', "lib.webworker.iterable.d.ts": '/// <reference no-default-lib="true"/>\r\ninterface Cache{addAll(requests:Iterable<RequestInfo>):Promise<void>;}interface DOMStringList{[Symbol.iterator]():IterableIterator<string>;}interface FileList{[Symbol.iterator]():IterableIterator<File>;}interface FontFaceSet extends Set<FontFace>{}interface FormData{[Symbol.iterator]():IterableIterator<[string,FormDataEntryValue]>;entries():IterableIterator<[string,FormDataEntryValue]>;keys():IterableIterator<string>;values():IterableIterator<FormDataEntryValue>;}interface Headers{[Symbol.iterator]():IterableIterator<[string,string]>;entries():IterableIterator<[string,string]>;keys():IterableIterator<string>;values():IterableIterator<string>;}interface IDBDatabase{transaction(storeNames:string|Iterable<string>,mode?:IDBTransactionMode):IDBTransaction;}interface IDBObjectStore{createIndex(name:string,keyPath:string|Iterable<string>,options?:IDBIndexParameters):IDBIndex;}interface MessageEvent<T=any>{initMessageEvent(type:string,bubbles?:boolean,cancelable?:boolean,data?:any,origin?:string,lastEventId?:string,source?:MessageEventSource|null,ports?:Iterable<MessagePort>):void;}interface SubtleCrypto{deriveKey(algorithm:AlgorithmIdentifier|EcdhKeyDeriveParams|HkdfParams|Pbkdf2Params,baseKey:CryptoKey,derivedKeyType:AlgorithmIdentifier|AesDerivedKeyParams|HmacImportParams|HkdfParams|Pbkdf2Params,extractable:boolean,keyUsages:Iterable<KeyUsage>):Promise<CryptoKey>;generateKey(algorithm:RsaHashedKeyGenParams|EcKeyGenParams,extractable:boolean,keyUsages:ReadonlyArray<KeyUsage>):Promise<CryptoKeyPair>;generateKey(algorithm:AesKeyGenParams|HmacKeyGenParams|Pbkdf2Params,extractable:boolean,keyUsages:ReadonlyArray<KeyUsage>):Promise<CryptoKey>;generateKey(algorithm:AlgorithmIdentifier,extractable:boolean,keyUsages:Iterable<KeyUsage>):Promise<CryptoKeyPair|CryptoKey>;importKey(format:"jwk",keyData:JsonWebKey,algorithm:AlgorithmIdentifier|RsaHashedImportParams|EcKeyImportParams|HmacImportParams|AesKeyAlgorithm,extractable:boolean,keyUsages:ReadonlyArray<KeyUsage>):Promise<CryptoKey>;importKey(format:Exclude<KeyFormat,"jwk">,keyData:BufferSource,algorithm:AlgorithmIdentifier|RsaHashedImportParams|EcKeyImportParams|HmacImportParams|AesKeyAlgorithm,extractable:boolean,keyUsages:Iterable<KeyUsage>):Promise<CryptoKey>;unwrapKey(format:KeyFormat,wrappedKey:BufferSource,unwrappingKey:CryptoKey,unwrapAlgorithm:AlgorithmIdentifier|RsaOaepParams|AesCtrParams|AesCbcParams|AesGcmParams,unwrappedKeyAlgorithm:AlgorithmIdentifier|RsaHashedImportParams|EcKeyImportParams|HmacImportParams|AesKeyAlgorithm,extractable:boolean,keyUsages:Iterable<KeyUsage>):Promise<CryptoKey>;}interface URLSearchParams{[Symbol.iterator]():IterableIterator<[string,string]>;entries():IterableIterator<[string,string]>;keys():IterableIterator<string>;values():IterableIterator<string>;}interface WEBGL_draw_buffers{drawBuffersWEBGL(buffers:Iterable<GLenum>):void;}interface WEBGL_multi_draw{multiDrawArraysInstancedWEBGL(mode:GLenum,firstsList:Int32Array|Iterable<GLint>,firstsOffset:GLuint,countsList:Int32Array|Iterable<GLsizei>,countsOffset:GLuint,instanceCountsList:Int32Array|Iterable<GLsizei>,instanceCountsOffset:GLuint,drawcount:GLsizei):void;multiDrawArraysWEBGL(mode:GLenum,firstsList:Int32Array|Iterable<GLint>,firstsOffset:GLuint,countsList:Int32Array|Iterable<GLsizei>,countsOffset:GLuint,drawcount:GLsizei):void;multiDrawElementsInstancedWEBGL(mode:GLenum,countsList:Int32Array|Iterable<GLint>,countsOffset:GLuint,type:GLenum,offsetsList:Int32Array|Iterable<GLsizei>,offsetsOffset:GLuint,instanceCountsList:Int32Array|Iterable<GLsizei>,instanceCountsOffset:GLuint,drawcount:GLsizei):void;multiDrawElementsWEBGL(mode:GLenum,countsList:Int32Array|Iterable<GLint>,countsOffset:GLuint,type:GLenum,offsetsList:Int32Array|Iterable<GLsizei>,offsetsOffset:GLuint,drawcount:GLsizei):void;}interface WebGL2RenderingContextBase{clearBufferfv(buffer:GLenum,drawbuffer:GLint,values:Iterable<GLfloat>,srcOffset?:GLuint):void;clearBufferiv(buffer:GLenum,drawbuffer:GLint,values:Iterable<GLint>,srcOffset?:GLuint):void;clearBufferuiv(buffer:GLenum,drawbuffer:GLint,values:Iterable<GLuint>,srcOffset?:GLuint):void;drawBuffers(buffers:Iterable<GLenum>):void;getActiveUniforms(program:WebGLProgram,uniformIndices:Iterable<GLuint>,pname:GLenum):any;getUniformIndices(program:WebGLProgram,uniformNames:Iterable<string>):Iterable<GLuint>|null;invalidateFramebuffer(target:GLenum,attachments:Iterable<GLenum>):void;invalidateSubFramebuffer(target:GLenum,attachments:Iterable<GLenum>,x:GLint,y:GLint,width:GLsizei,height:GLsizei):void;transformFeedbackVaryings(program:WebGLProgram,varyings:Iterable<string>,bufferMode:GLenum):void;uniform1uiv(location:WebGLUniformLocation|null,data:Iterable<GLuint>,srcOffset?:GLuint,srcLength?:GLuint):void;uniform2uiv(location:WebGLUniformLocation|null,data:Iterable<GLuint>,srcOffset?:GLuint,srcLength?:GLuint):void;uniform3uiv(location:WebGLUniformLocation|null,data:Iterable<GLuint>,srcOffset?:GLuint,srcLength?:GLuint):void;uniform4uiv(location:WebGLUniformLocation|null,data:Iterable<GLuint>,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix2x3fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Iterable<GLfloat>,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix2x4fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Iterable<GLfloat>,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix3x2fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Iterable<GLfloat>,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix3x4fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Iterable<GLfloat>,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix4x2fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Iterable<GLfloat>,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix4x3fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Iterable<GLfloat>,srcOffset?:GLuint,srcLength?:GLuint):void;vertexAttribI4iv(index:GLuint,values:Iterable<GLint>):void;vertexAttribI4uiv(index:GLuint,values:Iterable<GLuint>):void;}interface WebGL2RenderingContextOverloads{uniform1fv(location:WebGLUniformLocation|null,data:Iterable<GLfloat>,srcOffset?:GLuint,srcLength?:GLuint):void;uniform1iv(location:WebGLUniformLocation|null,data:Iterable<GLint>,srcOffset?:GLuint,srcLength?:GLuint):void;uniform2fv(location:WebGLUniformLocation|null,data:Iterable<GLfloat>,srcOffset?:GLuint,srcLength?:GLuint):void;uniform2iv(location:WebGLUniformLocation|null,data:Iterable<GLint>,srcOffset?:GLuint,srcLength?:GLuint):void;uniform3fv(location:WebGLUniformLocation|null,data:Iterable<GLfloat>,srcOffset?:GLuint,srcLength?:GLuint):void;uniform3iv(location:WebGLUniformLocation|null,data:Iterable<GLint>,srcOffset?:GLuint,srcLength?:GLuint):void;uniform4fv(location:WebGLUniformLocation|null,data:Iterable<GLfloat>,srcOffset?:GLuint,srcLength?:GLuint):void;uniform4iv(location:WebGLUniformLocation|null,data:Iterable<GLint>,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix2fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Iterable<GLfloat>,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix3fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Iterable<GLfloat>,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix4fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Iterable<GLfloat>,srcOffset?:GLuint,srcLength?:GLuint):void;}interface WebGLRenderingContextBase{vertexAttrib1fv(index:GLuint,values:Iterable<GLfloat>):void;vertexAttrib2fv(index:GLuint,values:Iterable<GLfloat>):void;vertexAttrib3fv(index:GLuint,values:Iterable<GLfloat>):void;vertexAttrib4fv(index:GLuint,values:Iterable<GLfloat>):void;}interface WebGLRenderingContextOverloads{uniform1fv(location:WebGLUniformLocation|null,v:Iterable<GLfloat>):void;uniform1iv(location:WebGLUniformLocation|null,v:Iterable<GLint>):void;uniform2fv(location:WebGLUniformLocation|null,v:Iterable<GLfloat>):void;uniform2iv(location:WebGLUniformLocation|null,v:Iterable<GLint>):void;uniform3fv(location:WebGLUniformLocation|null,v:Iterable<GLfloat>):void;uniform3iv(location:WebGLUniformLocation|null,v:Iterable<GLint>):void;uniform4fv(location:WebGLUniformLocation|null,v:Iterable<GLfloat>):void;uniform4iv(location:WebGLUniformLocation|null,v:Iterable<GLint>):void;uniformMatrix2fv(location:WebGLUniformLocation|null,transpose:GLboolean,value:Iterable<GLfloat>):void;uniformMatrix3fv(location:WebGLUniformLocation|null,transpose:GLboolean,value:Iterable<GLfloat>):void;uniformMatrix4fv(location:WebGLUniformLocation|null,transpose:GLboolean,value:Iterable<GLfloat>):void;}', "\\node_modules\\z3-solver\\build\\browser.d.ts": "import{Z3HighLevel}from'./high-level';import{Z3LowLevel}from'./low-level';export*from'./high-level/types';export{Z3Core,Z3LowLevel}from'./low-level';export*from'./low-level/types.__GENERATED__';export declare function init():Promise<Z3LowLevel&Z3HighLevel>;", "\\node_modules\\z3-solver\\build\\high-level\\high-level.d.ts": "import{Z3Core}from'../low-level';import{Z3HighLevel}from'./types';export declare function createApi(Z3:Z3Core):Z3HighLevel;", "\\node_modules\\z3-solver\\build\\high-level\\index.d.ts": "export*from'./high-level';export*from'./types';", "\\node_modules\\z3-solver\\build\\high-level\\types.d.ts": "import{Z3_ast,Z3_ast_map,Z3_ast_vector,Z3_context,Z3_decl_kind,Z3_func_decl,Z3_func_interp,Z3_model,Z3_probe,Z3_solver,Z3_sort,Z3_sort_kind,Z3_symbol,Z3_tactic}from'../low-level';export declare type AnySort<Name extends string='main'>=Sort<Name>|BoolSort<Name>|ArithSort<Name>|BitVecSort<number,Name>;export declare type AnyExpr<Name extends string='main'>=Expr<Name>|Bool<Name>|Arith<Name>|IntNum<Name>|RatNum<Name>|BitVec<number,Name>|BitVecNum<number,Name>;export declare type AnyAst<Name extends string='main'>=AnyExpr<Name>|AnySort<Name>|FuncDecl<Name>;export declare type SortToExprMap<S extends AnySort<Name>,Name extends string='main'>=S extends BoolSort?Bool<Name>:S extends ArithSort<Name>?Arith<Name>:S extends BitVecSort<infer Size,Name>?BitVec<Size,Name>:S extends Sort<Name>?Expr<Name>:never;export declare type CoercibleToExprMap<S extends CoercibleToExpr<Name>,Name extends string='main'>=S extends bigint?IntNum<Name>:S extends number|CoercibleRational?RatNum<Name>:S extends boolean?Bool<Name>:S extends Expr<Name>?S:never;export declare type CoercibleRational={numerator:bigint|number;denominator:bigint|number;};export declare type CoercibleToExpr<Name extends string='main'>=number|bigint|boolean|CoercibleRational|Expr<Name>;export declare class Z3Error extends Error{}export declare class Z3AssertionError extends Z3Error{}export declare type CheckSatResult='sat'|'unsat'|'unknown';export interface ContextCtor{<Name extends string>(name:Name,options?:Record<string,any>):Context<Name>;}export interface Context<Name extends string='main'>{readonly ptr:Z3_context;readonly name:Name;interrupt():void;isModel(obj:unknown):obj is Model<Name>;isAst(obj:unknown):obj is Ast<Name>;isSort(obj:unknown):obj is Sort<Name>;isFuncDecl(obj:unknown):obj is FuncDecl<Name>;isApp(obj:unknown):boolean;isConst(obj:unknown):boolean;isExpr(obj:unknown):obj is Expr<Name>;isVar(obj:unknown):boolean;isAppOf(obj:unknown,kind:Z3_decl_kind):boolean;isBool(obj:unknown):obj is Bool<Name>;isTrue(obj:unknown):boolean;isFalse(obj:unknown):boolean;isAnd(obj:unknown):boolean;isOr(obj:unknown):boolean;isImplies(obj:unknown):boolean;isNot(obj:unknown):boolean;isEq(obj:unknown):boolean;isDistinct(obj:unknown):boolean;isArith(obj:unknown):obj is Arith<Name>;isArithSort(obj:unknown):obj is ArithSort<Name>;isInt(obj:unknown):boolean;isIntVal(obj:unknown):obj is IntNum<Name>;isIntSort(obj:unknown):boolean;isReal(obj:unknown):boolean;isRealVal(obj:unknown):obj is RatNum<Name>;isRealSort(obj:unknown):boolean;isBitVecSort(obj:unknown):obj is BitVecSort<number,Name>;isBitVec(obj:unknown):obj is BitVec<number,Name>;isBitVecVal(obj:unknown):obj is BitVecNum<number,Name>;isProbe(obj:unknown):obj is Probe<Name>;isTactic(obj:unknown):obj is Tactic<Name>;isAstVector(obj:unknown):obj is AstVector<Name,AnyAst<Name>>;eqIdentity(a:Ast<Name>,b:Ast<Name>):boolean;getVarIndex(obj:Expr<Name>):number;from(primitive:boolean):Bool<Name>;from(primitive:number):IntNum<Name>|RatNum<Name>;from(primitive:CoercibleRational):RatNum<Name>;from(primitive:bigint):IntNum<Name>;from<E extends Expr<Name>>(expr:E):E;from(value:CoercibleToExpr<Name>):AnyExpr<Name>;solve(...assertions:Bool<Name>[]):Promise<Model<Name>|'unsat'|'unknown'>;readonly Solver:new(logic?:string)=>Solver<Name>;readonly Model:new()=>Model<Name>;readonly AstVector:new<Item extends Ast<Name>=AnyAst<Name>>()=>AstVector<Name,Item>;readonly AstMap:new<Key extends Ast<Name>=AnyAst<Name>,Value extends Ast<Name>=AnyAst<Name>>()=>AstMap<Name,Key,Value>;readonly Tactic:new(name:string)=>Tactic<Name>;readonly Sort:SortCreation<Name>;readonly Function:FuncDeclCreation<Name>;readonly RecFunc:RecFuncCreation<Name>;readonly Bool:BoolCreation<Name>;readonly Int:IntCreation<Name>;readonly Real:RealCreation<Name>;readonly BitVec:BitVecCreation<Name>;Const<S extends Sort<Name>>(name:string,sort:S):SortToExprMap<S,Name>;Consts<S extends Sort<Name>>(name:string|string[],sort:S):SortToExprMap<S,Name>[];FreshConst<S extends Sort<Name>>(sort:S,prefix?:string):SortToExprMap<S,Name>;Var<S extends Sort<Name>>(idx:number,sort:S):SortToExprMap<S,Name>;If(condition:Probe<Name>,onTrue:Tactic<Name>,onFalse:Tactic<Name>):Tactic<Name>;If<OnTrueRef extends CoercibleToExpr<Name>,OnFalseRef extends CoercibleToExpr<Name>>(condition:Bool<Name>|boolean,onTrue:OnTrueRef,onFalse:OnFalseRef):CoercibleToExprMap<OnTrueRef|OnFalseRef,Name>;Distinct(...args:CoercibleToExpr<Name>[]):Bool<Name>;Implies(a:Bool<Name>|boolean,b:Bool<Name>|boolean):Bool<Name>;Eq(a:CoercibleToExpr<Name>,b:CoercibleToExpr<Name>):Bool<Name>;Xor(a:Bool<Name>|boolean,b:Bool<Name>|boolean):Bool<Name>;Not(a:Probe<Name>):Probe<Name>;Not(a:Bool<Name>|boolean):Bool<Name>;And():Bool<Name>;And(vector:AstVector<Name,Bool<Name>>):Bool<Name>;And(...args:(Bool<Name>|boolean)[]):Bool<Name>;And(...args:Probe<Name>[]):Probe<Name>;Or():Bool<Name>;Or(vector:AstVector<Name,Bool<Name>>):Bool<Name>;Or(...args:(Bool<Name>|boolean)[]):Bool<Name>;Or(...args:Probe<Name>[]):Probe<Name>;ToReal(expr:Arith<Name>|bigint):Arith<Name>;ToInt(expr:Arith<Name>|number|CoercibleRational|string):Arith<Name>;IsInt(expr:Arith<Name>|number|CoercibleRational|string):Bool<Name>;Sqrt(a:Arith<Name>|number|bigint|string|CoercibleRational):Arith<Name>;Cbrt(a:Arith<Name>|number|bigint|string|CoercibleRational):Arith<Name>;BV2Int(a:BitVec<number,Name>,isSigned:boolean):Arith<Name>;Int2BV<Bits extends number>(a:Arith<Name>|bigint|number,bits:Bits):BitVec<Bits,Name>;Concat(...bitvecs:BitVec<number,Name>[]):BitVec<number,Name>;Cond(probe:Probe<Name>,onTrue:Tactic<Name>,onFalse:Tactic<Name>):Tactic<Name>;}export interface Ast<Name extends string='main',Ptr=unknown>{readonly __typename:'Ast'|Sort['__typename']|FuncDecl['__typename']|Expr['__typename'];readonly ctx:Context<Name>;readonly ptr:Ptr;get ast():Z3_ast;id():number;eqIdentity(other:Ast<Name>):boolean;neqIdentity(other:Ast<Name>):boolean;sexpr():string;hash():number;}export interface SolverCtor<Name extends string>{new():Solver<Name>;}export interface Solver<Name extends string='main'>{readonly __typename:'Solver';readonly ctx:Context<Name>;readonly ptr:Z3_solver;push():void;pop(num?:number):void;numScopes():number;reset():void;add(...exprs:(Bool<Name>|AstVector<Name,Bool<Name>>)[]):void;addAndTrack(expr:Bool<Name>,constant:Bool<Name>|string):void;assertions():AstVector<Name,Bool<Name>>;fromString(s:string):void;check(...exprs:(Bool<Name>|AstVector<Name,Bool<Name>>)[]):Promise<CheckSatResult>;model():Model<Name>;}export interface ModelCtor<Name extends string>{new():Model<Name>;}export interface Model<Name extends string='main'>extends Iterable<FuncDecl<Name>>{readonly __typename:'Model';readonly ctx:Context<Name>;readonly ptr:Z3_model;length():number;entries():IterableIterator<[number,FuncDecl<Name>]>;keys():IterableIterator<number>;values():IterableIterator<FuncDecl<Name>>;decls():FuncDecl<Name>[];sexpr():string;eval(expr:Bool<Name>,modelCompletion?:boolean):Bool<Name>;eval(expr:Arith<Name>,modelCompletion?:boolean):Arith<Name>;eval(expr:Expr<Name>,modelCompletion?:boolean):Expr<Name>;get(i:number):FuncDecl<Name>;get(from:number,to:number):FuncDecl<Name>[];get(declaration:FuncDecl<Name>):FuncInterp<Name>|Expr<Name>;get(constant:Expr<Name>):Expr<Name>;get(sort:Sort<Name>):AstVector<Name,AnyExpr<Name>>;}export interface SortCreation<Name extends string>{declare(name:string):Sort<Name>;}export interface Sort<Name extends string='main'>extends Ast<Name,Z3_sort>{readonly __typename:'Sort'|BoolSort['__typename']|ArithSort['__typename']|BitVecSort['__typename'];kind():Z3_sort_kind;subsort(other:Sort<Name>):boolean;cast(expr:CoercibleToExpr<Name>):Expr<Name>;name():string|number;}export interface FuncInterp<Name extends string='main'>{readonly __typename:'FuncInterp';readonly ctx:Context<Name>;readonly ptr:Z3_func_interp;}export declare type FuncDeclSignature<Name extends string>=[Sort<Name>,Sort<Name>,...Sort<Name>[]];export interface FuncDeclCreation<Name extends string>{declare(name:string,...signature:FuncDeclSignature<Name>):FuncDecl<Name>;fresh(...signature:FuncDeclSignature<Name>):FuncDecl<Name>;}export interface RecFuncCreation<Name extends string>{declare(name:string,...signature:FuncDeclSignature<Name>):FuncDecl<Name>;addDefinition(f:FuncDecl<Name>,args:Expr<Name>[],body:Expr<Name>):void;}export interface FuncDecl<Name extends string='main'>extends Ast<Name,Z3_func_decl>{readonly __typename:'FuncDecl';name():string|number;arity():number;domain(i:number):Sort<Name>;range():Sort<Name>;kind():Z3_decl_kind;params():(number|string|Z3_symbol|Sort<Name>|Expr<Name>|FuncDecl<Name>)[];call(...args:CoercibleToExpr<Name>[]):AnyExpr<Name>;}export interface Expr<Name extends string='main',S extends Sort<Name>=AnySort<Name>,Ptr=unknown>extends Ast<Name,Ptr>{readonly __typename:'Expr'|Bool['__typename']|Arith['__typename']|BitVec['__typename'];get sort():S;eq(other:CoercibleToExpr<Name>):Bool<Name>;neq(other:CoercibleToExpr<Name>):Bool<Name>;params():ReturnType<FuncDecl<Name>['params']>;decl():FuncDecl<Name>;numArgs():number;arg(i:number):AnyExpr<Name>;children():AnyExpr<Name>[];}export interface BoolSort<Name extends string='main'>extends Sort<Name>{readonly __typename:'BoolSort';cast(expr:Bool<Name>|boolean):Bool<Name>;cast(expr:CoercibleToExpr<Name>):never;}export interface BoolCreation<Name extends string='main'>{sort():BoolSort<Name>;const(name:string):Bool<Name>;consts(names:string|string[]):Bool<Name>[];vector(prefix:string,count:number):Bool<Name>[];fresh(prefix?:string):Bool<Name>;val(value:boolean):Bool<Name>;}export interface Bool<Name extends string='main'>extends Expr<Name,BoolSort<Name>,Z3_ast>{readonly __typename:'Bool';not():Bool<Name>;and(other:Bool<Name>|boolean):Bool<Name>;or(other:Bool<Name>|boolean):Bool<Name>;xor(other:Bool<Name>|boolean):Bool<Name>;}export interface ArithSort<Name extends string='main'>extends Sort<Name>{readonly __typename:'ArithSort';cast(other:bigint|number|string):IntNum<Name>|RatNum<Name>;cast(other:CoercibleRational|RatNum<Name>):RatNum<Name>;cast(other:IntNum<Name>):IntNum<Name>;cast(other:bigint|number|string|Bool<Name>|Arith<Name>|CoercibleRational):Arith<Name>;cast(other:CoercibleToExpr<Name>|string):never;}export interface IntCreation<Name extends string>{sort():ArithSort<Name>;const(name:string):Arith<Name>;consts(names:string|string[]):Arith<Name>[];vector(prefix:string,count:number):Arith<Name>[];fresh(prefix?:string):Arith<Name>;val(value:bigint|number|string):IntNum<Name>;}export interface RealCreation<Name extends string>{sort():ArithSort<Name>;const(name:string):Arith<Name>;consts(names:string|string[]):Arith<Name>[];vector(prefix:string,count:number):Arith<Name>[];fresh(prefix?:string):Arith<Name>;val(value:number|string|bigint|CoercibleRational):RatNum<Name>;}export interface Arith<Name extends string='main'>extends Expr<Name,ArithSort<Name>,Z3_ast>{readonly __typename:'Arith'|IntNum['__typename']|RatNum['__typename'];add(other:Arith<Name>|number|bigint|string):Arith<Name>;mul(other:Arith<Name>|number|bigint|string):Arith<Name>;sub(other:Arith<Name>|number|bigint|string):Arith<Name>;pow(exponent:Arith<Name>|number|bigint|string):Arith<Name>;div(other:Arith<Name>|number|bigint|string):Arith<Name>;mod(other:Arith<Name>|number|bigint|string):Arith<Name>;neg():Arith<Name>;le(other:Arith<Name>|number|bigint|string):Bool<Name>;lt(other:Arith<Name>|number|bigint|string):Bool<Name>;gt(other:Arith<Name>|number|bigint|string):Bool<Name>;ge(other:Arith<Name>|number|bigint|string):Bool<Name>;}export interface IntNum<Name extends string='main'>extends Arith<Name>{readonly __typename:'IntNum';value():bigint;asString():string;asBinary():string;}export interface RatNum<Name extends string='main'>extends Arith<Name>{readonly __typename:'RatNum';value():{numerator:bigint;denominator:bigint;};numerator():IntNum<Name>;denominator():IntNum<Name>;asNumber():number;asDecimal(prec?:number):string;asString():string;}export interface BitVecSort<Bits extends number=number,Name extends string='main'>extends Sort<Name>{readonly __typename:'BitVecSort';size():Bits;cast(other:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;cast(other:CoercibleToExpr<Name>):Expr<Name>;}export declare type CoercibleToBitVec<Bits extends number=number,Name extends string='main'>=bigint|number|BitVec<Bits,Name>;export interface BitVecCreation<Name extends string>{sort<Bits extends number=number>(bits:Bits):BitVecSort<Bits,Name>;const<Bits extends number=number>(name:string,bits:Bits|BitVecSort<Bits,Name>):BitVec<Bits,Name>;consts<Bits extends number=number>(names:string|string[],bits:Bits|BitVecSort<Bits,Name>):BitVec<Bits,Name>[];val<Bits extends number=number>(value:bigint|number|boolean,bits:Bits|BitVecSort<Bits,Name>):BitVecNum<Bits,Name>;}export interface BitVec<Bits extends number=number,Name extends string='main'>extends Expr<Name,BitVecSort<Bits,Name>,Z3_ast>{readonly __typename:'BitVec'|BitVecNum['__typename'];size():Bits;add(other:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;mul(other:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;sub(other:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;sdiv(other:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;udiv(other:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;smod(other:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;urem(other:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;srem(other:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;neg():BitVec<Bits,Name>;or(other:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;and(other:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;nand(other:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;xor(other:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;xnor(other:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;shr(count:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;lshr(count:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;shl(count:CoercibleToBitVec<Bits,Name>):BitVec<Bits,Name>;rotateRight(count:CoercibleToBitVec<number,Name>):BitVec<Bits,Name>;rotateLeft(count:CoercibleToBitVec<number,Name>):BitVec<Bits,Name>;not():BitVec<Bits,Name>;extract(high:number,low:number):BitVec<number,Name>;signExt(count:number):BitVec<number,Name>;zeroExt(count:number):BitVec<number,Name>;repeat(count:number):BitVec<number,Name>;sle(other:CoercibleToBitVec<Bits,Name>):Bool<Name>;ule(other:CoercibleToBitVec<Bits,Name>):Bool<Name>;slt(other:CoercibleToBitVec<Bits,Name>):Bool<Name>;ult(other:CoercibleToBitVec<Bits,Name>):Bool<Name>;sge(other:CoercibleToBitVec<Bits,Name>):Bool<Name>;uge(other:CoercibleToBitVec<Bits,Name>):Bool<Name>;sgt(other:CoercibleToBitVec<Bits,Name>):Bool<Name>;ugt(other:CoercibleToBitVec<Bits,Name>):Bool<Name>;redAnd():BitVec<number,Name>;redOr():BitVec<number,Name>;addNoOverflow(other:CoercibleToBitVec<Bits,Name>,isSigned:boolean):Bool<Name>;addNoUnderflow(other:CoercibleToBitVec<Bits,Name>):Bool<Name>;subNoOverflow(other:CoercibleToBitVec<Bits,Name>):Bool<Name>;subNoUndeflow(other:CoercibleToBitVec<Bits,Name>,isSigned:boolean):Bool<Name>;sdivNoOverflow(other:CoercibleToBitVec<Bits,Name>):Bool<Name>;mulNoOverflow(other:CoercibleToBitVec<Bits,Name>,isSigned:boolean):Bool<Name>;mulNoUndeflow(other:CoercibleToBitVec<Bits,Name>):Bool<Name>;negNoOverflow():Bool<Name>;}export interface BitVecNum<Bits extends number=number,Name extends string='main'>extends BitVec<Bits,Name>{readonly __typename:'BitVecNum';value():bigint;asSignedValue():bigint;asString():string;asBinaryString():string;}export interface Probe<Name extends string='main'>{readonly __typename:'Probe';readonly ctx:Context<Name>;readonly ptr:Z3_probe;}export interface TacticCtor<Name extends string>{new(name:string):Tactic<Name>;}export interface Tactic<Name extends string='main'>{readonly __typename:'Tactic';readonly ctx:Context<Name>;readonly ptr:Z3_tactic;}export interface AstVectorCtor<Name extends string>{new<Item extends Ast<Name>=AnyAst<Name>>():AstVector<Name,Item>;}export interface AstVector<Name extends string='main',Item extends Ast<Name>=AnyAst<Name>>extends Iterable<Item>{readonly __typename:'AstVector';readonly ctx:Context<Name>;readonly ptr:Z3_ast_vector;length():number;entries():IterableIterator<[number,Item]>;keys():IterableIterator<number>;values():IterableIterator<Item>;get(i:number):Item;get(from:number,to:number):Item[];set(i:number,v:Item):void;push(v:Item):void;resize(size:number):void;has(v:Item):boolean;sexpr():string;}export interface AstMapCtor<Name extends string>{new<Key extends Ast<Name>=AnyAst<Name>,Value extends Ast<Name>=AnyAst<Name>>():AstMap<Name,Key,Value>;}export interface AstMap<Name extends string='main',Key extends Ast<Name>=AnyAst<Name>,Value extends Ast<Name>=AnyAst<Name>>extends Iterable<[Key,Value]>{readonly __typename:'AstMap';readonly ctx:Context<Name>;readonly ptr:Z3_ast_map;get size():number;entries():IterableIterator<[Key,Value]>;keys():AstVector<Name,Key>;values():IterableIterator<Value>;get(key:Key):Value|undefined;set(key:Key,value:Value):void;delete(key:Key):void;clear():void;has(key:Key):boolean;sexpr():string;}export interface Z3HighLevel{enableTrace(tag:string):void;disableTrace(tag:string):void;getVersion():{major:number;minor:number;build_number:number;revision_number:number;};getVersionString():string;getFullVersion():string;openLog(filename:string):boolean;appendLog(s:string):void;setParam(key:string,value:any):void;setParam(key:Record<string,any>):void;resetParams():void;getParam(name:string):string|null;readonly Context:ContextCtor;}", "\\node_modules\\z3-solver\\build\\high-level\\utils.d.ts": "export declare function assertExhaustive(x:never):never;export declare function assert(condition:boolean,reason?:string):asserts condition;export declare function allSatisfy<T>(collection:Iterable<T>,premise:(arg:T)=>boolean):boolean|null;", "\\node_modules\\z3-solver\\build\\low-level\\index.d.ts": "export*from'./types.__GENERATED__';export*from'./wrapper.__GENERATED__';export declare type Z3Core=Awaited<ReturnType<typeof import('./wrapper.__GENERATED__')['init']>>['Z3'];export declare type Z3LowLevel=Awaited<ReturnType<typeof import('./wrapper.__GENERATED__')['init']>>;", "\\node_modules\\z3-solver\\build\\low-level\\types.__GENERATED__.d.ts": "interface Pointer<T extends string>extends Number{readonly __typeName:T;}interface Subpointer<T extends string,S extends string>extends Pointer<S>{readonly __typeName2:T;}export declare type Z3_error_handler=Pointer<'Z3_error_handler'>;export declare type Z3_push_eh=Pointer<'Z3_push_eh'>;export declare type Z3_pop_eh=Pointer<'Z3_pop_eh'>;export declare type Z3_fresh_eh=Pointer<'Z3_fresh_eh'>;export declare type Z3_fixed_eh=Pointer<'Z3_fixed_eh'>;export declare type Z3_eq_eh=Pointer<'Z3_eq_eh'>;export declare type Z3_final_eh=Pointer<'Z3_final_eh'>;export declare type Z3_created_eh=Pointer<'Z3_created_eh'>;export declare type Z3_decide_eh=Pointer<'Z3_decide_eh'>;export declare type Z3_symbol=Pointer<'Z3_symbol'>;export declare type Z3_literals=Pointer<'Z3_literals'>;export declare type Z3_config=Pointer<'Z3_config'>;export declare type Z3_context=Pointer<'Z3_context'>;export declare type Z3_sort=Subpointer<'Z3_sort','Z3_ast'>;export declare type Z3_func_decl=Subpointer<'Z3_func_decl','Z3_ast'>;export declare type Z3_ast=Pointer<'Z3_ast'>;export declare type Z3_app=Pointer<'Z3_app'>;export declare type Z3_pattern=Pointer<'Z3_pattern'>;export declare type Z3_model=Pointer<'Z3_model'>;export declare type Z3_constructor=Pointer<'Z3_constructor'>;export declare type Z3_constructor_list=Pointer<'Z3_constructor_list'>;export declare type Z3_params=Pointer<'Z3_params'>;export declare type Z3_param_descrs=Pointer<'Z3_param_descrs'>;export declare type Z3_parser_context=Pointer<'Z3_parser_context'>;export declare type Z3_goal=Pointer<'Z3_goal'>;export declare type Z3_tactic=Pointer<'Z3_tactic'>;export declare type Z3_probe=Pointer<'Z3_probe'>;export declare type Z3_stats=Pointer<'Z3_stats'>;export declare type Z3_solver=Pointer<'Z3_solver'>;export declare type Z3_solver_callback=Pointer<'Z3_solver_callback'>;export declare type Z3_ast_vector=Pointer<'Z3_ast_vector'>;export declare type Z3_ast_map=Pointer<'Z3_ast_map'>;export declare type Z3_apply_result=Pointer<'Z3_apply_result'>;export declare type Z3_func_interp=Pointer<'Z3_func_interp'>;export declare type Z3_func_entry=Pointer<'Z3_func_entry'>;export declare type Z3_fixedpoint=Pointer<'Z3_fixedpoint'>;export declare type Z3_optimize=Pointer<'Z3_optimize'>;export declare type Z3_rcf_num=Pointer<'Z3_rcf_num'>;export declare enum Z3_lbool{Z3_L_FALSE=-1,Z3_L_UNDEF=0,Z3_L_TRUE=1}export declare enum Z3_symbol_kind{Z3_INT_SYMBOL=0,Z3_STRING_SYMBOL=1}export declare enum Z3_parameter_kind{Z3_PARAMETER_INT=0,Z3_PARAMETER_DOUBLE=1,Z3_PARAMETER_RATIONAL=2,Z3_PARAMETER_SYMBOL=3,Z3_PARAMETER_SORT=4,Z3_PARAMETER_AST=5,Z3_PARAMETER_FUNC_DECL=6}export declare enum Z3_sort_kind{Z3_UNINTERPRETED_SORT=0,Z3_BOOL_SORT=1,Z3_INT_SORT=2,Z3_REAL_SORT=3,Z3_BV_SORT=4,Z3_ARRAY_SORT=5,Z3_DATATYPE_SORT=6,Z3_RELATION_SORT=7,Z3_FINITE_DOMAIN_SORT=8,Z3_FLOATING_POINT_SORT=9,Z3_ROUNDING_MODE_SORT=10,Z3_SEQ_SORT=11,Z3_RE_SORT=12,Z3_CHAR_SORT=13,Z3_UNKNOWN_SORT=1000}export declare enum Z3_ast_kind{Z3_NUMERAL_AST=0,Z3_APP_AST=1,Z3_VAR_AST=2,Z3_QUANTIFIER_AST=3,Z3_SORT_AST=4,Z3_FUNC_DECL_AST=5,Z3_UNKNOWN_AST=1000}export declare enum Z3_decl_kind{Z3_OP_TRUE=256,Z3_OP_FALSE=257,Z3_OP_EQ=258,Z3_OP_DISTINCT=259,Z3_OP_ITE=260,Z3_OP_AND=261,Z3_OP_OR=262,Z3_OP_IFF=263,Z3_OP_XOR=264,Z3_OP_NOT=265,Z3_OP_IMPLIES=266,Z3_OP_OEQ=267,Z3_OP_ANUM=512,Z3_OP_AGNUM=513,Z3_OP_LE=514,Z3_OP_GE=515,Z3_OP_LT=516,Z3_OP_GT=517,Z3_OP_ADD=518,Z3_OP_SUB=519,Z3_OP_UMINUS=520,Z3_OP_MUL=521,Z3_OP_DIV=522,Z3_OP_IDIV=523,Z3_OP_REM=524,Z3_OP_MOD=525,Z3_OP_TO_REAL=526,Z3_OP_TO_INT=527,Z3_OP_IS_INT=528,Z3_OP_POWER=529,Z3_OP_STORE=768,Z3_OP_SELECT=769,Z3_OP_CONST_ARRAY=770,Z3_OP_ARRAY_MAP=771,Z3_OP_ARRAY_DEFAULT=772,Z3_OP_SET_UNION=773,Z3_OP_SET_INTERSECT=774,Z3_OP_SET_DIFFERENCE=775,Z3_OP_SET_COMPLEMENT=776,Z3_OP_SET_SUBSET=777,Z3_OP_AS_ARRAY=778,Z3_OP_ARRAY_EXT=779,Z3_OP_SET_HAS_SIZE=780,Z3_OP_SET_CARD=781,Z3_OP_BNUM=1024,Z3_OP_BIT1=1025,Z3_OP_BIT0=1026,Z3_OP_BNEG=1027,Z3_OP_BADD=1028,Z3_OP_BSUB=1029,Z3_OP_BMUL=1030,Z3_OP_BSDIV=1031,Z3_OP_BUDIV=1032,Z3_OP_BSREM=1033,Z3_OP_BUREM=1034,Z3_OP_BSMOD=1035,Z3_OP_BSDIV0=1036,Z3_OP_BUDIV0=1037,Z3_OP_BSREM0=1038,Z3_OP_BUREM0=1039,Z3_OP_BSMOD0=1040,Z3_OP_ULEQ=1041,Z3_OP_SLEQ=1042,Z3_OP_UGEQ=1043,Z3_OP_SGEQ=1044,Z3_OP_ULT=1045,Z3_OP_SLT=1046,Z3_OP_UGT=1047,Z3_OP_SGT=1048,Z3_OP_BAND=1049,Z3_OP_BOR=1050,Z3_OP_BNOT=1051,Z3_OP_BXOR=1052,Z3_OP_BNAND=1053,Z3_OP_BNOR=1054,Z3_OP_BXNOR=1055,Z3_OP_CONCAT=1056,Z3_OP_SIGN_EXT=1057,Z3_OP_ZERO_EXT=1058,Z3_OP_EXTRACT=1059,Z3_OP_REPEAT=1060,Z3_OP_BREDOR=1061,Z3_OP_BREDAND=1062,Z3_OP_BCOMP=1063,Z3_OP_BSHL=1064,Z3_OP_BLSHR=1065,Z3_OP_BASHR=1066,Z3_OP_ROTATE_LEFT=1067,Z3_OP_ROTATE_RIGHT=1068,Z3_OP_EXT_ROTATE_LEFT=1069,Z3_OP_EXT_ROTATE_RIGHT=1070,Z3_OP_BIT2BOOL=1071,Z3_OP_INT2BV=1072,Z3_OP_BV2INT=1073,Z3_OP_CARRY=1074,Z3_OP_XOR3=1075,Z3_OP_BSMUL_NO_OVFL=1076,Z3_OP_BUMUL_NO_OVFL=1077,Z3_OP_BSMUL_NO_UDFL=1078,Z3_OP_BSDIV_I=1079,Z3_OP_BUDIV_I=1080,Z3_OP_BSREM_I=1081,Z3_OP_BUREM_I=1082,Z3_OP_BSMOD_I=1083,Z3_OP_PR_UNDEF=1280,Z3_OP_PR_TRUE=1281,Z3_OP_PR_ASSERTED=1282,Z3_OP_PR_GOAL=1283,Z3_OP_PR_MODUS_PONENS=1284,Z3_OP_PR_REFLEXIVITY=1285,Z3_OP_PR_SYMMETRY=1286,Z3_OP_PR_TRANSITIVITY=1287,Z3_OP_PR_TRANSITIVITY_STAR=1288,Z3_OP_PR_MONOTONICITY=1289,Z3_OP_PR_QUANT_INTRO=1290,Z3_OP_PR_BIND=1291,Z3_OP_PR_DISTRIBUTIVITY=1292,Z3_OP_PR_AND_ELIM=1293,Z3_OP_PR_NOT_OR_ELIM=1294,Z3_OP_PR_REWRITE=1295,Z3_OP_PR_REWRITE_STAR=1296,Z3_OP_PR_PULL_QUANT=1297,Z3_OP_PR_PUSH_QUANT=1298,Z3_OP_PR_ELIM_UNUSED_VARS=1299,Z3_OP_PR_DER=1300,Z3_OP_PR_QUANT_INST=1301,Z3_OP_PR_HYPOTHESIS=1302,Z3_OP_PR_LEMMA=1303,Z3_OP_PR_UNIT_RESOLUTION=1304,Z3_OP_PR_IFF_TRUE=1305,Z3_OP_PR_IFF_FALSE=1306,Z3_OP_PR_COMMUTATIVITY=1307,Z3_OP_PR_DEF_AXIOM=1308,Z3_OP_PR_ASSUMPTION_ADD=1309,Z3_OP_PR_LEMMA_ADD=1310,Z3_OP_PR_REDUNDANT_DEL=1311,Z3_OP_PR_CLAUSE_TRAIL=1312,Z3_OP_PR_DEF_INTRO=1313,Z3_OP_PR_APPLY_DEF=1314,Z3_OP_PR_IFF_OEQ=1315,Z3_OP_PR_NNF_POS=1316,Z3_OP_PR_NNF_NEG=1317,Z3_OP_PR_SKOLEMIZE=1318,Z3_OP_PR_MODUS_PONENS_OEQ=1319,Z3_OP_PR_TH_LEMMA=1320,Z3_OP_PR_HYPER_RESOLVE=1321,Z3_OP_RA_STORE=1536,Z3_OP_RA_EMPTY=1537,Z3_OP_RA_IS_EMPTY=1538,Z3_OP_RA_JOIN=1539,Z3_OP_RA_UNION=1540,Z3_OP_RA_WIDEN=1541,Z3_OP_RA_PROJECT=1542,Z3_OP_RA_FILTER=1543,Z3_OP_RA_NEGATION_FILTER=1544,Z3_OP_RA_RENAME=1545,Z3_OP_RA_COMPLEMENT=1546,Z3_OP_RA_SELECT=1547,Z3_OP_RA_CLONE=1548,Z3_OP_FD_CONSTANT=1549,Z3_OP_FD_LT=1550,Z3_OP_SEQ_UNIT=1551,Z3_OP_SEQ_EMPTY=1552,Z3_OP_SEQ_CONCAT=1553,Z3_OP_SEQ_PREFIX=1554,Z3_OP_SEQ_SUFFIX=1555,Z3_OP_SEQ_CONTAINS=1556,Z3_OP_SEQ_EXTRACT=1557,Z3_OP_SEQ_REPLACE=1558,Z3_OP_SEQ_REPLACE_RE=1559,Z3_OP_SEQ_REPLACE_RE_ALL=1560,Z3_OP_SEQ_REPLACE_ALL=1561,Z3_OP_SEQ_AT=1562,Z3_OP_SEQ_NTH=1563,Z3_OP_SEQ_LENGTH=1564,Z3_OP_SEQ_INDEX=1565,Z3_OP_SEQ_LAST_INDEX=1566,Z3_OP_SEQ_TO_RE=1567,Z3_OP_SEQ_IN_RE=1568,Z3_OP_STR_TO_INT=1569,Z3_OP_INT_TO_STR=1570,Z3_OP_UBV_TO_STR=1571,Z3_OP_SBV_TO_STR=1572,Z3_OP_STR_TO_CODE=1573,Z3_OP_STR_FROM_CODE=1574,Z3_OP_STRING_LT=1575,Z3_OP_STRING_LE=1576,Z3_OP_RE_PLUS=1577,Z3_OP_RE_STAR=1578,Z3_OP_RE_OPTION=1579,Z3_OP_RE_CONCAT=1580,Z3_OP_RE_UNION=1581,Z3_OP_RE_RANGE=1582,Z3_OP_RE_DIFF=1583,Z3_OP_RE_INTERSECT=1584,Z3_OP_RE_LOOP=1585,Z3_OP_RE_POWER=1586,Z3_OP_RE_COMPLEMENT=1587,Z3_OP_RE_EMPTY_SET=1588,Z3_OP_RE_FULL_SET=1589,Z3_OP_RE_FULL_CHAR_SET=1590,Z3_OP_RE_OF_PRED=1591,Z3_OP_RE_REVERSE=1592,Z3_OP_RE_DERIVATIVE=1593,Z3_OP_CHAR_CONST=1594,Z3_OP_CHAR_LE=1595,Z3_OP_CHAR_TO_INT=1596,Z3_OP_CHAR_TO_BV=1597,Z3_OP_CHAR_FROM_BV=1598,Z3_OP_CHAR_IS_DIGIT=1599,Z3_OP_LABEL=1792,Z3_OP_LABEL_LIT=1793,Z3_OP_DT_CONSTRUCTOR=2048,Z3_OP_DT_RECOGNISER=2049,Z3_OP_DT_IS=2050,Z3_OP_DT_ACCESSOR=2051,Z3_OP_DT_UPDATE_FIELD=2052,Z3_OP_PB_AT_MOST=2304,Z3_OP_PB_AT_LEAST=2305,Z3_OP_PB_LE=2306,Z3_OP_PB_GE=2307,Z3_OP_PB_EQ=2308,Z3_OP_SPECIAL_RELATION_LO=40960,Z3_OP_SPECIAL_RELATION_PO=40961,Z3_OP_SPECIAL_RELATION_PLO=40962,Z3_OP_SPECIAL_RELATION_TO=40963,Z3_OP_SPECIAL_RELATION_TC=40964,Z3_OP_SPECIAL_RELATION_TRC=40965,Z3_OP_FPA_RM_NEAREST_TIES_TO_EVEN=45056,Z3_OP_FPA_RM_NEAREST_TIES_TO_AWAY=45057,Z3_OP_FPA_RM_TOWARD_POSITIVE=45058,Z3_OP_FPA_RM_TOWARD_NEGATIVE=45059,Z3_OP_FPA_RM_TOWARD_ZERO=45060,Z3_OP_FPA_NUM=45061,Z3_OP_FPA_PLUS_INF=45062,Z3_OP_FPA_MINUS_INF=45063,Z3_OP_FPA_NAN=45064,Z3_OP_FPA_PLUS_ZERO=45065,Z3_OP_FPA_MINUS_ZERO=45066,Z3_OP_FPA_ADD=45067,Z3_OP_FPA_SUB=45068,Z3_OP_FPA_NEG=45069,Z3_OP_FPA_MUL=45070,Z3_OP_FPA_DIV=45071,Z3_OP_FPA_REM=45072,Z3_OP_FPA_ABS=45073,Z3_OP_FPA_MIN=45074,Z3_OP_FPA_MAX=45075,Z3_OP_FPA_FMA=45076,Z3_OP_FPA_SQRT=45077,Z3_OP_FPA_ROUND_TO_INTEGRAL=45078,Z3_OP_FPA_EQ=45079,Z3_OP_FPA_LT=45080,Z3_OP_FPA_GT=45081,Z3_OP_FPA_LE=45082,Z3_OP_FPA_GE=45083,Z3_OP_FPA_IS_NAN=45084,Z3_OP_FPA_IS_INF=45085,Z3_OP_FPA_IS_ZERO=45086,Z3_OP_FPA_IS_NORMAL=45087,Z3_OP_FPA_IS_SUBNORMAL=45088,Z3_OP_FPA_IS_NEGATIVE=45089,Z3_OP_FPA_IS_POSITIVE=45090,Z3_OP_FPA_FP=45091,Z3_OP_FPA_TO_FP=45092,Z3_OP_FPA_TO_FP_UNSIGNED=45093,Z3_OP_FPA_TO_UBV=45094,Z3_OP_FPA_TO_SBV=45095,Z3_OP_FPA_TO_REAL=45096,Z3_OP_FPA_TO_IEEE_BV=45097,Z3_OP_FPA_BVWRAP=45098,Z3_OP_FPA_BV2RM=45099,Z3_OP_INTERNAL=45100,Z3_OP_RECURSIVE=45101,Z3_OP_UNINTERPRETED=45102}export declare enum Z3_param_kind{Z3_PK_UINT=0,Z3_PK_BOOL=1,Z3_PK_DOUBLE=2,Z3_PK_SYMBOL=3,Z3_PK_STRING=4,Z3_PK_OTHER=5,Z3_PK_INVALID=6}export declare enum Z3_ast_print_mode{Z3_PRINT_SMTLIB_FULL=0,Z3_PRINT_LOW_LEVEL=1,Z3_PRINT_SMTLIB2_COMPLIANT=2}export declare enum Z3_error_code{Z3_OK=0,Z3_SORT_ERROR=1,Z3_IOB=2,Z3_INVALID_ARG=3,Z3_PARSER_ERROR=4,Z3_NO_PARSER=5,Z3_INVALID_PATTERN=6,Z3_MEMOUT_FAIL=7,Z3_FILE_ACCESS_ERROR=8,Z3_INTERNAL_FATAL=9,Z3_INVALID_USAGE=10,Z3_DEC_REF_ERROR=11,Z3_EXCEPTION=12}export declare enum Z3_goal_prec{Z3_GOAL_PRECISE=0,Z3_GOAL_UNDER=1,Z3_GOAL_OVER=2,Z3_GOAL_UNDER_OVER=3}export{};", "\\node_modules\\z3-solver\\build\\low-level\\wrapper.__GENERATED__.d.ts": "import{Z3_symbol,Z3_config,Z3_context,Z3_sort,Z3_func_decl,Z3_ast,Z3_app,Z3_pattern,Z3_model,Z3_constructor,Z3_constructor_list,Z3_params,Z3_param_descrs,Z3_parser_context,Z3_goal,Z3_tactic,Z3_probe,Z3_stats,Z3_solver,Z3_solver_callback,Z3_ast_vector,Z3_ast_map,Z3_apply_result,Z3_func_interp,Z3_func_entry,Z3_fixedpoint,Z3_optimize,Z3_rcf_num,Z3_lbool,Z3_symbol_kind,Z3_parameter_kind,Z3_sort_kind,Z3_ast_kind,Z3_decl_kind,Z3_param_kind,Z3_ast_print_mode,Z3_error_code,Z3_goal_prec}from'./types.__GENERATED__';declare type unsigned=number;declare type int=number;declare type uint64_t=bigint;declare type int64_t=bigint;declare type double=number;declare type float=number;export declare function init(initModule:any):Promise<{em:any;Z3:{mk_context:(c:Z3_config)=>Z3_context;mk_context_rc:(c:Z3_config)=>Z3_context;global_param_set:(param_id:string,param_value:string)=>void;global_param_reset_all:()=>void;global_param_get:(param_id:string)=>string|null;mk_config:()=>Z3_config;del_config:(c:Z3_config)=>void;set_param_value:(c:Z3_config,param_id:string,param_value:string)=>void;del_context:(c:Z3_context)=>void;inc_ref:(c:Z3_context,a:Z3_ast)=>void;dec_ref:(c:Z3_context,a:Z3_ast)=>void;update_param_value:(c:Z3_context,param_id:string,param_value:string)=>void;get_global_param_descrs:(c:Z3_context)=>Z3_param_descrs;interrupt:(c:Z3_context)=>void;enable_concurrent_dec_ref:(c:Z3_context)=>void;mk_params:(c:Z3_context)=>Z3_params;params_inc_ref:(c:Z3_context,p:Z3_params)=>void;params_dec_ref:(c:Z3_context,p:Z3_params)=>void;params_set_bool:(c:Z3_context,p:Z3_params,k:Z3_symbol,v:boolean)=>void;params_set_uint:(c:Z3_context,p:Z3_params,k:Z3_symbol,v:unsigned)=>void;params_set_double:(c:Z3_context,p:Z3_params,k:Z3_symbol,v:double)=>void;params_set_symbol:(c:Z3_context,p:Z3_params,k:Z3_symbol,v:Z3_symbol)=>void;params_to_string:(c:Z3_context,p:Z3_params)=>string;params_validate:(c:Z3_context,p:Z3_params,d:Z3_param_descrs)=>void;param_descrs_inc_ref:(c:Z3_context,p:Z3_param_descrs)=>void;param_descrs_dec_ref:(c:Z3_context,p:Z3_param_descrs)=>void;param_descrs_get_kind:(c:Z3_context,p:Z3_param_descrs,n:Z3_symbol)=>Z3_param_kind;param_descrs_size:(c:Z3_context,p:Z3_param_descrs)=>unsigned;param_descrs_get_name:(c:Z3_context,p:Z3_param_descrs,i:unsigned)=>Z3_symbol;param_descrs_get_documentation:(c:Z3_context,p:Z3_param_descrs,s:Z3_symbol)=>string;param_descrs_to_string:(c:Z3_context,p:Z3_param_descrs)=>string;mk_int_symbol:(c:Z3_context,i:int)=>Z3_symbol;mk_string_symbol:(c:Z3_context,s:string)=>Z3_symbol;mk_uninterpreted_sort:(c:Z3_context,s:Z3_symbol)=>Z3_sort;mk_bool_sort:(c:Z3_context)=>Z3_sort;mk_int_sort:(c:Z3_context)=>Z3_sort;mk_real_sort:(c:Z3_context)=>Z3_sort;mk_bv_sort:(c:Z3_context,sz:unsigned)=>Z3_sort;mk_finite_domain_sort:(c:Z3_context,name:Z3_symbol,size:uint64_t)=>Z3_sort;mk_array_sort:(c:Z3_context,domain:Z3_sort,range:Z3_sort)=>Z3_sort;mk_array_sort_n:(c:Z3_context,domain:Z3_sort[],range:Z3_sort)=>Z3_sort;mk_tuple_sort:(c:Z3_context,mk_tuple_name:Z3_symbol,field_names:Z3_symbol[],field_sorts:Z3_sort[])=>{rv:Z3_sort;mk_tuple_decl:Z3_func_decl;proj_decl:Z3_func_decl[];};mk_enumeration_sort:(c:Z3_context,name:Z3_symbol,enum_names:Z3_symbol[])=>{rv:Z3_sort;enum_consts:Z3_func_decl[];enum_testers:Z3_func_decl[];};mk_list_sort:(c:Z3_context,name:Z3_symbol,elem_sort:Z3_sort)=>{rv:Z3_sort;nil_decl:Z3_func_decl;is_nil_decl:Z3_func_decl;cons_decl:Z3_func_decl;is_cons_decl:Z3_func_decl;head_decl:Z3_func_decl;tail_decl:Z3_func_decl;};mk_constructor:(c:Z3_context,name:Z3_symbol,recognizer:Z3_symbol,field_names:Z3_symbol[],sorts:(Z3_sort|null)[],sort_refs:unsigned[])=>Z3_constructor;del_constructor:(c:Z3_context,constr:Z3_constructor)=>void;mk_datatype:(c:Z3_context,name:Z3_symbol,constructors:Z3_constructor[])=>Z3_sort;mk_datatype_sort:(c:Z3_context,name:Z3_symbol)=>Z3_sort;mk_constructor_list:(c:Z3_context,constructors:Z3_constructor[])=>Z3_constructor_list;del_constructor_list:(c:Z3_context,clist:Z3_constructor_list)=>void;mk_datatypes:(c:Z3_context,sort_names:Z3_symbol[],constructor_lists:Z3_constructor_list[])=>Z3_sort[];query_constructor:(c:Z3_context,constr:Z3_constructor,num_fields:unsigned)=>{constructor:Z3_func_decl;tester:Z3_func_decl;accessors:Z3_func_decl[];};mk_func_decl:(c:Z3_context,s:Z3_symbol,domain:Z3_sort[],range:Z3_sort)=>Z3_func_decl;mk_app:(c:Z3_context,d:Z3_func_decl,args:Z3_ast[])=>Z3_ast;mk_const:(c:Z3_context,s:Z3_symbol,ty:Z3_sort)=>Z3_ast;mk_fresh_func_decl:(c:Z3_context,prefix:string,domain:Z3_sort[],range:Z3_sort)=>Z3_func_decl;mk_fresh_const:(c:Z3_context,prefix:string,ty:Z3_sort)=>Z3_ast;mk_rec_func_decl:(c:Z3_context,s:Z3_symbol,domain:Z3_sort[],range:Z3_sort)=>Z3_func_decl;add_rec_def:(c:Z3_context,f:Z3_func_decl,args:Z3_ast[],body:Z3_ast)=>void;mk_true:(c:Z3_context)=>Z3_ast;mk_false:(c:Z3_context)=>Z3_ast;mk_eq:(c:Z3_context,l:Z3_ast,r:Z3_ast)=>Z3_ast;mk_distinct:(c:Z3_context,args:Z3_ast[])=>Z3_ast;mk_not:(c:Z3_context,a:Z3_ast)=>Z3_ast;mk_ite:(c:Z3_context,t1:Z3_ast,t2:Z3_ast,t3:Z3_ast)=>Z3_ast;mk_iff:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_implies:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_xor:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_and:(c:Z3_context,args:Z3_ast[])=>Z3_ast;mk_or:(c:Z3_context,args:Z3_ast[])=>Z3_ast;mk_add:(c:Z3_context,args:Z3_ast[])=>Z3_ast;mk_mul:(c:Z3_context,args:Z3_ast[])=>Z3_ast;mk_sub:(c:Z3_context,args:Z3_ast[])=>Z3_ast;mk_unary_minus:(c:Z3_context,arg:Z3_ast)=>Z3_ast;mk_div:(c:Z3_context,arg1:Z3_ast,arg2:Z3_ast)=>Z3_ast;mk_mod:(c:Z3_context,arg1:Z3_ast,arg2:Z3_ast)=>Z3_ast;mk_rem:(c:Z3_context,arg1:Z3_ast,arg2:Z3_ast)=>Z3_ast;mk_power:(c:Z3_context,arg1:Z3_ast,arg2:Z3_ast)=>Z3_ast;mk_lt:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_le:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_gt:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_ge:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_divides:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_int2real:(c:Z3_context,t1:Z3_ast)=>Z3_ast;mk_real2int:(c:Z3_context,t1:Z3_ast)=>Z3_ast;mk_is_int:(c:Z3_context,t1:Z3_ast)=>Z3_ast;mk_bvnot:(c:Z3_context,t1:Z3_ast)=>Z3_ast;mk_bvredand:(c:Z3_context,t1:Z3_ast)=>Z3_ast;mk_bvredor:(c:Z3_context,t1:Z3_ast)=>Z3_ast;mk_bvand:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvor:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvxor:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvnand:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvnor:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvxnor:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvneg:(c:Z3_context,t1:Z3_ast)=>Z3_ast;mk_bvadd:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvsub:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvmul:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvudiv:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvsdiv:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvurem:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvsrem:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvsmod:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvult:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvslt:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvule:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvsle:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvuge:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvsge:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvugt:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvsgt:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_concat:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_extract:(c:Z3_context,high:unsigned,low:unsigned,t1:Z3_ast)=>Z3_ast;mk_sign_ext:(c:Z3_context,i:unsigned,t1:Z3_ast)=>Z3_ast;mk_zero_ext:(c:Z3_context,i:unsigned,t1:Z3_ast)=>Z3_ast;mk_repeat:(c:Z3_context,i:unsigned,t1:Z3_ast)=>Z3_ast;mk_bit2bool:(c:Z3_context,i:unsigned,t1:Z3_ast)=>Z3_ast;mk_bvshl:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvlshr:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvashr:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_rotate_left:(c:Z3_context,i:unsigned,t1:Z3_ast)=>Z3_ast;mk_rotate_right:(c:Z3_context,i:unsigned,t1:Z3_ast)=>Z3_ast;mk_ext_rotate_left:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_ext_rotate_right:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_int2bv:(c:Z3_context,n:unsigned,t1:Z3_ast)=>Z3_ast;mk_bv2int:(c:Z3_context,t1:Z3_ast,is_signed:boolean)=>Z3_ast;mk_bvadd_no_overflow:(c:Z3_context,t1:Z3_ast,t2:Z3_ast,is_signed:boolean)=>Z3_ast;mk_bvadd_no_underflow:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvsub_no_overflow:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvsub_no_underflow:(c:Z3_context,t1:Z3_ast,t2:Z3_ast,is_signed:boolean)=>Z3_ast;mk_bvsdiv_no_overflow:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_bvneg_no_overflow:(c:Z3_context,t1:Z3_ast)=>Z3_ast;mk_bvmul_no_overflow:(c:Z3_context,t1:Z3_ast,t2:Z3_ast,is_signed:boolean)=>Z3_ast;mk_bvmul_no_underflow:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_select:(c:Z3_context,a:Z3_ast,i:Z3_ast)=>Z3_ast;mk_select_n:(c:Z3_context,a:Z3_ast,idxs:Z3_ast[])=>Z3_ast;mk_store:(c:Z3_context,a:Z3_ast,i:Z3_ast,v:Z3_ast)=>Z3_ast;mk_store_n:(c:Z3_context,a:Z3_ast,idxs:Z3_ast[],v:Z3_ast)=>Z3_ast;mk_const_array:(c:Z3_context,domain:Z3_sort,v:Z3_ast)=>Z3_ast;mk_map:(c:Z3_context,f:Z3_func_decl,args:Z3_ast[])=>Z3_ast;mk_array_default:(c:Z3_context,array:Z3_ast)=>Z3_ast;mk_as_array:(c:Z3_context,f:Z3_func_decl)=>Z3_ast;mk_set_has_size:(c:Z3_context,set:Z3_ast,k:Z3_ast)=>Z3_ast;mk_set_sort:(c:Z3_context,ty:Z3_sort)=>Z3_sort;mk_empty_set:(c:Z3_context,domain:Z3_sort)=>Z3_ast;mk_full_set:(c:Z3_context,domain:Z3_sort)=>Z3_ast;mk_set_add:(c:Z3_context,set:Z3_ast,elem:Z3_ast)=>Z3_ast;mk_set_del:(c:Z3_context,set:Z3_ast,elem:Z3_ast)=>Z3_ast;mk_set_union:(c:Z3_context,args:Z3_ast[])=>Z3_ast;mk_set_intersect:(c:Z3_context,args:Z3_ast[])=>Z3_ast;mk_set_difference:(c:Z3_context,arg1:Z3_ast,arg2:Z3_ast)=>Z3_ast;mk_set_complement:(c:Z3_context,arg:Z3_ast)=>Z3_ast;mk_set_member:(c:Z3_context,elem:Z3_ast,set:Z3_ast)=>Z3_ast;mk_set_subset:(c:Z3_context,arg1:Z3_ast,arg2:Z3_ast)=>Z3_ast;mk_array_ext:(c:Z3_context,arg1:Z3_ast,arg2:Z3_ast)=>Z3_ast;mk_numeral:(c:Z3_context,numeral:string,ty:Z3_sort)=>Z3_ast;mk_real:(c:Z3_context,num:int,den:int)=>Z3_ast;mk_int:(c:Z3_context,v:int,ty:Z3_sort)=>Z3_ast;mk_unsigned_int:(c:Z3_context,v:unsigned,ty:Z3_sort)=>Z3_ast;mk_int64:(c:Z3_context,v:int64_t,ty:Z3_sort)=>Z3_ast;mk_unsigned_int64:(c:Z3_context,v:uint64_t,ty:Z3_sort)=>Z3_ast;mk_bv_numeral:(c:Z3_context,bits:boolean[])=>Z3_ast;mk_seq_sort:(c:Z3_context,s:Z3_sort)=>Z3_sort;is_seq_sort:(c:Z3_context,s:Z3_sort)=>boolean;get_seq_sort_basis:(c:Z3_context,s:Z3_sort)=>Z3_sort;mk_re_sort:(c:Z3_context,seq:Z3_sort)=>Z3_sort;is_re_sort:(c:Z3_context,s:Z3_sort)=>boolean;get_re_sort_basis:(c:Z3_context,s:Z3_sort)=>Z3_sort;mk_string_sort:(c:Z3_context)=>Z3_sort;mk_char_sort:(c:Z3_context)=>Z3_sort;is_string_sort:(c:Z3_context,s:Z3_sort)=>boolean;is_char_sort:(c:Z3_context,s:Z3_sort)=>boolean;mk_string:(c:Z3_context,s:string)=>Z3_ast;mk_lstring:(c:Z3_context,len:unsigned,s:string)=>Z3_ast;mk_u32string:(c:Z3_context,chars:unsigned[])=>Z3_ast;is_string:(c:Z3_context,s:Z3_ast)=>boolean;get_string:(c:Z3_context,s:Z3_ast)=>string;get_string_length:(c:Z3_context,s:Z3_ast)=>unsigned;get_string_contents:(c:Z3_context,s:Z3_ast,length:unsigned)=>unsigned[];mk_seq_empty:(c:Z3_context,seq:Z3_sort)=>Z3_ast;mk_seq_unit:(c:Z3_context,a:Z3_ast)=>Z3_ast;mk_seq_concat:(c:Z3_context,args:Z3_ast[])=>Z3_ast;mk_seq_prefix:(c:Z3_context,prefix:Z3_ast,s:Z3_ast)=>Z3_ast;mk_seq_suffix:(c:Z3_context,suffix:Z3_ast,s:Z3_ast)=>Z3_ast;mk_seq_contains:(c:Z3_context,container:Z3_ast,containee:Z3_ast)=>Z3_ast;mk_str_lt:(c:Z3_context,prefix:Z3_ast,s:Z3_ast)=>Z3_ast;mk_str_le:(c:Z3_context,prefix:Z3_ast,s:Z3_ast)=>Z3_ast;mk_seq_extract:(c:Z3_context,s:Z3_ast,offset:Z3_ast,length:Z3_ast)=>Z3_ast;mk_seq_replace:(c:Z3_context,s:Z3_ast,src:Z3_ast,dst:Z3_ast)=>Z3_ast;mk_seq_at:(c:Z3_context,s:Z3_ast,index:Z3_ast)=>Z3_ast;mk_seq_nth:(c:Z3_context,s:Z3_ast,index:Z3_ast)=>Z3_ast;mk_seq_length:(c:Z3_context,s:Z3_ast)=>Z3_ast;mk_seq_index:(c:Z3_context,s:Z3_ast,substr:Z3_ast,offset:Z3_ast)=>Z3_ast;mk_seq_last_index:(c:Z3_context,UNNAMED:Z3_ast,substr:Z3_ast)=>Z3_ast;mk_str_to_int:(c:Z3_context,s:Z3_ast)=>Z3_ast;mk_int_to_str:(c:Z3_context,s:Z3_ast)=>Z3_ast;mk_string_to_code:(c:Z3_context,a:Z3_ast)=>Z3_ast;mk_string_from_code:(c:Z3_context,a:Z3_ast)=>Z3_ast;mk_ubv_to_str:(c:Z3_context,s:Z3_ast)=>Z3_ast;mk_sbv_to_str:(c:Z3_context,s:Z3_ast)=>Z3_ast;mk_seq_to_re:(c:Z3_context,seq:Z3_ast)=>Z3_ast;mk_seq_in_re:(c:Z3_context,seq:Z3_ast,re:Z3_ast)=>Z3_ast;mk_re_plus:(c:Z3_context,re:Z3_ast)=>Z3_ast;mk_re_star:(c:Z3_context,re:Z3_ast)=>Z3_ast;mk_re_option:(c:Z3_context,re:Z3_ast)=>Z3_ast;mk_re_union:(c:Z3_context,args:Z3_ast[])=>Z3_ast;mk_re_concat:(c:Z3_context,args:Z3_ast[])=>Z3_ast;mk_re_range:(c:Z3_context,lo:Z3_ast,hi:Z3_ast)=>Z3_ast;mk_re_allchar:(c:Z3_context,regex_sort:Z3_sort)=>Z3_ast;mk_re_loop:(c:Z3_context,r:Z3_ast,lo:unsigned,hi:unsigned)=>Z3_ast;mk_re_power:(c:Z3_context,UNNAMED:Z3_ast,n:unsigned)=>Z3_ast;mk_re_intersect:(c:Z3_context,args:Z3_ast[])=>Z3_ast;mk_re_complement:(c:Z3_context,re:Z3_ast)=>Z3_ast;mk_re_diff:(c:Z3_context,re1:Z3_ast,re2:Z3_ast)=>Z3_ast;mk_re_empty:(c:Z3_context,re:Z3_sort)=>Z3_ast;mk_re_full:(c:Z3_context,re:Z3_sort)=>Z3_ast;mk_char:(c:Z3_context,ch:unsigned)=>Z3_ast;mk_char_le:(c:Z3_context,ch1:Z3_ast,ch2:Z3_ast)=>Z3_ast;mk_char_to_int:(c:Z3_context,ch:Z3_ast)=>Z3_ast;mk_char_to_bv:(c:Z3_context,ch:Z3_ast)=>Z3_ast;mk_char_from_bv:(c:Z3_context,bv:Z3_ast)=>Z3_ast;mk_char_is_digit:(c:Z3_context,ch:Z3_ast)=>Z3_ast;mk_linear_order:(c:Z3_context,a:Z3_sort,id:unsigned)=>Z3_func_decl;mk_partial_order:(c:Z3_context,a:Z3_sort,id:unsigned)=>Z3_func_decl;mk_piecewise_linear_order:(c:Z3_context,a:Z3_sort,id:unsigned)=>Z3_func_decl;mk_tree_order:(c:Z3_context,a:Z3_sort,id:unsigned)=>Z3_func_decl;mk_transitive_closure:(c:Z3_context,f:Z3_func_decl)=>Z3_func_decl;mk_pattern:(c:Z3_context,terms:Z3_ast[])=>Z3_pattern;mk_bound:(c:Z3_context,index:unsigned,ty:Z3_sort)=>Z3_ast;mk_forall:(c:Z3_context,weight:unsigned,patterns:Z3_pattern[],sorts:Z3_sort[],decl_names:Z3_symbol[],body:Z3_ast)=>Z3_ast;mk_exists:(c:Z3_context,weight:unsigned,patterns:Z3_pattern[],sorts:Z3_sort[],decl_names:Z3_symbol[],body:Z3_ast)=>Z3_ast;mk_quantifier:(c:Z3_context,is_forall:boolean,weight:unsigned,patterns:Z3_pattern[],sorts:Z3_sort[],decl_names:Z3_symbol[],body:Z3_ast)=>Z3_ast;mk_quantifier_ex:(c:Z3_context,is_forall:boolean,weight:unsigned,quantifier_id:Z3_symbol,skolem_id:Z3_symbol,patterns:Z3_pattern[],no_patterns:Z3_ast[],sorts:Z3_sort[],decl_names:Z3_symbol[],body:Z3_ast)=>Z3_ast;mk_forall_const:(c:Z3_context,weight:unsigned,bound:Z3_app[],patterns:Z3_pattern[],body:Z3_ast)=>Z3_ast;mk_exists_const:(c:Z3_context,weight:unsigned,bound:Z3_app[],patterns:Z3_pattern[],body:Z3_ast)=>Z3_ast;mk_quantifier_const:(c:Z3_context,is_forall:boolean,weight:unsigned,bound:Z3_app[],patterns:Z3_pattern[],body:Z3_ast)=>Z3_ast;mk_quantifier_const_ex:(c:Z3_context,is_forall:boolean,weight:unsigned,quantifier_id:Z3_symbol,skolem_id:Z3_symbol,bound:Z3_app[],patterns:Z3_pattern[],no_patterns:Z3_ast[],body:Z3_ast)=>Z3_ast;mk_lambda:(c:Z3_context,sorts:Z3_sort[],decl_names:Z3_symbol[],body:Z3_ast)=>Z3_ast;mk_lambda_const:(c:Z3_context,bound:Z3_app[],body:Z3_ast)=>Z3_ast;get_symbol_kind:(c:Z3_context,s:Z3_symbol)=>Z3_symbol_kind;get_symbol_int:(c:Z3_context,s:Z3_symbol)=>int;get_symbol_string:(c:Z3_context,s:Z3_symbol)=>string;get_sort_name:(c:Z3_context,d:Z3_sort)=>Z3_symbol;get_sort_id:(c:Z3_context,s:Z3_sort)=>unsigned;sort_to_ast:(c:Z3_context,s:Z3_sort)=>Z3_ast;is_eq_sort:(c:Z3_context,s1:Z3_sort,s2:Z3_sort)=>boolean;get_sort_kind:(c:Z3_context,t:Z3_sort)=>Z3_sort_kind;get_bv_sort_size:(c:Z3_context,t:Z3_sort)=>unsigned;get_finite_domain_sort_size:(c:Z3_context,s:Z3_sort)=>uint64_t|null;get_array_sort_domain:(c:Z3_context,t:Z3_sort)=>Z3_sort;get_array_sort_domain_n:(c:Z3_context,t:Z3_sort,idx:unsigned)=>Z3_sort;get_array_sort_range:(c:Z3_context,t:Z3_sort)=>Z3_sort;get_tuple_sort_mk_decl:(c:Z3_context,t:Z3_sort)=>Z3_func_decl;get_tuple_sort_num_fields:(c:Z3_context,t:Z3_sort)=>unsigned;get_tuple_sort_field_decl:(c:Z3_context,t:Z3_sort,i:unsigned)=>Z3_func_decl;get_datatype_sort_num_constructors:(c:Z3_context,t:Z3_sort)=>unsigned;get_datatype_sort_constructor:(c:Z3_context,t:Z3_sort,idx:unsigned)=>Z3_func_decl;get_datatype_sort_recognizer:(c:Z3_context,t:Z3_sort,idx:unsigned)=>Z3_func_decl;get_datatype_sort_constructor_accessor:(c:Z3_context,t:Z3_sort,idx_c:unsigned,idx_a:unsigned)=>Z3_func_decl;datatype_update_field:(c:Z3_context,field_access:Z3_func_decl,t:Z3_ast,value:Z3_ast)=>Z3_ast;get_relation_arity:(c:Z3_context,s:Z3_sort)=>unsigned;get_relation_column:(c:Z3_context,s:Z3_sort,col:unsigned)=>Z3_sort;mk_atmost:(c:Z3_context,args:Z3_ast[],k:unsigned)=>Z3_ast;mk_atleast:(c:Z3_context,args:Z3_ast[],k:unsigned)=>Z3_ast;mk_pble:(c:Z3_context,args:Z3_ast[],coeffs:int[],k:int)=>Z3_ast;mk_pbge:(c:Z3_context,args:Z3_ast[],coeffs:int[],k:int)=>Z3_ast;mk_pbeq:(c:Z3_context,args:Z3_ast[],coeffs:int[],k:int)=>Z3_ast;func_decl_to_ast:(c:Z3_context,f:Z3_func_decl)=>Z3_ast;is_eq_func_decl:(c:Z3_context,f1:Z3_func_decl,f2:Z3_func_decl)=>boolean;get_func_decl_id:(c:Z3_context,f:Z3_func_decl)=>unsigned;get_decl_name:(c:Z3_context,d:Z3_func_decl)=>Z3_symbol;get_decl_kind:(c:Z3_context,d:Z3_func_decl)=>Z3_decl_kind;get_domain_size:(c:Z3_context,d:Z3_func_decl)=>unsigned;get_arity:(c:Z3_context,d:Z3_func_decl)=>unsigned;get_domain:(c:Z3_context,d:Z3_func_decl,i:unsigned)=>Z3_sort;get_range:(c:Z3_context,d:Z3_func_decl)=>Z3_sort;get_decl_num_parameters:(c:Z3_context,d:Z3_func_decl)=>unsigned;get_decl_parameter_kind:(c:Z3_context,d:Z3_func_decl,idx:unsigned)=>Z3_parameter_kind;get_decl_int_parameter:(c:Z3_context,d:Z3_func_decl,idx:unsigned)=>int;get_decl_double_parameter:(c:Z3_context,d:Z3_func_decl,idx:unsigned)=>double;get_decl_symbol_parameter:(c:Z3_context,d:Z3_func_decl,idx:unsigned)=>Z3_symbol;get_decl_sort_parameter:(c:Z3_context,d:Z3_func_decl,idx:unsigned)=>Z3_sort;get_decl_ast_parameter:(c:Z3_context,d:Z3_func_decl,idx:unsigned)=>Z3_ast;get_decl_func_decl_parameter:(c:Z3_context,d:Z3_func_decl,idx:unsigned)=>Z3_func_decl;get_decl_rational_parameter:(c:Z3_context,d:Z3_func_decl,idx:unsigned)=>string;app_to_ast:(c:Z3_context,a:Z3_app)=>Z3_ast;get_app_decl:(c:Z3_context,a:Z3_app)=>Z3_func_decl;get_app_num_args:(c:Z3_context,a:Z3_app)=>unsigned;get_app_arg:(c:Z3_context,a:Z3_app,i:unsigned)=>Z3_ast;is_eq_ast:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>boolean;get_ast_id:(c:Z3_context,t:Z3_ast)=>unsigned;get_ast_hash:(c:Z3_context,a:Z3_ast)=>unsigned;get_sort:(c:Z3_context,a:Z3_ast)=>Z3_sort;is_well_sorted:(c:Z3_context,t:Z3_ast)=>boolean;get_bool_value:(c:Z3_context,a:Z3_ast)=>Z3_lbool;get_ast_kind:(c:Z3_context,a:Z3_ast)=>Z3_ast_kind;is_app:(c:Z3_context,a:Z3_ast)=>boolean;is_numeral_ast:(c:Z3_context,a:Z3_ast)=>boolean;is_algebraic_number:(c:Z3_context,a:Z3_ast)=>boolean;to_app:(c:Z3_context,a:Z3_ast)=>Z3_app;to_func_decl:(c:Z3_context,a:Z3_ast)=>Z3_func_decl;get_numeral_string:(c:Z3_context,a:Z3_ast)=>string;get_numeral_binary_string:(c:Z3_context,a:Z3_ast)=>string;get_numeral_decimal_string:(c:Z3_context,a:Z3_ast,precision:unsigned)=>string;get_numeral_double:(c:Z3_context,a:Z3_ast)=>double;get_numerator:(c:Z3_context,a:Z3_ast)=>Z3_ast;get_denominator:(c:Z3_context,a:Z3_ast)=>Z3_ast;get_numeral_small:(c:Z3_context,a:Z3_ast)=>{num:int64_t;den:int64_t;}|null;get_numeral_int:(c:Z3_context,v:Z3_ast)=>int|null;get_numeral_uint:(c:Z3_context,v:Z3_ast)=>unsigned|null;get_numeral_uint64:(c:Z3_context,v:Z3_ast)=>uint64_t|null;get_numeral_int64:(c:Z3_context,v:Z3_ast)=>int64_t|null;get_numeral_rational_int64:(c:Z3_context,v:Z3_ast)=>{num:int64_t;den:int64_t;}|null;get_algebraic_number_lower:(c:Z3_context,a:Z3_ast,precision:unsigned)=>Z3_ast;get_algebraic_number_upper:(c:Z3_context,a:Z3_ast,precision:unsigned)=>Z3_ast;pattern_to_ast:(c:Z3_context,p:Z3_pattern)=>Z3_ast;get_pattern_num_terms:(c:Z3_context,p:Z3_pattern)=>unsigned;get_pattern:(c:Z3_context,p:Z3_pattern,idx:unsigned)=>Z3_ast;get_index_value:(c:Z3_context,a:Z3_ast)=>unsigned;is_quantifier_forall:(c:Z3_context,a:Z3_ast)=>boolean;is_quantifier_exists:(c:Z3_context,a:Z3_ast)=>boolean;is_lambda:(c:Z3_context,a:Z3_ast)=>boolean;get_quantifier_weight:(c:Z3_context,a:Z3_ast)=>unsigned;get_quantifier_num_patterns:(c:Z3_context,a:Z3_ast)=>unsigned;get_quantifier_pattern_ast:(c:Z3_context,a:Z3_ast,i:unsigned)=>Z3_pattern;get_quantifier_num_no_patterns:(c:Z3_context,a:Z3_ast)=>unsigned;get_quantifier_no_pattern_ast:(c:Z3_context,a:Z3_ast,i:unsigned)=>Z3_ast;get_quantifier_num_bound:(c:Z3_context,a:Z3_ast)=>unsigned;get_quantifier_bound_name:(c:Z3_context,a:Z3_ast,i:unsigned)=>Z3_symbol;get_quantifier_bound_sort:(c:Z3_context,a:Z3_ast,i:unsigned)=>Z3_sort;get_quantifier_body:(c:Z3_context,a:Z3_ast)=>Z3_ast;simplify:(c:Z3_context,a:Z3_ast)=>Promise<Z3_ast>;simplify_ex:(c:Z3_context,a:Z3_ast,p:Z3_params)=>Promise<Z3_ast>;simplify_get_help:(c:Z3_context)=>string;simplify_get_param_descrs:(c:Z3_context)=>Z3_param_descrs;update_term:(c:Z3_context,a:Z3_ast,args:Z3_ast[])=>Z3_ast;substitute:(c:Z3_context,a:Z3_ast,from:Z3_ast[],to:Z3_ast[])=>Z3_ast;substitute_vars:(c:Z3_context,a:Z3_ast,to:Z3_ast[])=>Z3_ast;substitute_funs:(c:Z3_context,a:Z3_ast,from:Z3_func_decl[],to:Z3_ast[])=>Z3_ast;translate:(source:Z3_context,a:Z3_ast,target:Z3_context)=>Z3_ast;mk_model:(c:Z3_context)=>Z3_model;model_inc_ref:(c:Z3_context,m:Z3_model)=>void;model_dec_ref:(c:Z3_context,m:Z3_model)=>void;model_eval:(c:Z3_context,m:Z3_model,t:Z3_ast,model_completion:boolean)=>Z3_ast|null;model_get_const_interp:(c:Z3_context,m:Z3_model,a:Z3_func_decl)=>Z3_ast|null;model_has_interp:(c:Z3_context,m:Z3_model,a:Z3_func_decl)=>boolean;model_get_func_interp:(c:Z3_context,m:Z3_model,f:Z3_func_decl)=>Z3_func_interp|null;model_get_num_consts:(c:Z3_context,m:Z3_model)=>unsigned;model_get_const_decl:(c:Z3_context,m:Z3_model,i:unsigned)=>Z3_func_decl;model_get_num_funcs:(c:Z3_context,m:Z3_model)=>unsigned;model_get_func_decl:(c:Z3_context,m:Z3_model,i:unsigned)=>Z3_func_decl;model_get_num_sorts:(c:Z3_context,m:Z3_model)=>unsigned;model_get_sort:(c:Z3_context,m:Z3_model,i:unsigned)=>Z3_sort;model_get_sort_universe:(c:Z3_context,m:Z3_model,s:Z3_sort)=>Z3_ast_vector;model_translate:(c:Z3_context,m:Z3_model,dst:Z3_context)=>Z3_model;is_as_array:(c:Z3_context,a:Z3_ast)=>boolean;get_as_array_func_decl:(c:Z3_context,a:Z3_ast)=>Z3_func_decl;add_func_interp:(c:Z3_context,m:Z3_model,f:Z3_func_decl,default_value:Z3_ast)=>Z3_func_interp;add_const_interp:(c:Z3_context,m:Z3_model,f:Z3_func_decl,a:Z3_ast)=>void;func_interp_inc_ref:(c:Z3_context,f:Z3_func_interp)=>void;func_interp_dec_ref:(c:Z3_context,f:Z3_func_interp)=>void;func_interp_get_num_entries:(c:Z3_context,f:Z3_func_interp)=>unsigned;func_interp_get_entry:(c:Z3_context,f:Z3_func_interp,i:unsigned)=>Z3_func_entry;func_interp_get_else:(c:Z3_context,f:Z3_func_interp)=>Z3_ast;func_interp_set_else:(c:Z3_context,f:Z3_func_interp,else_value:Z3_ast)=>void;func_interp_get_arity:(c:Z3_context,f:Z3_func_interp)=>unsigned;func_interp_add_entry:(c:Z3_context,fi:Z3_func_interp,args:Z3_ast_vector,value:Z3_ast)=>void;func_entry_inc_ref:(c:Z3_context,e:Z3_func_entry)=>void;func_entry_dec_ref:(c:Z3_context,e:Z3_func_entry)=>void;func_entry_get_value:(c:Z3_context,e:Z3_func_entry)=>Z3_ast;func_entry_get_num_args:(c:Z3_context,e:Z3_func_entry)=>unsigned;func_entry_get_arg:(c:Z3_context,e:Z3_func_entry,i:unsigned)=>Z3_ast;open_log:(filename:string)=>boolean;append_log:(string:string)=>void;close_log:()=>void;toggle_warning_messages:(enabled:boolean)=>void;set_ast_print_mode:(c:Z3_context,mode:Z3_ast_print_mode)=>void;ast_to_string:(c:Z3_context,a:Z3_ast)=>string;pattern_to_string:(c:Z3_context,p:Z3_pattern)=>string;sort_to_string:(c:Z3_context,s:Z3_sort)=>string;func_decl_to_string:(c:Z3_context,d:Z3_func_decl)=>string;model_to_string:(c:Z3_context,m:Z3_model)=>string;benchmark_to_smtlib_string:(c:Z3_context,name:string,logic:string,status:string,attributes:string,assumptions:Z3_ast[],formula:Z3_ast)=>string;parse_smtlib2_string:(c:Z3_context,str:string,sort_names:Z3_symbol[],sorts:Z3_sort[],decl_names:Z3_symbol[],decls:Z3_func_decl[])=>Z3_ast_vector;parse_smtlib2_file:(c:Z3_context,file_name:string,sort_names:Z3_symbol[],sorts:Z3_sort[],decl_names:Z3_symbol[],decls:Z3_func_decl[])=>Z3_ast_vector;eval_smtlib2_string:(UNNAMED:Z3_context,str:string)=>Promise<string>;mk_parser_context:(c:Z3_context)=>Z3_parser_context;parser_context_inc_ref:(c:Z3_context,pc:Z3_parser_context)=>void;parser_context_dec_ref:(c:Z3_context,pc:Z3_parser_context)=>void;parser_context_add_sort:(c:Z3_context,pc:Z3_parser_context,s:Z3_sort)=>void;parser_context_add_decl:(c:Z3_context,pc:Z3_parser_context,f:Z3_func_decl)=>void;parser_context_from_string:(c:Z3_context,pc:Z3_parser_context,s:string)=>Z3_ast_vector;get_error_code:(c:Z3_context)=>Z3_error_code;set_error:(c:Z3_context,e:Z3_error_code)=>void;get_error_msg:(c:Z3_context,err:Z3_error_code)=>string;get_version:()=>{major:unsigned;minor:unsigned;build_number:unsigned;revision_number:unsigned;};get_full_version:()=>string;enable_trace:(tag:string)=>void;disable_trace:(tag:string)=>void;reset_memory:()=>void;finalize_memory:()=>void;mk_goal:(c:Z3_context,models:boolean,unsat_cores:boolean,proofs:boolean)=>Z3_goal;goal_inc_ref:(c:Z3_context,g:Z3_goal)=>void;goal_dec_ref:(c:Z3_context,g:Z3_goal)=>void;goal_precision:(c:Z3_context,g:Z3_goal)=>Z3_goal_prec;goal_assert:(c:Z3_context,g:Z3_goal,a:Z3_ast)=>void;goal_inconsistent:(c:Z3_context,g:Z3_goal)=>boolean;goal_depth:(c:Z3_context,g:Z3_goal)=>unsigned;goal_reset:(c:Z3_context,g:Z3_goal)=>void;goal_size:(c:Z3_context,g:Z3_goal)=>unsigned;goal_formula:(c:Z3_context,g:Z3_goal,idx:unsigned)=>Z3_ast;goal_num_exprs:(c:Z3_context,g:Z3_goal)=>unsigned;goal_is_decided_sat:(c:Z3_context,g:Z3_goal)=>boolean;goal_is_decided_unsat:(c:Z3_context,g:Z3_goal)=>boolean;goal_translate:(source:Z3_context,g:Z3_goal,target:Z3_context)=>Z3_goal;goal_convert_model:(c:Z3_context,g:Z3_goal,m:Z3_model)=>Z3_model;goal_to_string:(c:Z3_context,g:Z3_goal)=>string;goal_to_dimacs_string:(c:Z3_context,g:Z3_goal,include_names:boolean)=>string;mk_tactic:(c:Z3_context,name:string)=>Z3_tactic;tactic_inc_ref:(c:Z3_context,t:Z3_tactic)=>void;tactic_dec_ref:(c:Z3_context,g:Z3_tactic)=>void;mk_probe:(c:Z3_context,name:string)=>Z3_probe;probe_inc_ref:(c:Z3_context,p:Z3_probe)=>void;probe_dec_ref:(c:Z3_context,p:Z3_probe)=>void;tactic_and_then:(c:Z3_context,t1:Z3_tactic,t2:Z3_tactic)=>Z3_tactic;tactic_or_else:(c:Z3_context,t1:Z3_tactic,t2:Z3_tactic)=>Z3_tactic;tactic_par_or:(c:Z3_context,ts:Z3_tactic[])=>Z3_tactic;tactic_par_and_then:(c:Z3_context,t1:Z3_tactic,t2:Z3_tactic)=>Z3_tactic;tactic_try_for:(c:Z3_context,t:Z3_tactic,ms:unsigned)=>Z3_tactic;tactic_when:(c:Z3_context,p:Z3_probe,t:Z3_tactic)=>Z3_tactic;tactic_cond:(c:Z3_context,p:Z3_probe,t1:Z3_tactic,t2:Z3_tactic)=>Z3_tactic;tactic_repeat:(c:Z3_context,t:Z3_tactic,max:unsigned)=>Z3_tactic;tactic_skip:(c:Z3_context)=>Z3_tactic;tactic_fail:(c:Z3_context)=>Z3_tactic;tactic_fail_if:(c:Z3_context,p:Z3_probe)=>Z3_tactic;tactic_fail_if_not_decided:(c:Z3_context)=>Z3_tactic;tactic_using_params:(c:Z3_context,t:Z3_tactic,p:Z3_params)=>Z3_tactic;probe_const:(x:Z3_context,val:double)=>Z3_probe;probe_lt:(x:Z3_context,p1:Z3_probe,p2:Z3_probe)=>Z3_probe;probe_gt:(x:Z3_context,p1:Z3_probe,p2:Z3_probe)=>Z3_probe;probe_le:(x:Z3_context,p1:Z3_probe,p2:Z3_probe)=>Z3_probe;probe_ge:(x:Z3_context,p1:Z3_probe,p2:Z3_probe)=>Z3_probe;probe_eq:(x:Z3_context,p1:Z3_probe,p2:Z3_probe)=>Z3_probe;probe_and:(x:Z3_context,p1:Z3_probe,p2:Z3_probe)=>Z3_probe;probe_or:(x:Z3_context,p1:Z3_probe,p2:Z3_probe)=>Z3_probe;probe_not:(x:Z3_context,p:Z3_probe)=>Z3_probe;get_num_tactics:(c:Z3_context)=>unsigned;get_tactic_name:(c:Z3_context,i:unsigned)=>string;get_num_probes:(c:Z3_context)=>unsigned;get_probe_name:(c:Z3_context,i:unsigned)=>string;tactic_get_help:(c:Z3_context,t:Z3_tactic)=>string;tactic_get_param_descrs:(c:Z3_context,t:Z3_tactic)=>Z3_param_descrs;tactic_get_descr:(c:Z3_context,name:string)=>string;probe_get_descr:(c:Z3_context,name:string)=>string;probe_apply:(c:Z3_context,p:Z3_probe,g:Z3_goal)=>double;tactic_apply:(c:Z3_context,t:Z3_tactic,g:Z3_goal)=>Promise<Z3_apply_result>;tactic_apply_ex:(c:Z3_context,t:Z3_tactic,g:Z3_goal,p:Z3_params)=>Promise<Z3_apply_result>;apply_result_inc_ref:(c:Z3_context,r:Z3_apply_result)=>void;apply_result_dec_ref:(c:Z3_context,r:Z3_apply_result)=>void;apply_result_to_string:(c:Z3_context,r:Z3_apply_result)=>string;apply_result_get_num_subgoals:(c:Z3_context,r:Z3_apply_result)=>unsigned;apply_result_get_subgoal:(c:Z3_context,r:Z3_apply_result,i:unsigned)=>Z3_goal;mk_solver:(c:Z3_context)=>Z3_solver;mk_simple_solver:(c:Z3_context)=>Z3_solver;mk_solver_for_logic:(c:Z3_context,logic:Z3_symbol)=>Z3_solver;mk_solver_from_tactic:(c:Z3_context,t:Z3_tactic)=>Z3_solver;solver_translate:(source:Z3_context,s:Z3_solver,target:Z3_context)=>Z3_solver;solver_import_model_converter:(ctx:Z3_context,src:Z3_solver,dst:Z3_solver)=>void;solver_get_help:(c:Z3_context,s:Z3_solver)=>string;solver_get_param_descrs:(c:Z3_context,s:Z3_solver)=>Z3_param_descrs;solver_set_params:(c:Z3_context,s:Z3_solver,p:Z3_params)=>void;solver_inc_ref:(c:Z3_context,s:Z3_solver)=>void;solver_dec_ref:(c:Z3_context,s:Z3_solver)=>void;solver_interrupt:(c:Z3_context,s:Z3_solver)=>void;solver_push:(c:Z3_context,s:Z3_solver)=>void;solver_pop:(c:Z3_context,s:Z3_solver,n:unsigned)=>void;solver_reset:(c:Z3_context,s:Z3_solver)=>void;solver_get_num_scopes:(c:Z3_context,s:Z3_solver)=>unsigned;solver_assert:(c:Z3_context,s:Z3_solver,a:Z3_ast)=>void;solver_assert_and_track:(c:Z3_context,s:Z3_solver,a:Z3_ast,p:Z3_ast)=>void;solver_from_file:(c:Z3_context,s:Z3_solver,file_name:string)=>void;solver_from_string:(c:Z3_context,s:Z3_solver,file_name:string)=>void;solver_get_assertions:(c:Z3_context,s:Z3_solver)=>Z3_ast_vector;solver_get_units:(c:Z3_context,s:Z3_solver)=>Z3_ast_vector;solver_get_trail:(c:Z3_context,s:Z3_solver)=>Z3_ast_vector;solver_get_non_units:(c:Z3_context,s:Z3_solver)=>Z3_ast_vector;solver_get_levels:(c:Z3_context,s:Z3_solver,literals:Z3_ast_vector,levels:unsigned[])=>void;solver_next_split:(c:Z3_context,cb:Z3_solver_callback,t:Z3_ast,idx:unsigned,phase:Z3_lbool)=>void;solver_propagate_declare:(c:Z3_context,name:Z3_symbol,domain:Z3_sort[],range:Z3_sort)=>Z3_func_decl;solver_propagate_register:(c:Z3_context,s:Z3_solver,e:Z3_ast)=>void;solver_propagate_register_cb:(c:Z3_context,cb:Z3_solver_callback,e:Z3_ast)=>void;solver_propagate_consequence:(c:Z3_context,UNNAMED:Z3_solver_callback,fixed:Z3_ast[],eq_lhs:Z3_ast[],eq_rhs:Z3_ast[],conseq:Z3_ast)=>void;solver_check:(c:Z3_context,s:Z3_solver)=>Promise<Z3_lbool>;solver_check_assumptions:(c:Z3_context,s:Z3_solver,assumptions:Z3_ast[])=>Promise<Z3_lbool>;get_implied_equalities:(c:Z3_context,s:Z3_solver,terms:Z3_ast[])=>{rv:Z3_lbool;class_ids:unsigned[];};solver_get_consequences:(c:Z3_context,s:Z3_solver,assumptions:Z3_ast_vector,variables:Z3_ast_vector,consequences:Z3_ast_vector)=>Promise<Z3_lbool>;solver_cube:(c:Z3_context,s:Z3_solver,vars:Z3_ast_vector,backtrack_level:unsigned)=>Promise<Z3_ast_vector>;solver_get_model:(c:Z3_context,s:Z3_solver)=>Z3_model;solver_get_proof:(c:Z3_context,s:Z3_solver)=>Z3_ast;solver_get_unsat_core:(c:Z3_context,s:Z3_solver)=>Z3_ast_vector;solver_get_reason_unknown:(c:Z3_context,s:Z3_solver)=>string;solver_get_statistics:(c:Z3_context,s:Z3_solver)=>Z3_stats;solver_to_string:(c:Z3_context,s:Z3_solver)=>string;solver_to_dimacs_string:(c:Z3_context,s:Z3_solver,include_names:boolean)=>string;stats_to_string:(c:Z3_context,s:Z3_stats)=>string;stats_inc_ref:(c:Z3_context,s:Z3_stats)=>void;stats_dec_ref:(c:Z3_context,s:Z3_stats)=>void;stats_size:(c:Z3_context,s:Z3_stats)=>unsigned;stats_get_key:(c:Z3_context,s:Z3_stats,idx:unsigned)=>string;stats_is_uint:(c:Z3_context,s:Z3_stats,idx:unsigned)=>boolean;stats_is_double:(c:Z3_context,s:Z3_stats,idx:unsigned)=>boolean;stats_get_uint_value:(c:Z3_context,s:Z3_stats,idx:unsigned)=>unsigned;stats_get_double_value:(c:Z3_context,s:Z3_stats,idx:unsigned)=>double;get_estimated_alloc_size:()=>uint64_t;algebraic_is_value:(c:Z3_context,a:Z3_ast)=>boolean;algebraic_is_pos:(c:Z3_context,a:Z3_ast)=>boolean;algebraic_is_neg:(c:Z3_context,a:Z3_ast)=>boolean;algebraic_is_zero:(c:Z3_context,a:Z3_ast)=>boolean;algebraic_sign:(c:Z3_context,a:Z3_ast)=>int;algebraic_add:(c:Z3_context,a:Z3_ast,b:Z3_ast)=>Z3_ast;algebraic_sub:(c:Z3_context,a:Z3_ast,b:Z3_ast)=>Z3_ast;algebraic_mul:(c:Z3_context,a:Z3_ast,b:Z3_ast)=>Z3_ast;algebraic_div:(c:Z3_context,a:Z3_ast,b:Z3_ast)=>Z3_ast;algebraic_root:(c:Z3_context,a:Z3_ast,k:unsigned)=>Z3_ast;algebraic_power:(c:Z3_context,a:Z3_ast,k:unsigned)=>Z3_ast;algebraic_lt:(c:Z3_context,a:Z3_ast,b:Z3_ast)=>boolean;algebraic_gt:(c:Z3_context,a:Z3_ast,b:Z3_ast)=>boolean;algebraic_le:(c:Z3_context,a:Z3_ast,b:Z3_ast)=>boolean;algebraic_ge:(c:Z3_context,a:Z3_ast,b:Z3_ast)=>boolean;algebraic_eq:(c:Z3_context,a:Z3_ast,b:Z3_ast)=>boolean;algebraic_neq:(c:Z3_context,a:Z3_ast,b:Z3_ast)=>boolean;algebraic_roots:(c:Z3_context,p:Z3_ast,a:Z3_ast[])=>Promise<Z3_ast_vector>;algebraic_eval:(c:Z3_context,p:Z3_ast,a:Z3_ast[])=>Promise<int>;algebraic_get_poly:(c:Z3_context,a:Z3_ast)=>Z3_ast_vector;algebraic_get_i:(c:Z3_context,a:Z3_ast)=>unsigned;mk_ast_vector:(c:Z3_context)=>Z3_ast_vector;ast_vector_inc_ref:(c:Z3_context,v:Z3_ast_vector)=>void;ast_vector_dec_ref:(c:Z3_context,v:Z3_ast_vector)=>void;ast_vector_size:(c:Z3_context,v:Z3_ast_vector)=>unsigned;ast_vector_get:(c:Z3_context,v:Z3_ast_vector,i:unsigned)=>Z3_ast;ast_vector_set:(c:Z3_context,v:Z3_ast_vector,i:unsigned,a:Z3_ast)=>void;ast_vector_resize:(c:Z3_context,v:Z3_ast_vector,n:unsigned)=>void;ast_vector_push:(c:Z3_context,v:Z3_ast_vector,a:Z3_ast)=>void;ast_vector_translate:(s:Z3_context,v:Z3_ast_vector,t:Z3_context)=>Z3_ast_vector;ast_vector_to_string:(c:Z3_context,v:Z3_ast_vector)=>string;mk_ast_map:(c:Z3_context)=>Z3_ast_map;ast_map_inc_ref:(c:Z3_context,m:Z3_ast_map)=>void;ast_map_dec_ref:(c:Z3_context,m:Z3_ast_map)=>void;ast_map_contains:(c:Z3_context,m:Z3_ast_map,k:Z3_ast)=>boolean;ast_map_find:(c:Z3_context,m:Z3_ast_map,k:Z3_ast)=>Z3_ast;ast_map_insert:(c:Z3_context,m:Z3_ast_map,k:Z3_ast,v:Z3_ast)=>void;ast_map_erase:(c:Z3_context,m:Z3_ast_map,k:Z3_ast)=>void;ast_map_reset:(c:Z3_context,m:Z3_ast_map)=>void;ast_map_size:(c:Z3_context,m:Z3_ast_map)=>unsigned;ast_map_keys:(c:Z3_context,m:Z3_ast_map)=>Z3_ast_vector;ast_map_to_string:(c:Z3_context,m:Z3_ast_map)=>string;mk_fixedpoint:(c:Z3_context)=>Z3_fixedpoint;fixedpoint_inc_ref:(c:Z3_context,d:Z3_fixedpoint)=>void;fixedpoint_dec_ref:(c:Z3_context,d:Z3_fixedpoint)=>void;fixedpoint_add_rule:(c:Z3_context,d:Z3_fixedpoint,rule:Z3_ast,name:Z3_symbol)=>void;fixedpoint_add_fact:(c:Z3_context,d:Z3_fixedpoint,r:Z3_func_decl,args:unsigned[])=>void;fixedpoint_assert:(c:Z3_context,d:Z3_fixedpoint,axiom:Z3_ast)=>void;fixedpoint_query:(c:Z3_context,d:Z3_fixedpoint,query:Z3_ast)=>Promise<Z3_lbool>;fixedpoint_query_relations:(c:Z3_context,d:Z3_fixedpoint,relations:Z3_func_decl[])=>Promise<Z3_lbool>;fixedpoint_get_answer:(c:Z3_context,d:Z3_fixedpoint)=>Z3_ast;fixedpoint_get_reason_unknown:(c:Z3_context,d:Z3_fixedpoint)=>string;fixedpoint_update_rule:(c:Z3_context,d:Z3_fixedpoint,a:Z3_ast,name:Z3_symbol)=>void;fixedpoint_get_num_levels:(c:Z3_context,d:Z3_fixedpoint,pred:Z3_func_decl)=>unsigned;fixedpoint_get_cover_delta:(c:Z3_context,d:Z3_fixedpoint,level:int,pred:Z3_func_decl)=>Z3_ast;fixedpoint_add_cover:(c:Z3_context,d:Z3_fixedpoint,level:int,pred:Z3_func_decl,property:Z3_ast)=>void;fixedpoint_get_statistics:(c:Z3_context,d:Z3_fixedpoint)=>Z3_stats;fixedpoint_register_relation:(c:Z3_context,d:Z3_fixedpoint,f:Z3_func_decl)=>void;fixedpoint_set_predicate_representation:(c:Z3_context,d:Z3_fixedpoint,f:Z3_func_decl,relation_kinds:Z3_symbol[])=>void;fixedpoint_get_rules:(c:Z3_context,f:Z3_fixedpoint)=>Z3_ast_vector;fixedpoint_get_assertions:(c:Z3_context,f:Z3_fixedpoint)=>Z3_ast_vector;fixedpoint_set_params:(c:Z3_context,f:Z3_fixedpoint,p:Z3_params)=>void;fixedpoint_get_help:(c:Z3_context,f:Z3_fixedpoint)=>string;fixedpoint_get_param_descrs:(c:Z3_context,f:Z3_fixedpoint)=>Z3_param_descrs;fixedpoint_to_string:(c:Z3_context,f:Z3_fixedpoint,queries:Z3_ast[])=>string;fixedpoint_from_string:(c:Z3_context,f:Z3_fixedpoint,s:string)=>Z3_ast_vector;fixedpoint_from_file:(c:Z3_context,f:Z3_fixedpoint,s:string)=>Z3_ast_vector;mk_fpa_rounding_mode_sort:(c:Z3_context)=>Z3_sort;mk_fpa_round_nearest_ties_to_even:(c:Z3_context)=>Z3_ast;mk_fpa_rne:(c:Z3_context)=>Z3_ast;mk_fpa_round_nearest_ties_to_away:(c:Z3_context)=>Z3_ast;mk_fpa_rna:(c:Z3_context)=>Z3_ast;mk_fpa_round_toward_positive:(c:Z3_context)=>Z3_ast;mk_fpa_rtp:(c:Z3_context)=>Z3_ast;mk_fpa_round_toward_negative:(c:Z3_context)=>Z3_ast;mk_fpa_rtn:(c:Z3_context)=>Z3_ast;mk_fpa_round_toward_zero:(c:Z3_context)=>Z3_ast;mk_fpa_rtz:(c:Z3_context)=>Z3_ast;mk_fpa_sort:(c:Z3_context,ebits:unsigned,sbits:unsigned)=>Z3_sort;mk_fpa_sort_half:(c:Z3_context)=>Z3_sort;mk_fpa_sort_16:(c:Z3_context)=>Z3_sort;mk_fpa_sort_single:(c:Z3_context)=>Z3_sort;mk_fpa_sort_32:(c:Z3_context)=>Z3_sort;mk_fpa_sort_double:(c:Z3_context)=>Z3_sort;mk_fpa_sort_64:(c:Z3_context)=>Z3_sort;mk_fpa_sort_quadruple:(c:Z3_context)=>Z3_sort;mk_fpa_sort_128:(c:Z3_context)=>Z3_sort;mk_fpa_nan:(c:Z3_context,s:Z3_sort)=>Z3_ast;mk_fpa_inf:(c:Z3_context,s:Z3_sort,negative:boolean)=>Z3_ast;mk_fpa_zero:(c:Z3_context,s:Z3_sort,negative:boolean)=>Z3_ast;mk_fpa_fp:(c:Z3_context,sgn:Z3_ast,exp:Z3_ast,sig:Z3_ast)=>Z3_ast;mk_fpa_numeral_float:(c:Z3_context,v:float,ty:Z3_sort)=>Z3_ast;mk_fpa_numeral_double:(c:Z3_context,v:double,ty:Z3_sort)=>Z3_ast;mk_fpa_numeral_int:(c:Z3_context,v:int,ty:Z3_sort)=>Z3_ast;mk_fpa_numeral_int_uint:(c:Z3_context,sgn:boolean,exp:int,sig:unsigned,ty:Z3_sort)=>Z3_ast;mk_fpa_numeral_int64_uint64:(c:Z3_context,sgn:boolean,exp:int64_t,sig:uint64_t,ty:Z3_sort)=>Z3_ast;mk_fpa_abs:(c:Z3_context,t:Z3_ast)=>Z3_ast;mk_fpa_neg:(c:Z3_context,t:Z3_ast)=>Z3_ast;mk_fpa_add:(c:Z3_context,rm:Z3_ast,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_fpa_sub:(c:Z3_context,rm:Z3_ast,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_fpa_mul:(c:Z3_context,rm:Z3_ast,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_fpa_div:(c:Z3_context,rm:Z3_ast,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_fpa_fma:(c:Z3_context,rm:Z3_ast,t1:Z3_ast,t2:Z3_ast,t3:Z3_ast)=>Z3_ast;mk_fpa_sqrt:(c:Z3_context,rm:Z3_ast,t:Z3_ast)=>Z3_ast;mk_fpa_rem:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_fpa_round_to_integral:(c:Z3_context,rm:Z3_ast,t:Z3_ast)=>Z3_ast;mk_fpa_min:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_fpa_max:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_fpa_leq:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_fpa_lt:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_fpa_geq:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_fpa_gt:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_fpa_eq:(c:Z3_context,t1:Z3_ast,t2:Z3_ast)=>Z3_ast;mk_fpa_is_normal:(c:Z3_context,t:Z3_ast)=>Z3_ast;mk_fpa_is_subnormal:(c:Z3_context,t:Z3_ast)=>Z3_ast;mk_fpa_is_zero:(c:Z3_context,t:Z3_ast)=>Z3_ast;mk_fpa_is_infinite:(c:Z3_context,t:Z3_ast)=>Z3_ast;mk_fpa_is_nan:(c:Z3_context,t:Z3_ast)=>Z3_ast;mk_fpa_is_negative:(c:Z3_context,t:Z3_ast)=>Z3_ast;mk_fpa_is_positive:(c:Z3_context,t:Z3_ast)=>Z3_ast;mk_fpa_to_fp_bv:(c:Z3_context,bv:Z3_ast,s:Z3_sort)=>Z3_ast;mk_fpa_to_fp_float:(c:Z3_context,rm:Z3_ast,t:Z3_ast,s:Z3_sort)=>Z3_ast;mk_fpa_to_fp_real:(c:Z3_context,rm:Z3_ast,t:Z3_ast,s:Z3_sort)=>Z3_ast;mk_fpa_to_fp_signed:(c:Z3_context,rm:Z3_ast,t:Z3_ast,s:Z3_sort)=>Z3_ast;mk_fpa_to_fp_unsigned:(c:Z3_context,rm:Z3_ast,t:Z3_ast,s:Z3_sort)=>Z3_ast;mk_fpa_to_ubv:(c:Z3_context,rm:Z3_ast,t:Z3_ast,sz:unsigned)=>Z3_ast;mk_fpa_to_sbv:(c:Z3_context,rm:Z3_ast,t:Z3_ast,sz:unsigned)=>Z3_ast;mk_fpa_to_real:(c:Z3_context,t:Z3_ast)=>Z3_ast;fpa_get_ebits:(c:Z3_context,s:Z3_sort)=>unsigned;fpa_get_sbits:(c:Z3_context,s:Z3_sort)=>unsigned;fpa_is_numeral_nan:(c:Z3_context,t:Z3_ast)=>boolean;fpa_is_numeral_inf:(c:Z3_context,t:Z3_ast)=>boolean;fpa_is_numeral_zero:(c:Z3_context,t:Z3_ast)=>boolean;fpa_is_numeral_normal:(c:Z3_context,t:Z3_ast)=>boolean;fpa_is_numeral_subnormal:(c:Z3_context,t:Z3_ast)=>boolean;fpa_is_numeral_positive:(c:Z3_context,t:Z3_ast)=>boolean;fpa_is_numeral_negative:(c:Z3_context,t:Z3_ast)=>boolean;fpa_get_numeral_sign_bv:(c:Z3_context,t:Z3_ast)=>Z3_ast;fpa_get_numeral_significand_bv:(c:Z3_context,t:Z3_ast)=>Z3_ast;fpa_get_numeral_sign:(c:Z3_context,t:Z3_ast)=>int|null;fpa_get_numeral_significand_string:(c:Z3_context,t:Z3_ast)=>string;fpa_get_numeral_significand_uint64:(c:Z3_context,t:Z3_ast)=>uint64_t|null;fpa_get_numeral_exponent_string:(c:Z3_context,t:Z3_ast,biased:boolean)=>string;fpa_get_numeral_exponent_int64:(c:Z3_context,t:Z3_ast,biased:boolean)=>int64_t|null;fpa_get_numeral_exponent_bv:(c:Z3_context,t:Z3_ast,biased:boolean)=>Z3_ast;mk_fpa_to_ieee_bv:(c:Z3_context,t:Z3_ast)=>Z3_ast;mk_fpa_to_fp_int_real:(c:Z3_context,rm:Z3_ast,exp:Z3_ast,sig:Z3_ast,s:Z3_sort)=>Z3_ast;mk_optimize:(c:Z3_context)=>Z3_optimize;optimize_inc_ref:(c:Z3_context,d:Z3_optimize)=>void;optimize_dec_ref:(c:Z3_context,d:Z3_optimize)=>void;optimize_assert:(c:Z3_context,o:Z3_optimize,a:Z3_ast)=>void;optimize_assert_and_track:(c:Z3_context,o:Z3_optimize,a:Z3_ast,t:Z3_ast)=>void;optimize_assert_soft:(c:Z3_context,o:Z3_optimize,a:Z3_ast,weight:string,id:Z3_symbol)=>unsigned;optimize_maximize:(c:Z3_context,o:Z3_optimize,t:Z3_ast)=>unsigned;optimize_minimize:(c:Z3_context,o:Z3_optimize,t:Z3_ast)=>unsigned;optimize_push:(c:Z3_context,d:Z3_optimize)=>void;optimize_pop:(c:Z3_context,d:Z3_optimize)=>void;optimize_check:(c:Z3_context,o:Z3_optimize,assumptions:Z3_ast[])=>Promise<Z3_lbool>;optimize_get_reason_unknown:(c:Z3_context,d:Z3_optimize)=>string;optimize_get_model:(c:Z3_context,o:Z3_optimize)=>Z3_model;optimize_get_unsat_core:(c:Z3_context,o:Z3_optimize)=>Z3_ast_vector;optimize_set_params:(c:Z3_context,o:Z3_optimize,p:Z3_params)=>void;optimize_get_param_descrs:(c:Z3_context,o:Z3_optimize)=>Z3_param_descrs;optimize_get_lower:(c:Z3_context,o:Z3_optimize,idx:unsigned)=>Z3_ast;optimize_get_upper:(c:Z3_context,o:Z3_optimize,idx:unsigned)=>Z3_ast;optimize_get_lower_as_vector:(c:Z3_context,o:Z3_optimize,idx:unsigned)=>Z3_ast_vector;optimize_get_upper_as_vector:(c:Z3_context,o:Z3_optimize,idx:unsigned)=>Z3_ast_vector;optimize_to_string:(c:Z3_context,o:Z3_optimize)=>string;optimize_from_string:(c:Z3_context,o:Z3_optimize,s:string)=>void;optimize_from_file:(c:Z3_context,o:Z3_optimize,s:string)=>void;optimize_get_help:(c:Z3_context,t:Z3_optimize)=>string;optimize_get_statistics:(c:Z3_context,d:Z3_optimize)=>Z3_stats;optimize_get_assertions:(c:Z3_context,o:Z3_optimize)=>Z3_ast_vector;optimize_get_objectives:(c:Z3_context,o:Z3_optimize)=>Z3_ast_vector;polynomial_subresultants:(c:Z3_context,p:Z3_ast,q:Z3_ast,x:Z3_ast)=>Promise<Z3_ast_vector>;rcf_del:(c:Z3_context,a:Z3_rcf_num)=>void;rcf_mk_rational:(c:Z3_context,val:string)=>Z3_rcf_num;rcf_mk_small_int:(c:Z3_context,val:int)=>Z3_rcf_num;rcf_mk_pi:(c:Z3_context)=>Z3_rcf_num;rcf_mk_e:(c:Z3_context)=>Z3_rcf_num;rcf_mk_infinitesimal:(c:Z3_context)=>Z3_rcf_num;rcf_mk_roots:(c:Z3_context,a:Z3_rcf_num[])=>{rv:unsigned;roots:Z3_rcf_num[];};rcf_add:(c:Z3_context,a:Z3_rcf_num,b:Z3_rcf_num)=>Z3_rcf_num;rcf_sub:(c:Z3_context,a:Z3_rcf_num,b:Z3_rcf_num)=>Z3_rcf_num;rcf_mul:(c:Z3_context,a:Z3_rcf_num,b:Z3_rcf_num)=>Z3_rcf_num;rcf_div:(c:Z3_context,a:Z3_rcf_num,b:Z3_rcf_num)=>Z3_rcf_num;rcf_neg:(c:Z3_context,a:Z3_rcf_num)=>Z3_rcf_num;rcf_inv:(c:Z3_context,a:Z3_rcf_num)=>Z3_rcf_num;rcf_power:(c:Z3_context,a:Z3_rcf_num,k:unsigned)=>Z3_rcf_num;rcf_lt:(c:Z3_context,a:Z3_rcf_num,b:Z3_rcf_num)=>boolean;rcf_gt:(c:Z3_context,a:Z3_rcf_num,b:Z3_rcf_num)=>boolean;rcf_le:(c:Z3_context,a:Z3_rcf_num,b:Z3_rcf_num)=>boolean;rcf_ge:(c:Z3_context,a:Z3_rcf_num,b:Z3_rcf_num)=>boolean;rcf_eq:(c:Z3_context,a:Z3_rcf_num,b:Z3_rcf_num)=>boolean;rcf_neq:(c:Z3_context,a:Z3_rcf_num,b:Z3_rcf_num)=>boolean;rcf_num_to_string:(c:Z3_context,a:Z3_rcf_num,compact:boolean,html:boolean)=>string;rcf_num_to_decimal_string:(c:Z3_context,a:Z3_rcf_num,prec:unsigned)=>string;rcf_get_numerator_denominator:(c:Z3_context,a:Z3_rcf_num)=>{n:Z3_rcf_num;d:Z3_rcf_num;};fixedpoint_query_from_lvl:(c:Z3_context,d:Z3_fixedpoint,query:Z3_ast,lvl:unsigned)=>Promise<Z3_lbool>;fixedpoint_get_ground_sat_answer:(c:Z3_context,d:Z3_fixedpoint)=>Z3_ast;fixedpoint_get_rules_along_trace:(c:Z3_context,d:Z3_fixedpoint)=>Z3_ast_vector;fixedpoint_get_rule_names_along_trace:(c:Z3_context,d:Z3_fixedpoint)=>Z3_symbol;fixedpoint_add_invariant:(c:Z3_context,d:Z3_fixedpoint,pred:Z3_func_decl,property:Z3_ast)=>void;fixedpoint_get_reachable:(c:Z3_context,d:Z3_fixedpoint,pred:Z3_func_decl)=>Z3_ast;qe_model_project:(c:Z3_context,m:Z3_model,bound:Z3_app[],body:Z3_ast)=>Z3_ast;qe_model_project_skolem:(c:Z3_context,m:Z3_model,bound:Z3_app[],body:Z3_ast,map:Z3_ast_map)=>Z3_ast;model_extrapolate:(c:Z3_context,m:Z3_model,fml:Z3_ast)=>Z3_ast;qe_lite:(c:Z3_context,vars:Z3_ast_vector,body:Z3_ast)=>Z3_ast;};}>;export{};", "\\node_modules\\z3-solver\\build\\node.d.ts": "import{Z3HighLevel}from'./high-level';import{Z3LowLevel}from'./low-level';export*from'./high-level/types';export{Z3Core,Z3LowLevel}from'./low-level';export*from'./low-level/types.__GENERATED__';export declare function init():Promise<Z3HighLevel&Z3LowLevel>;" };
var ts = __toESM(require("typescript"));
const MAIN = "main.ts";
function compile(source, fixupErrorLocations) {
  let libs = define_TS_LIBS_default;
  let options = {
    module: ts.ModuleKind.None,
    removeComments: true,
    lib: ["lib.es2021.d.ts"],
    target: ts.ScriptTarget.ES2021,
    strict: true
  };
  let createdFiles = { __proto__: null };
  let host = {
    readFile: (fileName) => {
      if (fileName in libs) {
        return libs[fileName];
      }
      return void 0;
    },
    writeFile: (fileName, content) => {
      createdFiles[fileName] = content;
    },
    getSourceFile: (fileName, languageVersion) => {
      if (fileName === MAIN) {
        return source;
      }
      let sourceText = host.readFile(fileName);
      let result = sourceText !== void 0 ? ts.createSourceFile(fileName, sourceText, languageVersion) : void 0;
      if (fileName.includes("main"))
        debugger;
      return result;
    },
    getDefaultLibFileName: () => "lib.d.ts",
    getCurrentDirectory: () => "/",
    getDirectories: () => [],
    getCanonicalFileName: (fileName) => fileName,
    getNewLine: () => "\n",
    useCaseSensitiveFileNames: () => true,
    fileExists: (fileName) => {
      return false;
    },
    resolveModuleNames
  };
  function resolveModuleNames(moduleNames, containingFile) {
    return moduleNames.map((name) => {
      if (name === "z3-solver") {
        return {
          resolvedFileName: "/node_modules/z3-solver/build/browser.d.ts",
          isExternalLibraryImport: true
        };
      } else if (containingFile.startsWith("/node_modules/z3-solver/build/")) {
        let root = containingFile.split("/").slice(0, -1).join("/");
        let joined = root + "/" + name;
        joined = joined.replace(/(\/[^/]+\/\.\.\/)|(\/\.\/)/g, "/");
        for (let suffix of ["", ".d.ts", "/index.d.ts"]) {
          let candidate = joined + suffix;
          if (candidate in libs) {
            return {
              resolvedFileName: candidate,
              isExternalLibraryImport: false
            };
          }
        }
        throw new Error(`relative import of z3-solver internal file ${name} for ${containingFile} failed`);
      }
      throw new Error(`could not find module ${name}`);
    });
  }
  let program = ts.createProgram([MAIN], options, host);
  let emitResult = program.emit();
  let diagnostics = ts.getPreEmitDiagnostics(program).concat(emitResult.diagnostics).map((diagnostic) => {
    if (diagnostic.file) {
      let { line, character: column } = ts.getLineAndCharacterOfPosition(diagnostic.file, diagnostic.start);
      ({ line, column } = fixupErrorLocations({ line, column }));
      let message = ts.flattenDiagnosticMessageText(diagnostic.messageText, "\n");
      return `${diagnostic.file.fileName} (${line + 1},${column + 1}): ${message}`;
    } else {
      return ts.flattenDiagnosticMessageText(diagnostic.messageText, "\n");
    }
  });
  if (diagnostics.length > 0) {
    return { success: false, message: diagnostics.join("\n") };
  }
  if (emitResult.emitSkipped || !("main.js" in createdFiles)) {
    return { success: false, message: "typechecking failed with unknown error" };
  }
  return { success: true, result: createdFiles["main.js"] };
}
function compileZ3JS(src) {
  let imports = `
  import type { init as initT, Model, Solver, BitVecNum, AstVector, Arith } from 'z3-solver';
  declare let init: typeof initT;
  declare let { Context, setParam }: Awaited<ReturnType<typeof init>>;
  declare let Z3: ReturnType<typeof Context<'main'>>;
  `;
  let wrapped = `
${imports}
export = (async () => {
${src}
})();
`;
  let offset = imports.split("\n").length + 2;
  function updateLineNums({ line, column }) {
    return { line: line - offset, column };
  }
  let sourceFile = ts.createSourceFile(MAIN, wrapped, ts.ScriptTarget.ES2021);
  if (sourceFile.statements.length !== 5) {
    throw new Error("failed to parse input: wrong number of statements");
  }
  let iife = sourceFile.statements[4];
  if (!ts.isCallExpression(iife.expression) || !ts.isParenthesizedExpression(iife.expression.expression) || !ts.isArrowFunction(iife.expression.expression.expression)) {
    throw new Error("failed to parse input: last line is not call");
  }
  let arrow = iife.expression.expression.expression;
  if (!ts.isBlock(arrow.body)) {
    throw new Error("failed to parse input: arrow body is not block");
  }
  let bodyLen = arrow.body.statements.length;
  if (bodyLen > 0) {
    let last = arrow.body.statements[bodyLen - 1];
    if (ts.isExpressionStatement(last)) {
      arrow.body.statements[bodyLen - 1] = ts.factory.createReturnStatement(last.expression);
    }
  }
  return compile(sourceFile, updateLineNums);
}
async function evalZ3JS(Z3, src) {
  let result = compileZ3JS(src);
  if (!result.success) {
    return Promise.reject(new Error(result.message));
  }
  let wrapped = `
(function (Z3, setParam) {
  'use strict';
  let module = {};
  ${result.result}
  return module.exports;
})
  `;
  return await (0, eval)(wrapped)(Z3.Context("main"), Z3.setParam);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  compileZ3JS,
  evalZ3JS
});
